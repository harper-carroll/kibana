Protocol Name, Long Protocol Name, Attribute Name, Full Attribute Name, Attribute Type, Attribute Description
0zz0, 0zz0.com, end, endQ_PROTO_0ZZ0, Void, "Indicates the end of a top level event."
0zz0, 0zz0.com, login, loginQ_PROTO_0ZZ0, bytes, "User's login string."
0zz0, 0zz0.com, password, passwordQ_PROTO_0ZZ0, bytes, "User's password string."
0zz0, 0zz0.com, action, actionQ_PROTO_0ZZ0, bytes, "Indicates the action executed by the user."
0zz0, 0zz0.com, filename, filenameQ_PROTO_0ZZ0, bytes, "Name of the transferred file."
0zz0, 0zz0.com, filesize, filesizeQ_PROTO_0ZZ0, uint32, "Size (byte) of the transferred file."
0zz0, 0zz0.com, upload_description, upload_descriptionQ_PROTO_0ZZ0, bytes, "Description of the uploaded file."
0zz0, 0zz0.com, sidc, sidcQ_PROTO_0ZZ0, bytes, "Session identifier used to find information about file which has been uploaded."
0zz0, 0zz0.com, sid, sidQ_PROTO_0ZZ0, bytes, "Session identifier used to find user information."
0zz0, 0zz0.com, email_address, email_addressQ_PROTO_0ZZ0, bytes, "User's email address."
0zz0, 0zz0.com, email_invited, email_invitedQ_PROTO_0ZZ0, bytes, "Email to whom the invitation has been sent."
0zz0, 0zz0.com, name, nameQ_PROTO_0ZZ0, bytes, "Name the user."
0zz0, 0zz0.com, name_invited, name_invitedQ_PROTO_0ZZ0, bytes, "Name of the user to whom the invitation has been sent."
0zz0, 0zz0.com, download_url, download_urlQ_PROTO_0ZZ0, bytes, "Link of the downloaded file."
adc, Advanced Direct Connect, file_chunk_data_offset, file_chunk_data_offsetQ_PROTO_ADC, uint32, "Offset of the transferred data."
adc, Advanced Direct Connect, file_chunk_len, file_chunk_lenQ_PROTO_ADC, uint32, "Size of the transferred piece."
adc, Advanced Direct Connect, file_hash, file_hashQ_PROTO_ADC, bytes, "Hash of the transferred file."
adc, Advanced Direct Connect, filesize, filesizeQ_PROTO_ADC, uint32, "Size (byte) of the transferred file."
adc, Advanced Direct Connect, filename, filenameQ_PROTO_ADC, bytes, "Name of the transferred file."
adc, Advanced Direct Connect, client_version, client_versionQ_PROTO_ADC, bytes, "Name and version of the client used by the peer."
adc, Advanced Direct Connect, peer_hash, peer_hashQ_PROTO_ADC, bytes, "Hash of the user ID, used to communicate with the hub and the other clients."
adc, Advanced Direct Connect, peer_id, peer_idQ_PROTO_ADC, bytes, "User id assigned by the hub to the client and notified through a SID command."
adc, Advanced Direct Connect, query, queryQ_PROTO_ADC, bytes, "Query sent to find a file."
adc, Advanced Direct Connect, command_code, command_codeQ_PROTO_ADC, bytes, "Message action, as extracted from the three letters following the message type."
adc, Advanced Direct Connect, command_type, command_typeQ_PROTO_ADC, bytes, "Command type extracted from the first character of the message."
adobe_update, Adobe Update Manager, component_list_name, component_list_nameQ_PROTO_ADOBE_UPDATE, bytes, "Name of a piece of Adobe software we have a new version for."
adobe_update, Adobe Update Manager, component_list_desc, component_list_descQ_PROTO_ADOBE_UPDATE, bytes, "Short component update description, including version number."
adobe_update, Adobe Update Manager, component_list_version, component_list_versionQ_PROTO_ADOBE_UPDATE, bytes, "Last component version available."
adobe_update, Adobe Update Manager, component_list_url, component_list_urlQ_PROTO_ADOBE_UPDATE, bytes, "Component update download link."
adobe_update, Adobe Update Manager, update_manager, update_managerQ_PROTO_ADOBE_UPDATE, bytes, "Adobe Update Manager version and identifier."
adobe_update, Adobe Update Manager, product_name, product_nameQ_PROTO_ADOBE_UPDATE, bytes, "User's request for a product update."
adobe_update, Adobe Update Manager, action, actionQ_PROTO_ADOBE_UPDATE, bytes, "Indicates the action executed by the user."
aim, AOL Instant Messenger (formerly OSCAR), login, loginQ_PROTO_AIM, bytes, "User's login string."
aim, AOL Instant Messenger (formerly OSCAR), channel, channelQ_PROTO_AIM, bytes, "Chat room name."
aim, AOL Instant Messenger (formerly OSCAR), message, messageQ_PROTO_AIM, bytes, "Contains the chat message."
aim, AOL Instant Messenger (formerly OSCAR), message_raw, message_rawQ_PROTO_AIM, bytes, "Message raw value."
aim, AOL Instant Messenger (formerly OSCAR), sender, senderQ_PROTO_AIM, bytes, "Contains the identity of the sender of a chat session or a file transfer."
aim, AOL Instant Messenger (formerly OSCAR), receiver, receiverQ_PROTO_AIM, bytes, "Contains the identity of the receiver for a chat message or a file transfer."
aim, AOL Instant Messenger (formerly OSCAR), user_email, user_emailQ_PROTO_AIM, bytes, "Email Address of an AIN user."
aim, AOL Instant Messenger (formerly OSCAR), user_agent, user_agentQ_PROTO_AIM, bytes, "Name of the software used."
aim, AOL Instant Messenger (formerly OSCAR), client_status, client_statusQ_PROTO_AIM, bytes, "Status of connected user."
aim, AOL Instant Messenger (formerly OSCAR), service, serviceQ_PROTO_AIM, bytes, "Current service identification string."
aim, AOL Instant Messenger (formerly OSCAR), filename, filenameQ_PROTO_AIM, bytes, "Name of the transferred file."
aim, AOL Instant Messenger (formerly OSCAR), filename_encoding, filename_encodingQ_PROTO_AIM, bytes, "Encoding of the transferred file name."
aim, AOL Instant Messenger (formerly OSCAR), filesize, filesizeQ_PROTO_AIM, uint32, "Size (byte) of the transferred file."
aim, AOL Instant Messenger (formerly OSCAR), version, versionQ_PROTO_AIM, bytes, "AIM software version."
aim, AOL Instant Messenger (formerly OSCAR), file_sender, file_senderQ_PROTO_AIM, bytes, "Contains the identity of the sender of a file transfer."
aim, AOL Instant Messenger (formerly OSCAR), file_receiver, file_receiverQ_PROTO_AIM, bytes, "Contains the identity of the receiver for a file transfer."
aim, AOL Instant Messenger (formerly OSCAR), contact_login, contact_loginQ_PROTO_AIM, bytes, "Contact login."
aim, AOL Instant Messenger (formerly OSCAR), contact_status, contact_statusQ_PROTO_AIM, bytes, "Contact status."
aim, AOL Instant Messenger (formerly OSCAR), icon_buddy, icon_buddyQ_PROTO_AIM, bytes, "The contact whose icon was downloaded."
aim, AOL Instant Messenger (formerly OSCAR), internal_ip_address, internal_ip_addressQ_PROTO_AIM, string, "Internal IP address of the contact."
aim, AOL Instant Messenger (formerly OSCAR), external_ip_address, external_ip_addressQ_PROTO_AIM, string, "External IP address of the contact."
aim_express, AIM express, login, loginQ_PROTO_AIM_EXPRESS, bytes, "User's login string."
aim_express, AIM express, message, messageQ_PROTO_AIM_EXPRESS, bytes, "Contains the chat message."
aim_express, AIM express, sender, senderQ_PROTO_AIM_EXPRESS, bytes, "Contains the identity of the sender of a chat session or a file transfer."
aim_express, AIM express, receiver, receiverQ_PROTO_AIM_EXPRESS, bytes, "Contains the identity of the receiver for a chat message or a file transfer."
aim_express, AIM express, chat_id, chat_idQ_PROTO_AIM_EXPRESS, bytes, "Window chat id."
aim_express, AIM express, chat_type, chat_typeQ_PROTO_AIM_EXPRESS, bytes, "Message type."
aim_express, AIM express, version, versionQ_PROTO_AIM_EXPRESS, bytes, "Client version."
aim_express, AIM express, contact_login, contact_loginQ_PROTO_AIM_EXPRESS, bytes, "Contact login."
aim_express, AIM express, contact_status, contact_statusQ_PROTO_AIM_EXPRESS, bytes, "Contact status."
aim_express, AIM express, client_status, client_statusQ_PROTO_AIM_EXPRESS, bytes, "Status of connected user."
aim_transfer, AIM Transfer, filename, filenameQ_PROTO_AIM_TRANSFER, bytes, "Name of the transferred file."
aim_transfer, AIM Transfer, filename_encoding, filename_encodingQ_PROTO_AIM_TRANSFER, bytes, "Encoding of the transferred file name."
aim_transfer, AIM Transfer, filesize, filesizeQ_PROTO_AIM_TRANSFER, uint32, "Size (byte) of the transferred file."
aims, Secure AIM, login, loginQ_PROTO_AIMS, bytes, "User's login string."
amqp, Advance Message Queuing Protocol, response_time, response_timeQ_PROTO_AMQP, string, "Server response time during the connection procedure."
amqp, Advance Message Queuing Protocol, exchange_type, exchange_typeQ_PROTO_AMQP, bytes, "Mode of AMQP exchange."
amqp, Advance Message Queuing Protocol, routing_key, routing_keyQ_PROTO_AMQP, bytes, "Virtual address used to route a message."
amqp, Advance Message Queuing Protocol, correlation_id, correlation_idQ_PROTO_AMQP, bytes, "Identifier used to correlate the application."
amqp, Advance Message Queuing Protocol, replyto, replytoQ_PROTO_AMQP, bytes, "Addresse of the reply queue."
apple_update, Apple Update, pkg_name, pkg_nameQ_PROTO_APPLE_UPDATE, bytes, "pkg_name (package name) is the name of the software being updated."
appstore, Apple App Store, device_type, device_typeQ_PROTO_APPSTORE, bytes, "Target device (iPhone, iPod,...)."
appstore, Apple App Store, connection_type, connection_typeQ_PROTO_APPSTORE, bytes, "Type of the connection."
appstore, Apple App Store, application_name, application_nameQ_PROTO_APPSTORE, bytes, "Name of the downloaded app."
archive, Archive.org, login, loginQ_PROTO_ARCHIVE, bytes, "User's login string."
archive, Archive.org, password, passwordQ_PROTO_ARCHIVE, bytes, "User's password string."
archive, Archive.org, query_text, query_textQ_PROTO_ARCHIVE, bytes, "Query sent to the search engine."
archive, Archive.org, query_raw, query_rawQ_PROTO_ARCHIVE, bytes, "Contains the query sent to the search engine as indicated in the URL."
archive, Archive.org, query_type, query_typeQ_PROTO_ARCHIVE, bytes, "Sort of query sent to the search engine."
archive, Archive.org, query_index, query_indexQ_PROTO_ARCHIVE, uint32, "A number containing the index of the showed results"
archive, Archive.org, encoding, encodingQ_PROTO_ARCHIVE, bytes, "Query encoding."
archive, Archive.org, action, actionQ_PROTO_ARCHIVE, bytes, "Indicates the action executed by the user."
archive, Archive.org, filename, filenameQ_PROTO_ARCHIVE, bytes, "Name of the transferred file."
archive, Archive.org, title, titleQ_PROTO_ARCHIVE, bytes, "File title."
archive, Archive.org, description, descriptionQ_PROTO_ARCHIVE, bytes, "File description."
archive, Archive.org, subject, subjectQ_PROTO_ARCHIVE, bytes, "File subject."
archive, Archive.org, creator, creatorQ_PROTO_ARCHIVE, bytes, "File creator."
ares, Ares, nickname, nicknameQ_PROTO_ARES, bytes, "Contains the user identity of the Ares connection."
ares, Ares, query, queryQ_PROTO_ARES, bytes, "Query sent to find a file."
ares, Ares, file_hash, file_hashQ_PROTO_ARES, bytes, "Hash of the transferred file."
badongo, Badongo.com, login, loginQ_PROTO_BADONGO, bytes, "User's login string."
badongo, Badongo.com, password, passwordQ_PROTO_BADONGO, bytes, "User's password string."
badongo, Badongo.com, action, actionQ_PROTO_BADONGO, bytes, "Indicates the action executed by the user."
badongo, Badongo.com, filename, filenameQ_PROTO_BADONGO, bytes, "Name of the transferred file."
badongo, Badongo.com, filesize, filesizeQ_PROTO_BADONGO, uint32, "Size (byte) of the transferred file."
badongo, Badongo.com, upload_description, upload_descriptionQ_PROTO_BADONGO, bytes, "Description of the uploaded file."
badoo, Badoo.com, login, loginQ_PROTO_BADOO, bytes, "User's login string."
badoo, Badoo.com, password, passwordQ_PROTO_BADOO, bytes, "User's password string."
badoo, Badoo.com, nickname, nicknameQ_PROTO_BADOO, bytes, "User's nickname, as seen in the ebuddy chat windows."
badoo, Badoo.com, sender, senderQ_PROTO_BADOO, bytes, "Contains the identity of the sender of a chat session or a file transfer."
badoo, Badoo.com, receiver, receiverQ_PROTO_BADOO, bytes, "Contains the identity of the receiver for a chat message or a file transfer."
badoo, Badoo.com, receiver_uid, receiver_uidQ_PROTO_BADOO, bytes, "Unique contact ID for a receiver."
badoo, Badoo.com, message, messageQ_PROTO_BADOO, bytes, "Contains the chat message."
badoo, Badoo.com, contact_login, contact_loginQ_PROTO_BADOO, bytes, "Contact login."
badoo, Badoo.com, contact_uid, contact_uidQ_PROTO_BADOO, bytes, "Contact ID."
baidu, Baidu.com, query_text, query_textQ_PROTO_BAIDU, bytes, "Query sent to the search engine."
baidu, Baidu.com, query_raw, query_rawQ_PROTO_BAIDU, bytes, "Contains the query sent to the search engine as indicated in the URL."
baidu, Baidu.com, query_type, query_typeQ_PROTO_BAIDU, bytes, "Sort of query sent to the search engine."
baidu, Baidu.com, encoding, encodingQ_PROTO_BAIDU, bytes, "Query encoding."
baidu, Baidu.com, query_index, query_indexQ_PROTO_BAIDU, uint32, "A number containing the index of the showed results"
base, Base virtual protocol, application, applicationQ_PROTO_BASE, bytes, "Name of the application to which the packet belongs."
base, Base virtual protocol, time, timeQ_PROTO_BASE, uint32, "Elapsed time since 1st January 1970, displayed in seconds/ minutes/ hours/ days according to the value of the given parameter."
base, Base virtual protocol, flow_id, flow_idQ_PROTO_BASE, uint64, "Unique connection ID."
base, Base virtual protocol, family, familyQ_PROTO_BASE, bytes, "Family to which the uppermost protocol of the protocol stack belongs to."
base, Base virtual protocol, application_id, application_idQ_PROTO_BASE, uint32, "Unique ID of application to which the packet belongs."
base, Base virtual protocol, path_len, path_lenQ_PROTO_BASE, uint32, "Contains the number of protocols in the packet protocol stack (path)."
base, Base virtual protocol, packet_counter, packet_counterQ_PROTO_BASE, uint32, "Number of packets received."
base, Base virtual protocol, declassified, declassifiedQ_PROTO_BASE, uint32, "Attribute showing whether a declassification is happened in a packet, the raised value is the protocol id."
base, Base virtual protocol, application_end, application_endQ_PROTO_BASE, bytes, "Contains the latest value for the attribute application"
base, Base virtual protocol, family_end, family_endQ_PROTO_BASE, bytes, "Contains the latest value for the attribute family"
base, Base virtual protocol, application_id_end, application_id_endQ_PROTO_BASE, uint32, "Contains the latest value for the attribute application_id"
base, Base virtual protocol, create_time, create_timeQ_PROTO_BASE, string, "Contains the timestamp of the first packet of the flow."
base, Base virtual protocol, multi_match_proto_id, multi_match_proto_idQ_PROTO_BASE, uint32, "When multiple pdata rules do match the same packet, the highest priority rule is classified. The protocol ids of the lesser priority rules are shown in deacreasing priority order through this protocol."
bebo, Bebo.com, is_mobile_service, is_mobile_serviceQ_PROTO_BEBO, uint32, "Whether or not the access was made through a mobile device."
bebo, Bebo.com, password, passwordQ_PROTO_BEBO, bytes, "User's password string."
bebo, Bebo.com, login, loginQ_PROTO_BEBO, bytes, "User's login string."
bgp, Border Gateway Protocol, identifier, identifierQ_PROTO_BGP, string, "BGP Identifier of the sender"
bgp, Border Gateway Protocol, path_attr_value_local_pref, path_attr_value_local_prefQ_PROTO_BGP, uint32, "Local preference value"
bgp, Border Gateway Protocol, path_attr_value_as_num, path_attr_value_as_numQ_PROTO_BGP, uint32, "As number"
bgp, Border Gateway Protocol, path_attr_value_next_hop_ip, path_attr_value_next_hop_ipQ_PROTO_BGP, string, "IP address of the next hop"
bgp, Border Gateway Protocol, withdrawn_prefix, withdrawn_prefixQ_PROTO_BGP, string, "Contains Ip addresses Prefixes"
bgp, Border Gateway Protocol, nlri_prefix, nlri_prefixQ_PROTO_BGP, string, "Contains IP addresses prefix"
bing, Bing.com (formerly MSN Search), encoding, encodingQ_PROTO_BING, bytes, "Query encoding."
bing, Bing.com (formerly MSN Search), query_index, query_indexQ_PROTO_BING, uint32, "A number containing the index of the showed results"
bing, Bing.com (formerly MSN Search), query_type, query_typeQ_PROTO_BING, bytes, "Sort of query sent to the search engine."
bing, Bing.com (formerly MSN Search), query_raw, query_rawQ_PROTO_BING, bytes, "Contains the query sent to the search engine as indicated in the URL."
bing, Bing.com (formerly MSN Search), query_text, query_textQ_PROTO_BING, bytes, "Query sent to the search engine."
bittorrent, BitTorrent, tracker, trackerQ_PROTO_BITTORRENT, bytes, "BitTorrent tracker URL."
bittorrent, BitTorrent, user_agent, user_agentQ_PROTO_BITTORRENT, bytes, "Name of the software used."
bittorrent, BitTorrent, client_version, client_versionQ_PROTO_BITTORRENT, bytes, "Version of the software."
bittorrent, BitTorrent, canceled_chunk_number, canceled_chunk_numberQ_PROTO_BITTORRENT, uint32, "Number of the canceled piece."
bittorrent, BitTorrent, canceled_chunk_length, canceled_chunk_lengthQ_PROTO_BITTORRENT, uint32, "Size of the canceled piece."
bittorrent, BitTorrent, canceled_chunk_data_offset, canceled_chunk_data_offsetQ_PROTO_BITTORRENT, uint32, "Offset of the canceled data."
bittorrent, BitTorrent, file_chunk_number, file_chunk_numberQ_PROTO_BITTORRENT, uint32, "Number of the transferred piece."
bittorrent, BitTorrent, file_chunk_len, file_chunk_lenQ_PROTO_BITTORRENT, uint32, "Size of the transferred piece."
bittorrent, BitTorrent, file_chunk_data_offset, file_chunk_data_offsetQ_PROTO_BITTORRENT, uint32, "Offset of the transferred data."
bittorrent, BitTorrent, torrent_filename, torrent_filenameQ_PROTO_BITTORRENT, bytes, "Name of the torrent file."
bittorrent, BitTorrent, piece_length, piece_lengthQ_PROTO_BITTORRENT, uint32, "Chunk size, for the specified file."
bittorrent, BitTorrent, filename, filenameQ_PROTO_BITTORRENT, bytes, "Name of the transferred file."
bittorrent, BitTorrent, filesize, filesizeQ_PROTO_BITTORRENT, uint32, "Size (byte) of the transferred file."
bittorrent, BitTorrent, peer_share_ip, peer_share_ipQ_PROTO_BITTORRENT, string, "IP address used by a peer to share his files."
bittorrent, BitTorrent, peer_share_id, peer_share_idQ_PROTO_BITTORRENT, bytes, "ID used by a peer to share his files."
bittorrent, BitTorrent, peer_port, peer_portQ_PROTO_BITTORRENT, bytes, "Port used by a peer to share his files."
bittorrent, BitTorrent, file_completed, file_completedQ_PROTO_BITTORRENT, bytes, "Completed file."
bittorrent, BitTorrent, file_downloaded, file_downloadedQ_PROTO_BITTORRENT, bytes, "Downloaded file."
bittorrent, BitTorrent, file_incomplete, file_incompleteQ_PROTO_BITTORRENT, bytes, "Incomplete file."
bittorrent, BitTorrent, file_left, file_leftQ_PROTO_BITTORRENT, bytes, "Left file."
bittorrent, BitTorrent, file_uploaded, file_uploadedQ_PROTO_BITTORRENT, bytes, "Uploaded file."
bittorrent, BitTorrent, classification_type, classification_typeQ_PROTO_BITTORRENT, bytes, "How the protocol has been classified. Always returns Deterministic"
bmff, ISO Base Media File Format, video_type, video_typeQ_PROTO_BMFF, bytes, "File format."
bmff, ISO Base Media File Format, video_brand, video_brandQ_PROTO_BMFF, bytes, "Normalized video format specification identifier."
bmff, ISO Base Media File Format, video_uuid, video_uuidQ_PROTO_BMFF, bytes, "Universally unique identifier."
bmff, ISO Base Media File Format, video_duration, video_durationQ_PROTO_BMFF, uint32, "Duration of the video in seconds."
bmff, ISO Base Media File Format, video_width, video_widthQ_PROTO_BMFF, uint32, "Width of the video in pixels."
bmff, ISO Base Media File Format, video_height, video_heightQ_PROTO_BMFF, uint32, "Height of the video in pixels."
bmff, ISO Base Media File Format, video_datarate, video_datarateQ_PROTO_BMFF, uint32, "Video bitrate in kilobits per second."
bmff, ISO Base Media File Format, video_avgdatarate, video_avgdatarateQ_PROTO_BMFF, uint32, "Average video bitrate in kilobits per second."
bssap, BSS Application Part, timestamp, timestampQ_PROTO_BSSAP, string, "Message timestamp"
bssap, BSS Application Part, validity_period, validity_periodQ_PROTO_BSSAP, bytes, "Validity period for the message"
bssap, BSS Application Part, imsi_receiver, imsi_receiverQ_PROTO_BSSAP, bytes, "International Mobile Subscriber Identity of the receiver"
bssap, BSS Application Part, imei_receiver, imei_receiverQ_PROTO_BSSAP, bytes, "International Mobile Equipment Identity of the receiver"
bssap, BSS Application Part, msisdn_receiver, msisdn_receiverQ_PROTO_BSSAP, bytes, "Mobile Subscriber Integrated Services Digital Network Number of the receiver"
bssap, BSS Application Part, imsi_sender, imsi_senderQ_PROTO_BSSAP, bytes, "International Mobile Subscriber Identity of the sender"
bssap, BSS Application Part, imei_sender, imei_senderQ_PROTO_BSSAP, bytes, "International Mobile Equipment Identity of the sender"
bssap, BSS Application Part, msisdn_sender, msisdn_senderQ_PROTO_BSSAP, bytes, "Mobile Subscriber Integrated Services Digital Network Number of the sender"
bxml, WAP Binary XML, version, versionQ_PROTO_BXML, bytes, "Protocol version."
capwap, Control And Provisioning of Wireless Access Points, bssid, bssidQ_PROTO_CAPWAP, string, "EUI-48 MAC address of the radio receiving the packet."
capwap, Control And Provisioning of Wireless Access Points, bssid_64, bssid_64Q_PROTO_CAPWAP, uint64, "EUI-64 MAC address of the radio receiving the packet."
chap, Challenge Handshake Authentication Protocol, challenge_name, challenge_nameQ_PROTO_CHAP, bytes, "Hostname of the peer initiating the authentication process."
chap, Challenge Handshake Authentication Protocol, response_name, response_nameQ_PROTO_CHAP, bytes, "Hostname of the peer responding to challenge."
chap, Challenge Handshake Authentication Protocol, message_type, message_typeQ_PROTO_CHAP, bytes, "Type of message sent."
chrome_update, Chrome Update, new_version, new_versionQ_PROTO_CHROME_UPDATE, bytes, "New version number returned by the server."
chrome_update, Chrome Update, current_version, current_versionQ_PROTO_CHROME_UPDATE, bytes, "Current version installed on the host."
chrome_update, Chrome Update, plugin_id, plugin_idQ_PROTO_CHROME_UPDATE, bytes, "Plugin Id for the updated plugin."
chrome_update, Chrome Update, plugin_new_version, plugin_new_versionQ_PROTO_CHROME_UPDATE, bytes, "New version number returned by the server for the plugin."
chrome_update, Chrome Update, plugin_current_version, plugin_current_versionQ_PROTO_CHROME_UPDATE, bytes, "Plugin version number currently installed."
cups, Common Unix Printer System, printer, printerQ_PROTO_CUPS, bytes, "URI addressing the CUPS printer."
cups, Common Unix Printer System, location, locationQ_PROTO_CUPS, bytes, "Location of the Printer."
cups, Common Unix Printer System, information, informationQ_PROTO_CUPS, bytes, "Information on Printer."
cups, Common Unix Printer System, model, modelQ_PROTO_CUPS, bytes, "Printer model."
dailymotion, Dailymotion.com, login, loginQ_PROTO_DAILYMOTION, bytes, "User's login string."
dailymotion, Dailymotion.com, email, emailQ_PROTO_DAILYMOTION, bytes, "Parent entry, for fields belonging to the same email."
dailymotion, Dailymotion.com, password, passwordQ_PROTO_DAILYMOTION, bytes, "User's password string."
dailymotion, Dailymotion.com, query_text, query_textQ_PROTO_DAILYMOTION, bytes, "Query sent to the search engine."
dailymotion, Dailymotion.com, query_raw, query_rawQ_PROTO_DAILYMOTION, bytes, "Contains the query sent to the search engine as indicated in the URL."
dcerpc, Distributed Computing Environment - Remote Procedure Call, service, serviceQ_PROTO_DCERPC, bytes, "Current service identification string."
dcerpc, Distributed Computing Environment - Remote Procedure Call, interface_uuid, interface_uuidQ_PROTO_DCERPC, bytes, "ID of the interface."
dcerpc, Distributed Computing Environment - Remote Procedure Call, call_id, call_idQ_PROTO_DCERPC, uint32, "ID of the call."
debian_update, Debian/Ubuntu Update, package_version, package_versionQ_PROTO_DEBIAN_UPDATE, bytes, "Repository packet version."
debian_update, Debian/Ubuntu Update, package_name, package_nameQ_PROTO_DEBIAN_UPDATE, bytes, "Debian packet name."
dhcp, Dynamic Host Configuration Protocol, ciaddr, ciaddrQ_PROTO_DHCP, string, "Current client ip address."
dhcp, Dynamic Host Configuration Protocol, yiaddr, yiaddrQ_PROTO_DHCP, string, "New ip address attributed to the client."
dhcp, Dynamic Host Configuration Protocol, siaddr, siaddrQ_PROTO_DHCP, string, "Ip address of next server (used when booting via a server)."
dhcp, Dynamic Host Configuration Protocol, giaddr, giaddrQ_PROTO_DHCP, string, "Relay agent ip address (used when booting via a relay agent)."
dhcp, Dynamic Host Configuration Protocol, chaddr, chaddrQ_PROTO_DHCP, string, "Client hardware address."
dhcp, Dynamic Host Configuration Protocol, sname, snameQ_PROTO_DHCP, bytes, "Server host name (optional)."
dhcp, Dynamic Host Configuration Protocol, subnetmask, subnetmaskQ_PROTO_DHCP, string, "Subnet mask assigned to the client."
dhcp, Dynamic Host Configuration Protocol, router, routerQ_PROTO_DHCP, string, "List of gateway's ip addresses."
dhcp, Dynamic Host Configuration Protocol, dns_server, dns_serverQ_PROTO_DHCP, string, "List of dns server's ip addresses."
dhcp, Dynamic Host Configuration Protocol, bootfilename, bootfilenameQ_PROTO_DHCP, bytes, "File name used when initializing"
dhcp, Dynamic Host Configuration Protocol, circuit_id, circuit_idQ_PROTO_DHCP, bytes, "A suboption that contains the circuit identifier"
dhcp, Dynamic Host Configuration Protocol, remote_id, remote_idQ_PROTO_DHCP, bytes, "The remote agent"
dhcp, Dynamic Host Configuration Protocol, remote_id_type, remote_id_typeQ_PROTO_DHCP, bytes, "An suboption that contains the remote agent identifier."
dhcp, Dynamic Host Configuration Protocol, remote_id_subtype, remote_id_subtypeQ_PROTO_DHCP, bytes, "Subtype for the remote agent"
dhcp, Dynamic Host Configuration Protocol, ip_lease_time, ip_lease_timeQ_PROTO_DHCP, uint32, "In a server reply (dhcpoffer), a dhcp server uses this option to specify the lease time it is willing to offer. the time is in seconds"
dhcp, Dynamic Host Configuration Protocol, end_status, end_statusQ_PROTO_DHCP, uint32, "An event sent when dhcp session expires. it's equal to 1 when a release message was observed and 0 if not"
dhcp, Dynamic Host Configuration Protocol, xid, xidQ_PROTO_DHCP, uint32, "Transaction ID, a random number chosen by the client, used by the client and server to associate requests and responses."
diameter, Diameter, acct_record_number, acct_record_numberQ_PROTO_DIAMETER, uint32, "Unique identifier for one record within a session"
diameter, Diameter, acct_record_type, acct_record_typeQ_PROTO_DIAMETER, uint32, "Record type"
diameter, Diameter, acct_output_octets, acct_output_octetsQ_PROTO_DIAMETER, uint64, "Indicates how many octets have been sent to the port in the course of delivering this service"
diameter, Diameter, acct_input_octets, acct_input_octetsQ_PROTO_DIAMETER, uint64, "Indicates how many octets have been received from the port over the course of this service being provided"
diameter, Diameter, acct_sub_session_id, acct_sub_session_idQ_PROTO_DIAMETER, uint64, "Sub-session identifier"
diameter, Diameter, acct_multi_session_id, acct_multi_session_idQ_PROTO_DIAMETER, bytes, "Link between multiple accounting sessions"
diameter, Diameter, acct_session_id, acct_session_idQ_PROTO_DIAMETER, bytes, "Accounting session ID."
diameter, Diameter, terminate_cause, terminate_causeQ_PROTO_DIAMETER, uint32, "This attribute indicates how the session was terminated"
diameter, Diameter, destination_host, destination_hostQ_PROTO_DIAMETER, bytes, "Destination Diameter host for the current message"
diameter, Diameter, auth_request_type, auth_request_typeQ_PROTO_DIAMETER, uint32, "Requested authentication type"
diameter, Diameter, result_code, result_codeQ_PROTO_DIAMETER, uint32, "Indicates whether a particular Diameter request was completed successfully not"
diameter, Diameter, origin_host, origin_hostQ_PROTO_DIAMETER, bytes, "Source Diameter host for the current message"
diameter, Diameter, session_id, session_idQ_PROTO_DIAMETER, bytes, "Uniquely identifies the current user session."
diameter, Diameter, calling_station_id, calling_station_idQ_PROTO_DIAMETER, bytes, "Client id."
diameter, Diameter, called_station_id, called_station_idQ_PROTO_DIAMETER, bytes, "The phone number that the user called, using Dialed Number Identification (DNIS) or similar technology."
diameter, Diameter, framed_ip, framed_ipQ_PROTO_DIAMETER, bytes, "IP address."
diameter, Diameter, nas_port, nas_portQ_PROTO_DIAMETER, uint32, "Physical port number of the user on the NAS"
diameter, Diameter, nas_port_type, nas_port_typeQ_PROTO_DIAMETER, uint32, "Indicates the type of the physical port of the NAS that is authenticating the user."
diameter, Diameter, nas_port_id, nas_port_idQ_PROTO_DIAMETER, bytes, "Indicates the physical port number of the NAS that is authenticating the user."
diameter, Diameter, nas_ip, nas_ipQ_PROTO_DIAMETER, bytes, "IP address of the NAS originating the Access-Request"
diameter, Diameter, nas_id, nas_idQ_PROTO_DIAMETER, bytes, "Unique identifier of the NAS originating the Access-Request"
diameter, Diameter, login, loginQ_PROTO_DIAMETER, bytes, "User's login string."
diameter, Diameter, end_to_end_id, end_to_end_idQ_PROTO_DIAMETER, uint32, "Used to detect duplicate messages"
diameter, Diameter, hop_by_hop_id, hop_by_hop_idQ_PROTO_DIAMETER, uint32, "Used to match Diameter request and reply messages"
diameter, Diameter, application_id, application_idQ_PROTO_DIAMETER, uint32, "Identify which application the message is applicable for"
diameter, Diameter, command_code, command_codeQ_PROTO_DIAMETER, uint32, "Command associated with the Diameter request"
dimp, Dynamic Internet Messaging Program, attach_type, attach_typeQ_PROTO_DIMP, bytes, "Content type of the sent attached file."
dimp, Dynamic Internet Messaging Program, attach_size, attach_sizeQ_PROTO_DIMP, uint32, "Attached file MIME size."
dimp, Dynamic Internet Messaging Program, receiver_type, receiver_typeQ_PROTO_DIMP, bytes, "Type of the email receiver."
dimp, Dynamic Internet Messaging Program, receiver_alias, receiver_aliasQ_PROTO_DIMP, bytes, "Name of email receiver (included cc and bcc receivers)."
dimp, Dynamic Internet Messaging Program, receiver_email, receiver_emailQ_PROTO_DIMP, bytes, "Email address of message receiver (included cc and bcc receivers)."
dimp, Dynamic Internet Messaging Program, receiver, receiverQ_PROTO_DIMP, bytes, "Full address of email receiver (including cc and bcc receivers)."
dimp, Dynamic Internet Messaging Program, sender_alias, sender_aliasQ_PROTO_DIMP, bytes, "Name of the email sender."
dimp, Dynamic Internet Messaging Program, sender_email, sender_emailQ_PROTO_DIMP, bytes, "Email address of the email sender."
dimp, Dynamic Internet Messaging Program, sender, senderQ_PROTO_DIMP, bytes, "Full address of email sender (alias followed by email address)."
dimp, Dynamic Internet Messaging Program, subject, subjectQ_PROTO_DIMP, bytes, "Message subject."
dimp, Dynamic Internet Messaging Program, date, dateQ_PROTO_DIMP, bytes, "Message date."
dimp, Dynamic Internet Messaging Program, attach_id, attach_idQ_PROTO_DIMP, bytes, "Attachment identifier."
dimp, Dynamic Internet Messaging Program, attach_filename, attach_filenameQ_PROTO_DIMP, bytes, "Attachment name."
dimp, Dynamic Internet Messaging Program, action, actionQ_PROTO_DIMP, bytes, "Indicates if the message is read (Read) or composed (Compose)."
dimp, Dynamic Internet Messaging Program, draft, draftQ_PROTO_DIMP, uint32, "Indicates if the email is a draft or has really been posted"
dimp, Dynamic Internet Messaging Program, msg_id, msg_idQ_PROTO_DIMP, bytes, "Identifier of the message."
dimp, Dynamic Internet Messaging Program, msglist_subject, msglist_subjectQ_PROTO_DIMP, bytes, "Message subject in a message list."
dimp, Dynamic Internet Messaging Program, msglist_sender, msglist_senderQ_PROTO_DIMP, bytes, "Full address of email sender (alias and email address)."
dimp, Dynamic Internet Messaging Program, msglist_sender_email, msglist_sender_emailQ_PROTO_DIMP, bytes, "Address of email sender."
dimp, Dynamic Internet Messaging Program, msglist_sender_alias, msglist_sender_aliasQ_PROTO_DIMP, bytes, "Name of email sender."
dimp, Dynamic Internet Messaging Program, msglist_receiver_alias, msglist_receiver_aliasQ_PROTO_DIMP, bytes, "Name of email receiver."
dimp, Dynamic Internet Messaging Program, msglist_date, msglist_dateQ_PROTO_DIMP, bytes, "Message date in a message list."
dimp, Dynamic Internet Messaging Program, msglist_folder, msglist_folderQ_PROTO_DIMP, bytes, "Indicates the directory from a message list."
dimp, Dynamic Internet Messaging Program, login, loginQ_PROTO_DIMP, bytes, "User's login string."
dimp, Dynamic Internet Messaging Program, password, passwordQ_PROTO_DIMP, bytes, "User's password string."
directconnect, DirectConnect (NMDC), login, loginQ_PROTO_DIRECTCONNECT, bytes, "User's login string."
directconnect, DirectConnect (NMDC), query, queryQ_PROTO_DIRECTCONNECT, bytes, "Query sent to find a file."
directconnect, DirectConnect (NMDC), query_way, query_wayQ_PROTO_DIRECTCONNECT, bytes, "Way of the query."
directconnect, DirectConnect (NMDC), sr_filename, sr_filenameQ_PROTO_DIRECTCONNECT, bytes, "The name of a file returned by a search query."
directconnect, DirectConnect (NMDC), sr_filesize, sr_filesizeQ_PROTO_DIRECTCONNECT, bytes, "The size of a file returned by a search query."
directconnect, DirectConnect (NMDC), sr_filehash, sr_filehashQ_PROTO_DIRECTCONNECT, bytes, "The hash of a file returned by a search query."
directconnect, DirectConnect (NMDC), file_hash, file_hashQ_PROTO_DIRECTCONNECT, bytes, "Hash of the transferred file."
directconnect, DirectConnect (NMDC), file_is_compressed, file_is_compressedQ_PROTO_DIRECTCONNECT, uint32, "Tells whether a file is compressed."
directconnect, DirectConnect (NMDC), file_compression_type, file_compression_typeQ_PROTO_DIRECTCONNECT, bytes, "Tells the compression type."
directconnect, DirectConnect (NMDC), file_chunk_data_offset, file_chunk_data_offsetQ_PROTO_DIRECTCONNECT, uint32, "Offset of the transferred data."
directconnect, DirectConnect (NMDC), file_chunk_len, file_chunk_lenQ_PROTO_DIRECTCONNECT, uint32, "Size of the transferred piece."
dns, Domain Name Service, query, queryQ_PROTO_DNS, bytes, "DNS Query sent."
dns, Domain Name Service, qdcount, qdcountQ_PROTO_DNS, uint32, "Number of queries."
dns, Domain Name Service, ancount, ancountQ_PROTO_DNS, uint32, "Number of answers."
dns, Domain Name Service, nscount, nscountQ_PROTO_DNS, uint32, "Number of answers in the 'authority' section."
dns, Domain Name Service, arcount, arcountQ_PROTO_DNS, uint32, "Number of additional answers."
dns, Domain Name Service, transaction_id, transaction_idQ_PROTO_DNS, uint32, "DNS unique transaction ID."
dns, Domain Name Service, name, nameQ_PROTO_DNS, bytes, "Name of the request"
dns, Domain Name Service, host, hostQ_PROTO_DNS, bytes, "Host name"
dns, Domain Name Service, host_addr, host_addrQ_PROTO_DNS, string, "IPV4 Host address"
dns, Domain Name Service, reverse_addr, reverse_addrQ_PROTO_DNS, string, "IP address returned to the PTR request."
dns, Domain Name Service, response_time, response_timeQ_PROTO_DNS, string, "Elapsed time between sending of the dns request and reception of its response."
dns, Domain Name Service, ttl, ttlQ_PROTO_DNS, uint32, "Time (in seconds) a DNS information returned by the server will be kept in cache."
dns, Domain Name Service, section_type, section_typeQ_PROTO_DNS, bytes, "Type of section for each DNS answer."
dns, Domain Name Service, flags, flagsQ_PROTO_DNS, uint32, "Flags."
ebay, eBay.com, query_text, query_textQ_PROTO_EBAY, bytes, "Query sent to the search engine."
ebay, eBay.com, query_raw, query_rawQ_PROTO_EBAY, bytes, "Contains the query sent to the search engine as indicated in the URL."
ebuddy, eBuddy.com, contact_im, contact_imQ_PROTO_EBUDDY, bytes, "Instant Messaging network associated to the contact"
ebuddy, eBuddy.com, contact_message, contact_messageQ_PROTO_EBUDDY, bytes, "User's contact IM personal message."
ebuddy, eBuddy.com, contact_blocked, contact_blockedQ_PROTO_EBUDDY, bytes, "Specifies if the user has blocked this contact."
ebuddy, eBuddy.com, contact_status, contact_statusQ_PROTO_EBUDDY, bytes, "Contact status."
ebuddy, eBuddy.com, contact_nickname, contact_nicknameQ_PROTO_EBUDDY, bytes, "Contact's nickname."
ebuddy, eBuddy.com, contact_login, contact_loginQ_PROTO_EBUDDY, bytes, "Contact login."
ebuddy, eBuddy.com, chat_im, chat_imQ_PROTO_EBUDDY, bytes, "Instant Messaging network the message is being exchanged on."
ebuddy, eBuddy.com, message, messageQ_PROTO_EBUDDY, bytes, "Contains the chat message."
ebuddy, eBuddy.com, receiver, receiverQ_PROTO_EBUDDY, bytes, "Contains the identity of the receiver for a chat message or a file transfer."
ebuddy, eBuddy.com, sender, senderQ_PROTO_EBUDDY, bytes, "Contains the identity of the sender of a chat session or a file transfer."
ebuddy, eBuddy.com, nickname, nicknameQ_PROTO_EBUDDY, bytes, "User's nickname, as seen in the ebuddy chat windows."
ebuddy, eBuddy.com, client_message, client_messageQ_PROTO_EBUDDY, bytes, "User's IM personal message."
ebuddy, eBuddy.com, client_status, client_statusQ_PROTO_EBUDDY, bytes, "Status of connected user."
ebuddy, eBuddy.com, e_action, e_actionQ_PROTO_EBUDDY, bytes, "Action of the user."
ebuddy, eBuddy.com, im_network, im_networkQ_PROTO_EBUDDY, bytes, "Name of the current instant messaging network used by the client."
ebuddy, eBuddy.com, password, passwordQ_PROTO_EBUDDY, bytes, "User's password string."
ebuddy, eBuddy.com, login, loginQ_PROTO_EBUDDY, bytes, "User's login string."
edonkey, Edonkey, login, loginQ_PROTO_EDONKEY, bytes, "User's login string."
edonkey, Edonkey, query, queryQ_PROTO_EDONKEY, bytes, "Query sent to find a file."
edonkey, Edonkey, query_type, query_typeQ_PROTO_EDONKEY, bytes, "Sort of query sent."
edonkey, Edonkey, filename, filenameQ_PROTO_EDONKEY, bytes, "Name of the transferred file."
edonkey, Edonkey, filesize, filesizeQ_PROTO_EDONKEY, uint64, "Size (byte) of the transferred file."
edonkey, Edonkey, file_compression_type, file_compression_typeQ_PROTO_EDONKEY, bytes, "Tells the compression type."
edonkey, Edonkey, file_is_compressed, file_is_compressedQ_PROTO_EDONKEY, uint32, "Tells whether a file is compressed."
edonkey, Edonkey, file_chunk_len, file_chunk_lenQ_PROTO_EDONKEY, uint32, "Size of the transferred piece."
edonkey, Edonkey, file_chunk_data_offset, file_chunk_data_offsetQ_PROTO_EDONKEY, uint32, "Offset of the transferred data."
eigrp, Enhanced Interior Gateway Routing Protocol, as_number, as_numberQ_PROTO_EIGRP, uint32, "The Autonomous System identifier."
etsi_li, ETSI Lawful Interception TS 10 232-1 V2.1.1, second, secondQ_PROTO_ETSI_LI, uint64, "The field contains the timestamp in seconds."
facebook, Facebook, message, messageQ_PROTO_FACEBOOK, bytes, "Instant message content."
facebook, Facebook, is_mobile_service, is_mobile_serviceQ_PROTO_FACEBOOK, bytes, "Whether or not the access was made through a mobile device."
facebook, Facebook, application_action, application_actionQ_PROTO_FACEBOOK, bytes, "(Deprecated) Indicates the action executed by the user."
facebook, Facebook, application_name, application_nameQ_PROTO_FACEBOOK, bytes, "(Deprecated) Name of the application"
facebook, Facebook, feed_text, feed_textQ_PROTO_FACEBOOK, bytes, "feed text."
facebook, Facebook, feed_like, feed_likeQ_PROTO_FACEBOOK, uint32, "Number of time the feed has been liked."
facebook, Facebook, feed_type, feed_typeQ_PROTO_FACEBOOK, bytes, "Type of the feed."
facebook, Facebook, share_text, share_textQ_PROTO_FACEBOOK, bytes, "Text of the share message"
facebook, Facebook, share_with, share_withQ_PROTO_FACEBOOK, bytes, "Who the share message is sent to."
facebook, Facebook, contact_name, contact_nameQ_PROTO_FACEBOOK, bytes, "Contact name."
facebook, Facebook, contact_uid, contact_uidQ_PROTO_FACEBOOK, bytes, "Contact ID."
facebook, Facebook, comment, commentQ_PROTO_FACEBOOK, bytes, "Text of the comment."
facebook, Facebook, status_update, status_updateQ_PROTO_FACEBOOK, bytes, "Status update text."
facebook, Facebook, location, locationQ_PROTO_FACEBOOK, bytes, "Location shared"
facebook, Facebook, profile_value, profile_valueQ_PROTO_FACEBOOK, bytes, "Value of a profile entry"
facebook, Facebook, profile_name, profile_nameQ_PROTO_FACEBOOK, bytes, "Name of a profile entry"
facebook, Facebook, receiver_sex, receiver_sexQ_PROTO_FACEBOOK, bytes, "Instant message recipient gender."
facebook, Facebook, receiver_uid, receiver_uidQ_PROTO_FACEBOOK, bytes, "Instant message recipient ID."
facebook, Facebook, receiver, receiverQ_PROTO_FACEBOOK, bytes, "Instant message recipient name."
facebook, Facebook, sender_sex, sender_sexQ_PROTO_FACEBOOK, bytes, "Instant message sender gender."
facebook, Facebook, sender_email, sender_emailQ_PROTO_FACEBOOK, bytes, "Email address of the message sender."
facebook, Facebook, sender_uid, sender_uidQ_PROTO_FACEBOOK, bytes, "Instant message sender ID."
facebook, Facebook, sender, senderQ_PROTO_FACEBOOK, bytes, "Contains the identity of the sender of a chat session or a file transfer."
facebook, Facebook, message_id, message_idQ_PROTO_FACEBOOK, bytes, "Instant message ID."
facebook, Facebook, client_time, client_timeQ_PROTO_FACEBOOK, bytes, "Instant message client timestamp."
facebook, Facebook, query_text, query_textQ_PROTO_FACEBOOK, bytes, "Query sent to the search engine."
facebook, Facebook, query_raw, query_rawQ_PROTO_FACEBOOK, bytes, "Contains the query sent to the search engine as indicated in the URL."
facebook, Facebook, highschool, highschoolQ_PROTO_FACEBOOK, bytes, "(deprecated, see profile_entry) Name of highschool."
facebook, Facebook, college, collegeQ_PROTO_FACEBOOK, bytes, "(deprecated, see profile_entry) Name of college."
facebook, Facebook, employer, employerQ_PROTO_FACEBOOK, bytes, "(deprecated, see profile_entry) Name of employer."
facebook, Facebook, sex, sexQ_PROTO_FACEBOOK, bytes, "User gender."
facebook, Facebook, uid, uidQ_PROTO_FACEBOOK, bytes, "Generic user ID."
facebook, Facebook, lastname, lastnameQ_PROTO_FACEBOOK, bytes, "User family name"
facebook, Facebook, firstname, firstnameQ_PROTO_FACEBOOK, bytes, "User name"
facebook, Facebook, name, nameQ_PROTO_FACEBOOK, bytes, "Name the user."
facebook, Facebook, password, passwordQ_PROTO_FACEBOOK, bytes, "User's password string."
facebook, Facebook, login, loginQ_PROTO_FACEBOOK, bytes, "User's login string."
facebook, Facebook, action, actionQ_PROTO_FACEBOOK, bytes, "Indicates the action executed by the user."
facebook_apps, Facebook Apps, application_action, application_actionQ_PROTO_FACEBOOK_APPS, bytes, "Indicates the action executed by the user."
facebook_apps, Facebook Apps, application_name, application_nameQ_PROTO_FACEBOOK_APPS, bytes, "Name of the application."
facebook_mail, facebook mail, attach_type, attach_typeQ_PROTO_FACEBOOK_MAIL, bytes, "Content type of the sent attached file."
facebook_mail, facebook mail, attach_size, attach_sizeQ_PROTO_FACEBOOK_MAIL, uint32, "Attached file MIME size."
facebook_mail, facebook mail, attach_id, attach_idQ_PROTO_FACEBOOK_MAIL, bytes, "Attachment identifier."
facebook_mail, facebook mail, attach_filename, attach_filenameQ_PROTO_FACEBOOK_MAIL, bytes, "Attachment name."
facebook_mail, facebook mail, contact_uid, contact_uidQ_PROTO_FACEBOOK_MAIL, bytes, "The facebook id of a contact."
facebook_mail, facebook mail, contact_name, contact_nameQ_PROTO_FACEBOOK_MAIL, bytes, "Contact name."
facebook_mail, facebook mail, sender_email, sender_emailQ_PROTO_FACEBOOK_MAIL, bytes, "Email address of the email sender."
facebook_mail, facebook mail, sender_alias, sender_aliasQ_PROTO_FACEBOOK_MAIL, bytes, "Name of the email sender."
facebook_mail, facebook mail, sender_uid, sender_uidQ_PROTO_FACEBOOK_MAIL, bytes, "Sender ID."
facebook_mail, facebook mail, sender, senderQ_PROTO_FACEBOOK_MAIL, bytes, "Full address of email sender (alias followed by email address)."
facebook_mail, facebook mail, receiver_email, receiver_emailQ_PROTO_FACEBOOK_MAIL, bytes, "Email address of message receiver (included cc and bcc receivers)."
facebook_mail, facebook mail, receiver_alias, receiver_aliasQ_PROTO_FACEBOOK_MAIL, bytes, "Name of email receiver (included cc and bcc receivers)."
facebook_mail, facebook mail, receiver_uid, receiver_uidQ_PROTO_FACEBOOK_MAIL, bytes, "Receiver ID."
facebook_mail, facebook mail, receiver, receiverQ_PROTO_FACEBOOK_MAIL, bytes, "Full address of email receiver (including cc and bcc receivers)."
facebook_mail, facebook mail, msg_id, msg_idQ_PROTO_FACEBOOK_MAIL, bytes, "Identifier of the message."
facebook_mail, facebook mail, thread_id, thread_idQ_PROTO_FACEBOOK_MAIL, bytes, "Identifies messages belonging to a series of replies back and forth pertaining to a certain message."
facebook_mail, facebook mail, action, actionQ_PROTO_FACEBOOK_MAIL, bytes, "Indicates if the message is read (Read) or composed (Compose)."
facebook_mail, facebook mail, date, dateQ_PROTO_FACEBOOK_MAIL, bytes, "Message date."
facebook_mail, facebook mail, subject, subjectQ_PROTO_FACEBOOK_MAIL, bytes, "Message subject."
facebook_mail, facebook mail, uid, uidQ_PROTO_FACEBOOK_MAIL, bytes, "Generic user ID."
facebook_mail, facebook mail, login, loginQ_PROTO_FACEBOOK_MAIL, bytes, "User's login string."
facebook_mail, facebook mail, session_id, session_idQ_PROTO_FACEBOOK_MAIL, bytes, "Uniquely identifies the current user session."
facetime, Apple FaceTime, service_id, service_idQ_PROTO_FACETIME, uint32, "Composite 32-bit integer value defining the service currently used. The first byte (LSB) gives the generic service definition, the second byte gives an advanced service definition for specific cases (example: File Transfer)."
facetime, Apple FaceTime, service_stats, service_statsQ_PROTO_FACETIME, bytes, "Composite attribute containing the packet metrics used for each new service type detection, extracting when performing STATISCAL detection method only. Note: this attribute won't be extracted in case of session expiration (eg. when the current service is not ended properly by the user)."
facetime, Apple FaceTime, service, serviceQ_PROTO_FACETIME, bytes, "Current service identification string."
facetime, Apple FaceTime, service_duration, service_durationQ_PROTO_FACETIME, uint32, "4 bytes integer value indicating, when the service is ended, the duration of it in seconds"
facetime, Apple FaceTime, service_duration_tv, service_duration_tvQ_PROTO_FACETIME, string, "Timeval structure indicating, when the service is ended, the length of it in second and microseconds."
firefox_update, Firefox Update, plugin_new_version, plugin_new_versionQ_PROTO_FIREFOX_UPDATE, bytes, "Plugin version after update."
firefox_update, Firefox Update, plugin_name, plugin_nameQ_PROTO_FIREFOX_UPDATE, bytes, "Name of the plugin."
firefox_update, Firefox Update, new_version, new_versionQ_PROTO_FIREFOX_UPDATE, bytes, "Browser version after update."
firefox_update, Firefox Update, current_version, current_versionQ_PROTO_FIREFOX_UPDATE, bytes, "Browser version before update."
flashplugin_update, Adobe Flash Plugin Update, new_version, new_versionQ_PROTO_FLASHPLUGIN_UPDATE, bytes, "New version number, as returned by Adobe Web Server."
flashplugin_update, Adobe Flash Plugin Update, current_version, current_versionQ_PROTO_FLASHPLUGIN_UPDATE, bytes, "Current flash-plugin version number installed on the client."
freebsd_update, FreeBSD Updates, package_name, package_nameQ_PROTO_FREEBSD_UPDATE, bytes, "Software package name."
friendster, Friendster.com, password, passwordQ_PROTO_FRIENDSTER, bytes, "User's password string."
friendster, Friendster.com, name, nameQ_PROTO_FRIENDSTER, bytes, "Name the user."
friendster, Friendster.com, login, loginQ_PROTO_FRIENDSTER, bytes, "User's login string."
ftp, File Transfer Protocol, password, passwordQ_PROTO_FTP, bytes, "User's password string."
ftp, File Transfer Protocol, login, loginQ_PROTO_FTP, bytes, "User's login string."
ftp, File Transfer Protocol, filename, filenameQ_PROTO_FTP, bytes, "Name of the transferred file."
ftp, File Transfer Protocol, method, methodQ_PROTO_FTP, bytes, "Contains the FTP command sent."
ftp, File Transfer Protocol, method_content, method_contentQ_PROTO_FTP, bytes, "Method parameter"
ftp, File Transfer Protocol, filesize, filesizeQ_PROTO_FTP, uint32, "Size (byte) of the transferred file."
ftp, File Transfer Protocol, data_port_start_offset, data_port_start_offsetQ_PROTO_FTP, uint32, "Offset to the first FTP port byte given in the PORT command."
ftp, File Transfer Protocol, data_port_end_offset, data_port_end_offsetQ_PROTO_FTP, uint32, "Offset to the first byte which is not part of the TCP port value, given in the PORT command."
ftp, File Transfer Protocol, loadway, loadwayQ_PROTO_FTP, bytes, "Contains the file transfer way (Upload vs Download)."
ftp, File Transfer Protocol, offset, offsetQ_PROTO_FTP, uint32, "Indicates the start offset of the file transfer."
ftp, File Transfer Protocol, greeting_message, greeting_messageQ_PROTO_FTP, bytes, "First line of the server banner."
ftp, File Transfer Protocol, return_content, return_contentQ_PROTO_FTP, bytes, "Message of server's response."
ftp, File Transfer Protocol, transfer_duration, transfer_durationQ_PROTO_FTP, string, "Elapsed time (in seconds) between the begining of a transfer (ftp code 150) and the first packet signaling the end with succes of the transfer (ftp code 226)"
ftp, File Transfer Protocol, index, indexQ_PROTO_FTP, uint32, "Identifier of the request and response in a FTP flow."
giop, General Inter-ORB Protocol, version, versionQ_PROTO_GIOP, bytes, "Current GIOP version."
giop, General Inter-ORB Protocol, ior_type_id, ior_type_idQ_PROTO_GIOP, bytes, "IOR object's repository id."
giop, General Inter-ORB Protocol, message_type, message_typeQ_PROTO_GIOP, bytes, "GIOP message type."
giop, General Inter-ORB Protocol, request_operation, request_operationQ_PROTO_GIOP, bytes, "Name of the request sent to the server."
giop, General Inter-ORB Protocol, request_id, request_idQ_PROTO_GIOP, uint32, "ID used to associate a reply message with a request message."
gmail, Google Mail, session_id, session_idQ_PROTO_GMAIL, bytes, "Uniquely identifies the current user session."
gmail, Google Mail, login, loginQ_PROTO_GMAIL, bytes, "User's login string."
gmail, Google Mail, name, nameQ_PROTO_GMAIL, bytes, "User's full name."
gmail, Google Mail, encoding, encodingQ_PROTO_GMAIL, bytes, "Page encoding"
gmail, Google Mail, msglist_sender, msglist_senderQ_PROTO_GMAIL, bytes, "Full address of email sender (alias and email address)."
gmail, Google Mail, msglist_sender_alias, msglist_sender_aliasQ_PROTO_GMAIL, bytes, "Name of email sender."
gmail, Google Mail, msglist_sender_email, msglist_sender_emailQ_PROTO_GMAIL, bytes, "Address of email sender."
gmail, Google Mail, msglist_receiver, msglist_receiverQ_PROTO_GMAIL, bytes, "Full address of email receiver in a message list."
gmail, Google Mail, msglist_receiver_alias, msglist_receiver_aliasQ_PROTO_GMAIL, bytes, "Name of email receiver."
gmail, Google Mail, msglist_receiver_email, msglist_receiver_emailQ_PROTO_GMAIL, bytes, "Email address of the email receiver."
gmail, Google Mail, msglist_subject, msglist_subjectQ_PROTO_GMAIL, bytes, "Message subject in a message list."
gmail, Google Mail, msglist_msgid, msglist_msgidQ_PROTO_GMAIL, bytes, "Message identifier."
gmail, Google Mail, msglist_date, msglist_dateQ_PROTO_GMAIL, bytes, "Message date in a message list."
gmail, Google Mail, msglist_folder, msglist_folderQ_PROTO_GMAIL, bytes, "Indicates the directory from a message list."
gmail, Google Mail, sender, senderQ_PROTO_GMAIL, bytes, "Full address of email sender (alias followed by email address)."
gmail, Google Mail, sender_email, sender_emailQ_PROTO_GMAIL, bytes, "Email address of the email sender."
gmail, Google Mail, sender_alias, sender_aliasQ_PROTO_GMAIL, bytes, "Name of the email sender."
gmail, Google Mail, receiver, receiverQ_PROTO_GMAIL, bytes, "Full address of email receiver (including cc and bcc receivers)."
gmail, Google Mail, real_sender_domain, real_sender_domainQ_PROTO_GMAIL, bytes, "Domain of the email sender."
gmail, Google Mail, real_sender_msgid, real_sender_msgidQ_PROTO_GMAIL, bytes, "Email identifier."
gmail, Google Mail, receiver_email, receiver_emailQ_PROTO_GMAIL, bytes, "Email address of message receiver (included cc and bcc receivers)."
gmail, Google Mail, receiver_alias, receiver_aliasQ_PROTO_GMAIL, bytes, "Name of email receiver (included cc and bcc receivers)."
gmail, Google Mail, receiver_type, receiver_typeQ_PROTO_GMAIL, bytes, "Type of the email receiver."
gmail, Google Mail, replyto, replytoQ_PROTO_GMAIL, bytes, "Email address to use in a reply for this message."
gmail, Google Mail, date, dateQ_PROTO_GMAIL, bytes, "Message date."
gmail, Google Mail, subject, subjectQ_PROTO_GMAIL, bytes, "Message subject."
gmail, Google Mail, msg_id, msg_idQ_PROTO_GMAIL, bytes, "Identifier of the message."
gmail, Google Mail, attach_id, attach_idQ_PROTO_GMAIL, bytes, "Attachment identifier."
gmail, Google Mail, next_attach_id, next_attach_idQ_PROTO_GMAIL, bytes, "New value for the attach_id of an attachment."
gmail, Google Mail, attach_filename, attach_filenameQ_PROTO_GMAIL, bytes, "Attachment name."
gmail, Google Mail, attach_type, attach_typeQ_PROTO_GMAIL, bytes, "Content type of the sent attached file."
gmail, Google Mail, attach_size, attach_sizeQ_PROTO_GMAIL, uint32, "Attached file MIME size."
gmail, Google Mail, thumbnail, thumbnailQ_PROTO_GMAIL, uint32, "Indicates whether this attachment is an image thumbnail."
gmail, Google Mail, draft, draftQ_PROTO_GMAIL, uint32, "Indicates if the email is a draft or has really been posted"
gmail, Google Mail, action, actionQ_PROTO_GMAIL, bytes, "Indicates if the message is read (Read) or composed (Compose)."
gmail, Google Mail, version, versionQ_PROTO_GMAIL, bytes, "Gmail version used."
gmail, Google Mail, last_activity, last_activityQ_PROTO_GMAIL, bytes, "Time elapsed since last account activity."
gmail, Google Mail, last_activity_timestamp, last_activity_timestampQ_PROTO_GMAIL, string, "Last account activity timestamp."
gmail, Google Mail, current_ip_address, current_ip_addressQ_PROTO_GMAIL, string, "IP address of the logged user."
gmail, Google Mail, other_ip_address, other_ip_addressQ_PROTO_GMAIL, string, "IP address of the other logged user."
gmail, Google Mail, contact_email, contact_emailQ_PROTO_GMAIL, bytes, "Email address of a contact."
gmail, Google Mail, contact_alias, contact_aliasQ_PROTO_GMAIL, bytes, "Alias of a contact."
gmail_basic, Gmail Basic, date, dateQ_PROTO_GMAIL_BASIC, bytes, "Message date."
gmail_basic, Gmail Basic, sender_alias, sender_aliasQ_PROTO_GMAIL_BASIC, bytes, "Name of the email sender."
gmail_basic, Gmail Basic, sender_email, sender_emailQ_PROTO_GMAIL_BASIC, bytes, "Email address of the email sender."
gmail_basic, Gmail Basic, sender, senderQ_PROTO_GMAIL_BASIC, bytes, "Full address of email sender (alias followed by email address)."
gmail_basic, Gmail Basic, msglist_date, msglist_dateQ_PROTO_GMAIL_BASIC, bytes, "Message date in a message list."
gmail_basic, Gmail Basic, msglist_subject, msglist_subjectQ_PROTO_GMAIL_BASIC, bytes, "Message subject in a message list."
gmail_basic, Gmail Basic, msglist_sender, msglist_senderQ_PROTO_GMAIL_BASIC, bytes, "Full address of email sender (alias and email address)."
gmail_basic, Gmail Basic, msglist_receiver, msglist_receiverQ_PROTO_GMAIL_BASIC, bytes, "Full address of email receiver in a message list."
gmail_basic, Gmail Basic, msglist_msgid, msglist_msgidQ_PROTO_GMAIL_BASIC, bytes, "Message identifier."
gmail_basic, Gmail Basic, msglist_folder, msglist_folderQ_PROTO_GMAIL_BASIC, bytes, "Indicates the directory from a message list."
gmail_basic, Gmail Basic, login, loginQ_PROTO_GMAIL_BASIC, bytes, "User's login string."
gmail_basic, Gmail Basic, contact_email, contact_emailQ_PROTO_GMAIL_BASIC, bytes, "Email address of a contact."
gmail_basic, Gmail Basic, contact_alias, contact_aliasQ_PROTO_GMAIL_BASIC, bytes, "Alias of a contact."
gmail_basic, Gmail Basic, subject, subjectQ_PROTO_GMAIL_BASIC, bytes, "Message subject."
gmail_basic, Gmail Basic, receiver_type, receiver_typeQ_PROTO_GMAIL_BASIC, bytes, "Type of the email receiver."
gmail_basic, Gmail Basic, receiver_alias, receiver_aliasQ_PROTO_GMAIL_BASIC, bytes, "Name of email receiver (included cc and bcc receivers)."
gmail_basic, Gmail Basic, receiver_email, receiver_emailQ_PROTO_GMAIL_BASIC, bytes, "Email address of message receiver (included cc and bcc receivers)."
gmail_basic, Gmail Basic, receiver, receiverQ_PROTO_GMAIL_BASIC, bytes, "Full address of email receiver (including cc and bcc receivers)."
gmail_basic, Gmail Basic, attach_type, attach_typeQ_PROTO_GMAIL_BASIC, bytes, "Content type of the sent attached file."
gmail_basic, Gmail Basic, attach_filename, attach_filenameQ_PROTO_GMAIL_BASIC, bytes, "Attachment name."
gmail_basic, Gmail Basic, attach_id, attach_idQ_PROTO_GMAIL_BASIC, bytes, "Attachment identifier."
gmail_basic, Gmail Basic, draft, draftQ_PROTO_GMAIL_BASIC, uint32, "Indicates if the email is a draft or has really been posted"
gmail_basic, Gmail Basic, msg_id, msg_idQ_PROTO_GMAIL_BASIC, bytes, "Identifier of the message."
gmail_basic, Gmail Basic, action, actionQ_PROTO_GMAIL_BASIC, bytes, "Indicates if the message is read (Read) or composed (Compose)."
gmail_basic, Gmail Basic, attach_size, attach_sizeQ_PROTO_GMAIL_BASIC, uint32, "Attached file MIME size."
gmail_basic, Gmail Basic, session_id, session_idQ_PROTO_GMAIL_BASIC, bytes, "Uniquely identifies the current user session."
gmail_chat, Google Chat, login, loginQ_PROTO_GMAIL_CHAT, bytes, "User's login string."
gmail_chat, Google Chat, message, messageQ_PROTO_GMAIL_CHAT, bytes, "Contains the chat message."
gmail_chat, Google Chat, sender, senderQ_PROTO_GMAIL_CHAT, bytes, "Contains the identity of the sender of a chat session or a file transfer."
gmail_chat, Google Chat, receiver, receiverQ_PROTO_GMAIL_CHAT, bytes, "Contains the identity of the receiver for a chat message or a file transfer."
gmail_chat, Google Chat, caller, callerQ_PROTO_GMAIL_CHAT, bytes, "Contains the identity (or the phone number) of the initiator of the call."
gmail_chat, Google Chat, callee, calleeQ_PROTO_GMAIL_CHAT, bytes, "Contains the identity (or the phone number) of the called party for a call."
gmail_mobile, Gmail Mobile, msglist_subject, msglist_subjectQ_PROTO_GMAIL_MOBILE, bytes, "Message subject in a message list."
gmail_mobile, Gmail Mobile, msglist_msgid, msglist_msgidQ_PROTO_GMAIL_MOBILE, bytes, "Message identifier."
gmail_mobile, Gmail Mobile, msglist_sender_alias, msglist_sender_aliasQ_PROTO_GMAIL_MOBILE, bytes, "Name of email sender."
gmail_mobile, Gmail Mobile, msglist_folder, msglist_folderQ_PROTO_GMAIL_MOBILE, bytes, "Indicates the directory from a message list."
gmail_mobile, Gmail Mobile, contact_email, contact_emailQ_PROTO_GMAIL_MOBILE, bytes, "Email address of a contact."
gmail_mobile, Gmail Mobile, contact_uid, contact_uidQ_PROTO_GMAIL_MOBILE, bytes, "The GMAIL unique identifier for a contact."
gmail_mobile, Gmail Mobile, contact_alias, contact_aliasQ_PROTO_GMAIL_MOBILE, bytes, "Alias of a contact."
gmail_mobile, Gmail Mobile, date, dateQ_PROTO_GMAIL_MOBILE, bytes, "Message date."
gmail_mobile, Gmail Mobile, attach_filename, attach_filenameQ_PROTO_GMAIL_MOBILE, bytes, "Attachment name."
gmail_mobile, Gmail Mobile, attach_id, attach_idQ_PROTO_GMAIL_MOBILE, bytes, "Attachment identifier."
gmail_mobile, Gmail Mobile, email_index, email_indexQ_PROTO_GMAIL_MOBILE, bytes, "Index of the request which the email is attached to."
gmail_mobile, Gmail Mobile, subject, subjectQ_PROTO_GMAIL_MOBILE, bytes, "Message subject."
gmail_mobile, Gmail Mobile, receiver_type, receiver_typeQ_PROTO_GMAIL_MOBILE, bytes, "Type of the email receiver."
gmail_mobile, Gmail Mobile, receiver_alias, receiver_aliasQ_PROTO_GMAIL_MOBILE, bytes, "Name of email receiver (included cc and bcc receivers)."
gmail_mobile, Gmail Mobile, receiver_email, receiver_emailQ_PROTO_GMAIL_MOBILE, bytes, "Email address of message receiver (included cc and bcc receivers)."
gmail_mobile, Gmail Mobile, receiver, receiverQ_PROTO_GMAIL_MOBILE, bytes, "Full address of email receiver (including cc and bcc receivers)."
gmail_mobile, Gmail Mobile, sender_alias, sender_aliasQ_PROTO_GMAIL_MOBILE, bytes, "Name of the email sender."
gmail_mobile, Gmail Mobile, sender_email, sender_emailQ_PROTO_GMAIL_MOBILE, bytes, "Email address of the email sender."
gmail_mobile, Gmail Mobile, sender, senderQ_PROTO_GMAIL_MOBILE, bytes, "Full address of email sender (alias followed by email address)."
gmail_mobile, Gmail Mobile, action, actionQ_PROTO_GMAIL_MOBILE, bytes, "Indicates if the message is read (Read) or composed (Compose)."
gmail_mobile, Gmail Mobile, login, loginQ_PROTO_GMAIL_MOBILE, bytes, "User's login string."
gmail_mobile, Gmail Mobile, session_id, session_idQ_PROTO_GMAIL_MOBILE, bytes, "Uniquely identifies the current user session."
gmail_mobile, Gmail Mobile, msglist_receiver_alias, msglist_receiver_aliasQ_PROTO_GMAIL_MOBILE, bytes, "Name of email receiver."
gmail_mobile, Gmail Mobile, draft, draftQ_PROTO_GMAIL_MOBILE, uint32, "Indicates if the email is a draft or has really been posted"
gmx, GMX webmail, attach_filename, attach_filenameQ_PROTO_GMX, bytes, "Attachment name."
gmx, GMX webmail, attach_id, attach_idQ_PROTO_GMX, bytes, "Attachment identifier."
gmx, GMX webmail, receiver_type, receiver_typeQ_PROTO_GMX, bytes, "Type of the email receiver."
gmx, GMX webmail, receiver_email, receiver_emailQ_PROTO_GMX, bytes, "Email address of message receiver (included cc and bcc receivers)."
gmx, GMX webmail, receiver_alias, receiver_aliasQ_PROTO_GMX, bytes, "Name of email receiver (included cc and bcc receivers)."
gmx, GMX webmail, receiver, receiverQ_PROTO_GMX, bytes, "Full address of email receiver (including cc and bcc receivers)."
gmx, GMX webmail, sender_email, sender_emailQ_PROTO_GMX, bytes, "Email address of the email sender."
gmx, GMX webmail, sender_alias, sender_aliasQ_PROTO_GMX, bytes, "Name of the email sender."
gmx, GMX webmail, sender, senderQ_PROTO_GMX, bytes, "Full address of email sender (alias followed by email address)."
gmx, GMX webmail, subject, subjectQ_PROTO_GMX, bytes, "Message subject."
gmx, GMX webmail, msg_id, msg_idQ_PROTO_GMX, bytes, "Identifier of the message."
gmx, GMX webmail, session_id, session_idQ_PROTO_GMX, bytes, "Uniquely identifies the current user session."
gmx, GMX webmail, login, loginQ_PROTO_GMX, bytes, "User's login string."
gnutella, Gnutella, user_agent, user_agentQ_PROTO_GNUTELLA, bytes, "Name of the software used."
gnutella, Gnutella, server, serverQ_PROTO_GNUTELLA, bytes, "Name of the server from which the file is downloaded."
gnutella, Gnutella, query, queryQ_PROTO_GNUTELLA, bytes, "Query sent to find a file."
gnutella, Gnutella, filename, filenameQ_PROTO_GNUTELLA, bytes, "Name of the transferred file."
gnutella, Gnutella, filesize, filesizeQ_PROTO_GNUTELLA, uint32, "Size (byte) of the transferred file."
gnutella, Gnutella, file_ed2k, file_ed2kQ_PROTO_GNUTELLA, bytes, "Hash ed2k of the downloaded file."
gnutella, Gnutella, file_sha1, file_sha1Q_PROTO_GNUTELLA, bytes, "Hash sha1 of the downloaded file."
gnutella, Gnutella, file_md5, file_md5Q_PROTO_GNUTELLA, bytes, "Hash md5 of the downloaded file."
gnutella, Gnutella, file_chunk_len, file_chunk_lenQ_PROTO_GNUTELLA, uint32, "Size of the transferred piece."
gnutella, Gnutella, file_chunk_data_offset, file_chunk_data_offsetQ_PROTO_GNUTELLA, uint32, "Offset of the transferred data."
gnutella, Gnutella, peer_addr, peer_addrQ_PROTO_GNUTELLA, string, "Gnutella peer's IPv4 address."
google, Google.com, login, loginQ_PROTO_GOOGLE, bytes, "User's login string."
google, Google.com, query_text, query_textQ_PROTO_GOOGLE, bytes, "Query sent to the search engine."
google, Google.com, query_raw, query_rawQ_PROTO_GOOGLE, bytes, "Contains the query sent to the search engine as indicated in the URL."
google, Google.com, query_type, query_typeQ_PROTO_GOOGLE, bytes, "Sort of query sent to the search engine."
google, Google.com, encoding, encodingQ_PROTO_GOOGLE, bytes, "Query encoding."
google, Google.com, query_index, query_indexQ_PROTO_GOOGLE, uint32, "A number containing the index of the showed results"
google_ads, Google ads, ad_channel, ad_channelQ_PROTO_GOOGLE_ADS, bytes, "'channel' ad attribute."
google_ads, Google ads, ad_url, ad_urlQ_PROTO_GOOGLE_ADS, bytes, "'url' ad attribute."
google_ads, Google ads, ad_url_full, ad_url_fullQ_PROTO_GOOGLE_ADS, bytes, "Complete ad URL."
google_ads, Google ads, ad_visible_url, ad_visible_urlQ_PROTO_GOOGLE_ADS, bytes, "'url' visible ad attribute."
google_ads, Google ads, ad_page, ad_pageQ_PROTO_GOOGLE_ADS, bytes, "Page on which the ad is displayed."
google_ads, Google ads, ad_client, ad_clientQ_PROTO_GOOGLE_ADS, bytes, "Buyer of the ad."
google_ads, Google ads, ad_text, ad_textQ_PROTO_GOOGLE_ADS, bytes, "Ad text description."
google_ads, Google ads, ad_type, ad_typeQ_PROTO_GOOGLE_ADS, bytes, "Ad type."
google_ads, Google ads, ad_title, ad_titleQ_PROTO_GOOGLE_ADS, bytes, "Ad title."
google_ads, Google ads, ad_bid_type, ad_bid_typeQ_PROTO_GOOGLE_ADS, bytes, "'bid_type' ad attribute."
google_ads, Google ads, ad_status, ad_statusQ_PROTO_GOOGLE_ADS, bytes, "Indicates whether the ad has been displayed or clicked."
google_ads, Google ads, ad_targeting_type, ad_targeting_typeQ_PROTO_GOOGLE_ADS, bytes, "'targeting_type' ad attribute."
google_earth, Google Earth, query_raw, query_rawQ_PROTO_GOOGLE_EARTH, bytes, "Contains the query sent to the search engine as indicated in the URL."
google_earth, Google Earth, query_text, query_textQ_PROTO_GOOGLE_EARTH, bytes, "Query sent to the search engine."
google_earth, Google Earth, near_text, near_textQ_PROTO_GOOGLE_EARTH, bytes, "Location being near place researched."
google_earth, Google Earth, near_raw, near_rawQ_PROTO_GOOGLE_EARTH, bytes, "Location being near place researched as indicated in the URL."
google_earth, Google Earth, start_addr_raw, start_addr_rawQ_PROTO_GOOGLE_EARTH, bytes, "Departure point as indicated in the URL as indicated in the URL."
google_earth, Google Earth, start_addr_text, start_addr_textQ_PROTO_GOOGLE_EARTH, bytes, "Encoded departure point ."
google_earth, Google Earth, end_addr_raw, end_addr_rawQ_PROTO_GOOGLE_EARTH, bytes, "Arrival point as indicated in the URL as indicated in the URL."
google_earth, Google Earth, end_addr_text, end_addr_textQ_PROTO_GOOGLE_EARTH, bytes, "Encoded arrival point."
google_earth, Google Earth, encoding, encodingQ_PROTO_GOOGLE_EARTH, bytes, "Query encoding."
google_groups, Google groups, sender_alias, sender_aliasQ_PROTO_GOOGLE_GROUPS, bytes, "Name of the email sender."
google_groups, Google groups, sender_email, sender_emailQ_PROTO_GOOGLE_GROUPS, bytes, "Email address of the email sender."
google_groups, Google groups, sender, senderQ_PROTO_GOOGLE_GROUPS, bytes, "Full address of email sender (alias followed by email address)."
google_groups, Google groups, date, dateQ_PROTO_GOOGLE_GROUPS, bytes, "Message date."
google_groups, Google groups, action, actionQ_PROTO_GOOGLE_GROUPS, bytes, "Indicates if the message is read (Read) or composed (Compose)."
google_groups, Google groups, msglist_date, msglist_dateQ_PROTO_GOOGLE_GROUPS, bytes, "Message date in a message list."
google_groups, Google groups, msglist_sender_alias, msglist_sender_aliasQ_PROTO_GOOGLE_GROUPS, bytes, "Name of email sender."
google_groups, Google groups, msglist_subject, msglist_subjectQ_PROTO_GOOGLE_GROUPS, bytes, "Message subject in a message list."
google_groups, Google groups, group_detailed_description, group_detailed_descriptionQ_PROTO_GOOGLE_GROUPS, bytes, "Detailed group description."
google_groups, Google groups, login, loginQ_PROTO_GOOGLE_GROUPS, bytes, "User's login string."
google_groups, Google groups, group_name, group_nameQ_PROTO_GOOGLE_GROUPS, bytes, "Name of the group the user has subscribed to."
google_groups, Google groups, group_join_request, group_join_requestQ_PROTO_GOOGLE_GROUPS, bytes, "Group to which the user want to subscribe."
google_groups, Google groups, alias, aliasQ_PROTO_GOOGLE_GROUPS, bytes, "Name of the email sender."
google_groups, Google groups, receiver_alias, receiver_aliasQ_PROTO_GOOGLE_GROUPS, bytes, "Name of email receiver (included cc and bcc receivers)."
google_groups, Google groups, receiver_email, receiver_emailQ_PROTO_GOOGLE_GROUPS, bytes, "Email address of message receiver (included cc and bcc receivers)."
google_groups, Google groups, receiver_type, receiver_typeQ_PROTO_GOOGLE_GROUPS, bytes, "Type of the email receiver."
google_groups, Google groups, receiver, receiverQ_PROTO_GOOGLE_GROUPS, bytes, "Full address of email receiver (including cc and bcc receivers)."
google_groups, Google groups, subject, subjectQ_PROTO_GOOGLE_GROUPS, bytes, "Message subject."
google_groups, Google groups, msglist_sender_email, msglist_sender_emailQ_PROTO_GOOGLE_GROUPS, bytes, "Address of email sender."
google_groups, Google groups, msglist_sender, msglist_senderQ_PROTO_GOOGLE_GROUPS, bytes, "Full address of email sender (alias and email address)."
google_groups, Google groups, member_alias, member_aliasQ_PROTO_GOOGLE_GROUPS, bytes, "Member name."
google_groups, Google groups, msglist_content, msglist_contentQ_PROTO_GOOGLE_GROUPS, bytes, "Message content in a message list."
google_groups, Google groups, query_text, query_textQ_PROTO_GOOGLE_GROUPS, bytes, "Query sent to the search engine."
google_groups, Google groups, query_raw, query_rawQ_PROTO_GOOGLE_GROUPS, bytes, "Contains the query sent to the search engine as indicated in the URL."
google_maps, Google Maps, query_text, query_textQ_PROTO_GOOGLE_MAPS, bytes, "Query sent to the search engine."
google_maps, Google Maps, query_raw, query_rawQ_PROTO_GOOGLE_MAPS, bytes, "Contains the query sent to the search engine as indicated in the URL."
google_maps, Google Maps, encoding, encodingQ_PROTO_GOOGLE_MAPS, bytes, "Query encoding."
google_maps, Google Maps, start_addr_raw, start_addr_rawQ_PROTO_GOOGLE_MAPS, bytes, "Departure point as indicated in the URL as indicated in the URL."
google_maps, Google Maps, start_addr, start_addrQ_PROTO_GOOGLE_MAPS, bytes, "Encoded departure point ."
google_maps, Google Maps, end_addr_raw, end_addr_rawQ_PROTO_GOOGLE_MAPS, bytes, "Arrival point as indicated in the URL as indicated in the URL."
google_maps, Google Maps, end_addr, end_addrQ_PROTO_GOOGLE_MAPS, bytes, "Encoded arrival point."
google_maps, Google Maps, zoom, zoomQ_PROTO_GOOGLE_MAPS, bytes, "Zoom level of the map."
google_maps, Google Maps, south, southQ_PROTO_GOOGLE_MAPS, bytes, "Latitude coordinate of South edge of the first tile that was loaded by the webpage."
google_maps, Google Maps, east, eastQ_PROTO_GOOGLE_MAPS, bytes, "Longitude coordinate of East edge of the first tile that was loaded by the webpage."
google_maps, Google Maps, west, westQ_PROTO_GOOGLE_MAPS, bytes, "Longitude coordinate of West edge of the first tile that was loaded by the webpage."
google_maps, Google Maps, north, northQ_PROTO_GOOGLE_MAPS, bytes, "Latitude coordinate of North edge of the first tile that was loaded by the webpage."
google_play, Google Play, application_name, application_nameQ_PROTO_GOOGLE_PLAY, bytes, "Name of the downloaded app."
gotomypc, GoToMyPC Remote Access, service, serviceQ_PROTO_GOTOMYPC, bytes, "Current service identification string."
gotomypc, GoToMyPC Remote Access, service_id, service_idQ_PROTO_GOTOMYPC, uint32, "Composite 32-bit integer value defining the service currently used. The first byte (LSB) gives the generic service definition, the second byte gives an advanced service definition for specific cases (example: File Transfer)."
gougou, Gougou.com, query_raw, query_rawQ_PROTO_GOUGOU, bytes, "Contains the query sent to the search engine as indicated in the URL."
gougou, Gougou.com, query_text, query_textQ_PROTO_GOUGOU, bytes, "Query sent to the search engine."
gre, Generic Routing Encapsulation, protocol, protocolQ_PROTO_GRE, bytes, "Identifier (string) of the upper layer protocol."
gtp, GPRS Tunneling Protocol, imsi, imsiQ_PROTO_GTP, bytes, "Unique ID of a mobile station SIM card (International Mobile Subscriber Identity)."
gtp, GPRS Tunneling Protocol, teid, teidQ_PROTO_GTP, uint32, "Transaction ID, available in version 1."
gtp, GPRS Tunneling Protocol, ms_address, ms_addressQ_PROTO_GTP, string, "IP address assigned to the mobile station."
gtp, GPRS Tunneling Protocol, ms_address_peer, ms_address_peerQ_PROTO_GTP, string, "IP address assigned to the mobile station on the peer half-session."
gtp, GPRS Tunneling Protocol, gsn_address, gsn_addressQ_PROTO_GTP, string, "GSN IP address."
gtp, GPRS Tunneling Protocol, gsn_address_control, gsn_address_controlQ_PROTO_GTP, string, "GSN Control IP address."
gtp, GPRS Tunneling Protocol, gsn_address_data, gsn_address_dataQ_PROTO_GTP, string, "GSN Data IP address."
gtp, GPRS Tunneling Protocol, gsn_type, gsn_typeQ_PROTO_GTP, bytes, "GSN address type."
gtp, GPRS Tunneling Protocol, access_point, access_pointQ_PROTO_GTP, bytes, "Access point name."
gtp, GPRS Tunneling Protocol, msisdn, msisdnQ_PROTO_GTP, bytes, "Unique mobile phone number identifying a given mobile station (Mobile Station International ISDN Number)."
gtp, GPRS Tunneling Protocol, reply_cause_code, reply_cause_codeQ_PROTO_GTP, uint32, "Return code following a create context request"
gtp, GPRS Tunneling Protocol, create_ctxt_delay, create_ctxt_delayQ_PROTO_GTP, string, "Time for PDP context creation"
gtp, GPRS Tunneling Protocol, session_time, session_timeQ_PROTO_GTP, string, "GTP session duration (time between create context and delete context)"
gtp, GPRS Tunneling Protocol, rai, raiQ_PROTO_GTP, bytes, "Represents the Routing Area Identity"
gtp, GPRS Tunneling Protocol, start_time, start_timeQ_PROTO_GTP, string, "Start date of the call"
gtp, GPRS Tunneling Protocol, stop_time, stop_timeQ_PROTO_GTP, string, "End date of the call"
gtp, GPRS Tunneling Protocol, teid_data, teid_dataQ_PROTO_GTP, uint32, "TEID data (Tunnel Endpoint Identifier)"
gtp, GPRS Tunneling Protocol, teid_control, teid_controlQ_PROTO_GTP, uint32, "TEID control plane (Tunnel Endpoint Identifier)"
gtp, GPRS Tunneling Protocol, imei, imeiQ_PROTO_GTP, bytes, "Unique ID of a mobile station equipment w/o SV (IMEI only)."
gtp, GPRS Tunneling Protocol, imei_sv, imei_svQ_PROTO_GTP, bytes, "Unique ID of a mobile station equipment (IMEI+SV)."
gtp, GPRS Tunneling Protocol, imei_tac, imei_tacQ_PROTO_GTP, bytes, "Unique ID of a mobile station equipment (TAC code only)."
gtp, GPRS Tunneling Protocol, qos_delay, qos_delayQ_PROTO_GTP, uint32, "Specifies the quality of service delay class."
gtp, GPRS Tunneling Protocol, qos_reliability, qos_reliabilityQ_PROTO_GTP, uint32, "Specifies the quality of service reliability class."
gtp, GPRS Tunneling Protocol, qos_peak, qos_peakQ_PROTO_GTP, uint32, "Specifies the quality of service peak throughput."
gtp, GPRS Tunneling Protocol, qos_precedence, qos_precedenceQ_PROTO_GTP, uint32, "Specifies the quality of service precedence class."
gtp, GPRS Tunneling Protocol, qos_mean, qos_meanQ_PROTO_GTP, uint32, "Specifies the quality of service mean throughput."
gtp, GPRS Tunneling Protocol, qos_alloc_ret_prio, qos_alloc_ret_prioQ_PROTO_GTP, uint32, "Specifies the Allocation/Retention priority."
gtp, GPRS Tunneling Protocol, qos_max_uplink, qos_max_uplinkQ_PROTO_GTP, uint32, "Specifies the maximum uplink throughput."
gtp, GPRS Tunneling Protocol, qos_max_downlink, qos_max_downlinkQ_PROTO_GTP, uint32, "Specifies the maximum downlink throughput."
gtp, GPRS Tunneling Protocol, location_type, location_typeQ_PROTO_GTP, uint32, "Terminal Location Type"
gtp, GPRS Tunneling Protocol, location, locationQ_PROTO_GTP, bytes, "Terminal Location"
gtp, GPRS Tunneling Protocol, location_mcc, location_mccQ_PROTO_GTP, bytes, "Mobile Country Code (MCC) is part of the IMSI number with uniquely identifies a particular subscriber."
gtp, GPRS Tunneling Protocol, location_mnc, location_mncQ_PROTO_GTP, bytes, "A Mobile Network Code (MNC) is used in combination with a Mobile Country Code to uniquely identify a mobile phone."
gtp, GPRS Tunneling Protocol, location_lac, location_lacQ_PROTO_GTP, bytes, "A Location Area Code (LAC) is a unique number given to a set of base stations that are grouped together."
gtp, GPRS Tunneling Protocol, location_ci, location_ciQ_PROTO_GTP, bytes, "A Cell Identity (CI) is used to uniquely identify a cell inside a location area."
gtp, GPRS Tunneling Protocol, location_sac, location_sacQ_PROTO_GTP, bytes, "A Service Area Code (SAC) is used to uniquely identify an area consisting of one or more cells belonging to the same location area."
gtp, GPRS Tunneling Protocol, location_rai, location_raiQ_PROTO_GTP, bytes, "A Routing Area Identification (RAI) is used to uniquely identify a routing area."
gtp, GPRS Tunneling Protocol, imsi_cc, imsi_ccQ_PROTO_GTP, uint32, "Mobile Country Code"
gtp, GPRS Tunneling Protocol, imsi_nc, imsi_ncQ_PROTO_GTP, uint32, "Mobile National Code"
gtpv2, GPRS Tunneling Protocol version 2, seq, seqQ_PROTO_GTPV2, uint32, "Packet sequence number."
gtpv2, GPRS Tunneling Protocol version 2, teid, teidQ_PROTO_GTPV2, uint32, "Transaction ID, available in version 1."
gtpv2, GPRS Tunneling Protocol version 2, access_point, access_pointQ_PROTO_GTPV2, bytes, "Access point name."
gtpv2, GPRS Tunneling Protocol version 2, imei, imeiQ_PROTO_GTPV2, bytes, "Unique ID of a mobile station equipment w/o SV (IMEI only)."
gtpv2, GPRS Tunneling Protocol version 2, imei_sv, imei_svQ_PROTO_GTPV2, bytes, "Unique ID of a mobile station equipment (IMEI+SV)."
gtpv2, GPRS Tunneling Protocol version 2, imei_tac, imei_tacQ_PROTO_GTPV2, bytes, "Unique ID of a mobile station equipment (TAC code only)."
gtpv2, GPRS Tunneling Protocol version 2, imsi, imsiQ_PROTO_GTPV2, bytes, "Unique ID of a mobile station SIM card (International Mobile Subscriber Identity)."
gtpv2, GPRS Tunneling Protocol version 2, imsi_cc, imsi_ccQ_PROTO_GTPV2, uint32, "Mobile Country Code"
gtpv2, GPRS Tunneling Protocol version 2, imsi_nc, imsi_ncQ_PROTO_GTPV2, uint32, "Mobile National Code"
gtpv2, GPRS Tunneling Protocol version 2, msisdn, msisdnQ_PROTO_GTPV2, bytes, "Unique mobile phone number identifying a given mobile station (Mobile Station International ISDN Number)."
gtpv2, GPRS Tunneling Protocol version 2, ms_address, ms_addressQ_PROTO_GTPV2, string, "IPv4 address assigned to the mobile station."
gtpv2, GPRS Tunneling Protocol version 2, reply_cause_code, reply_cause_codeQ_PROTO_GTPV2, uint32, "Return code following a create context request"
gtpv2, GPRS Tunneling Protocol version 2, start_time, start_timeQ_PROTO_GTPV2, string, "Start date of the call"
gtpv2, GPRS Tunneling Protocol version 2, stop_time, stop_timeQ_PROTO_GTPV2, string, "End date of the call"
gtpv2, GPRS Tunneling Protocol version 2, session_duration, session_durationQ_PROTO_GTPV2, string, "Call duration - not extracted"
gtpv2, GPRS Tunneling Protocol version 2, create_ctxt_delay, create_ctxt_delayQ_PROTO_GTPV2, string, "Time for PDP context creation"
gtpv2, GPRS Tunneling Protocol version 2, s1u_enodeb_gtpu_teid, s1u_enodeb_gtpu_teidQ_PROTO_GTPV2, uint32, "S1-U eNodeB GTP-U interface TEID"
gtpv2, GPRS Tunneling Protocol version 2, s1u_sgw_gtpu_teid, s1u_sgw_gtpu_teidQ_PROTO_GTPV2, uint32, "S1-U SGW GTP-U interface TEID"
gtpv2, GPRS Tunneling Protocol version 2, s5_s8_sgw_gtpu_teid, s5_s8_sgw_gtpu_teidQ_PROTO_GTPV2, uint32, "S5/S8 SGW GTP-U interface TEID"
gtpv2, GPRS Tunneling Protocol version 2, s5_s8_pgw_gtpu_teid, s5_s8_pgw_gtpu_teidQ_PROTO_GTPV2, uint32, "S5/S8 PGW GTP-U interface TEID"
gtpv2, GPRS Tunneling Protocol version 2, s5_s8_sgw_gtpc_teid, s5_s8_sgw_gtpc_teidQ_PROTO_GTPV2, uint32, "S5/S8 SGW GTP-C interface TEID"
gtpv2, GPRS Tunneling Protocol version 2, s5_s8_pgw_gtpc_teid, s5_s8_pgw_gtpc_teidQ_PROTO_GTPV2, uint32, "S5/S8 PGW GTP-C interface TEID"
gtpv2, GPRS Tunneling Protocol version 2, s11_mme_gtpc_teid, s11_mme_gtpc_teidQ_PROTO_GTPV2, uint32, "S11 MME GTP-C interface TEID"
gtpv2, GPRS Tunneling Protocol version 2, s11_s4_sgw_gtpc_teid, s11_s4_sgw_gtpc_teidQ_PROTO_GTPV2, uint32, "S11/S4 SGW GTP-C interface TEID"
gtpv2, GPRS Tunneling Protocol version 2, s10_mme_gtpc_teid, s10_mme_gtpc_teidQ_PROTO_GTPV2, uint32, "S10 MME GTP-C interface TEID"
gtpv2, GPRS Tunneling Protocol version 2, s3_mme_gtpc_teid, s3_mme_gtpc_teidQ_PROTO_GTPV2, uint32, "S3 MME GTP-C interface TEID"
gtpv2, GPRS Tunneling Protocol version 2, s3_sgsn_gtpc_teid, s3_sgsn_gtpc_teidQ_PROTO_GTPV2, uint32, "S3 SGSN GTP-C interface TEID"
gtpv2, GPRS Tunneling Protocol version 2, s4_sgw_gtpu_teid, s4_sgw_gtpu_teidQ_PROTO_GTPV2, uint32, "S4 SGW GTP-U interface TEID"
gtpv2, GPRS Tunneling Protocol version 2, s4_sgsn_gtpu_teid, s4_sgsn_gtpu_teidQ_PROTO_GTPV2, uint32, "S4 SGSN GTP-U interface TEID"
gtpv2, GPRS Tunneling Protocol version 2, s4_sgsn_gtpc_teid, s4_sgsn_gtpc_teidQ_PROTO_GTPV2, uint32, "S4 SGSN GTP-C interface TEID"
gtpv2, GPRS Tunneling Protocol version 2, s12_rnc_gtpu_teid, s12_rnc_gtpu_teidQ_PROTO_GTPV2, uint32, "S12 RNC GTP-U interface TEID"
gtpv2, GPRS Tunneling Protocol version 2, s12_sgw_gtpu_teid, s12_sgw_gtpu_teidQ_PROTO_GTPV2, uint32, "SGW RNC GTP-U interface TEID"
gtpv2, GPRS Tunneling Protocol version 2, s1u_enodeb_gtpu_address, s1u_enodeb_gtpu_addressQ_PROTO_GTPV2, string, "S1-U eNodeB GTP-U interface IP address"
gtpv2, GPRS Tunneling Protocol version 2, s1u_sgw_gtpu_address, s1u_sgw_gtpu_addressQ_PROTO_GTPV2, string, "S1-U SGW GTP-U interface IP address"
gtpv2, GPRS Tunneling Protocol version 2, s5_s8_sgw_gtpu_address, s5_s8_sgw_gtpu_addressQ_PROTO_GTPV2, string, "S5/S8 SGW GTP-U interface IP address"
gtpv2, GPRS Tunneling Protocol version 2, s5_s8_pgw_gtpu_address, s5_s8_pgw_gtpu_addressQ_PROTO_GTPV2, string, "S5/S8 PGW GTP-U interface IP address"
gtpv2, GPRS Tunneling Protocol version 2, s5_s8_sgw_gtpc_address, s5_s8_sgw_gtpc_addressQ_PROTO_GTPV2, string, "S5/S8 SGW GTP-C interface IP address"
gtpv2, GPRS Tunneling Protocol version 2, s5_s8_pgw_gtpc_address, s5_s8_pgw_gtpc_addressQ_PROTO_GTPV2, string, "S5/S8 PGW GTP-C interface IP address"
gtpv2, GPRS Tunneling Protocol version 2, s11_mme_gtpc_address, s11_mme_gtpc_addressQ_PROTO_GTPV2, string, "S11 MME GTP-C interface IP address"
gtpv2, GPRS Tunneling Protocol version 2, s11_s4_sgw_gtpc_address, s11_s4_sgw_gtpc_addressQ_PROTO_GTPV2, string, "S11/S4 SGW GTP-C interface IP address"
gtpv2, GPRS Tunneling Protocol version 2, s10_mme_gtpc_address, s10_mme_gtpc_addressQ_PROTO_GTPV2, string, "S10 MME GTP-C interface IP address"
gtpv2, GPRS Tunneling Protocol version 2, s3_mme_gtpc_address, s3_mme_gtpc_addressQ_PROTO_GTPV2, string, "S3 MME GTP-C interface IP address"
gtpv2, GPRS Tunneling Protocol version 2, s3_sgsn_gtpc_address, s3_sgsn_gtpc_addressQ_PROTO_GTPV2, string, "S3 SGSN GTP-C interface IP address"
gtpv2, GPRS Tunneling Protocol version 2, s4_sgw_gtpu_address, s4_sgw_gtpu_addressQ_PROTO_GTPV2, string, "S4 SGW GTP-U interface IP address"
gtpv2, GPRS Tunneling Protocol version 2, s4_sgsn_gtpu_address, s4_sgsn_gtpu_addressQ_PROTO_GTPV2, string, "S4 SGSN GTP-U interface IP address"
gtpv2, GPRS Tunneling Protocol version 2, s4_sgsn_gtpc_address, s4_sgsn_gtpc_addressQ_PROTO_GTPV2, string, "S4 SGSN GTP-C interface IP address"
gtpv2, GPRS Tunneling Protocol version 2, s12_rnc_gtpu_address, s12_rnc_gtpu_addressQ_PROTO_GTPV2, string, "S12 RNC GTP-U interface IP address"
gtpv2, GPRS Tunneling Protocol version 2, s12_sgw_gtpu_address, s12_sgw_gtpu_addressQ_PROTO_GTPV2, string, "SGW RNC GTP-U interface IP address"
h225, H225, call_setup, call_setupQ_PROTO_H225, string, "Call setup delay."
h225, H225, call_duration, call_durationQ_PROTO_H225, string, "Call duration."
h225, H225, session_duration, session_durationQ_PROTO_H225, string, "Call setup duration."
h225, H225, start_time, start_timeQ_PROTO_H225, string, "Start date of the call."
h225, H225, time_before_spk, time_before_spkQ_PROTO_H225, string, "Waiting delay before speak"
h225, H225, call_id, call_idQ_PROTO_H225, bytes, "Call id, extracted for each call."
h225, H225, end_status, end_statusQ_PROTO_H225, bytes, "Status of the call end"
h225, H225, media_attr_encoding, media_attr_encodingQ_PROTO_H225, bytes, "The encoding of media data."
h225, H225, caller, callerQ_PROTO_H225, bytes, "Contains the identity (or the phone number) of the initiator of the call."
h225, H225, callee, calleeQ_PROTO_H225, bytes, "Contains the identity (or the phone number) of the called party for a call."
h225, H225, method, methodQ_PROTO_H225, bytes, "The command"
h225, H225, h245_addr, h245_addrQ_PROTO_H225, string, "Address used by h245 session."
h225, H225, request_call_id, request_call_idQ_PROTO_H225, bytes, "Call's id in the message."
h225, H225, request_caller, request_callerQ_PROTO_H225, bytes, "Contains the identity (or the phone number) of the initiator in the message"
h225, H225, request_callee, request_calleeQ_PROTO_H225, bytes, "Contains the identity (or the phone number) of the called party in the message."
h225, H225, audio_data, audio_dataQ_PROTO_H225, bytes, "Encoding can be used in audio flow."
h225, H225, media_control_channel_addr, media_control_channel_addrQ_PROTO_H225, string, "Address used for a rtcp channel."
h225, H225, media_channel_addr, media_channel_addrQ_PROTO_H225, string, "Address used for a rtp channel."
h225, H225, h245_method, h245_methodQ_PROTO_H225, bytes, "The command for a H245 message."
h225, H225, language, languageQ_PROTO_H225, bytes, "Used language."
h225, H225, product_id, product_idQ_PROTO_H225, bytes, "H225 product component identifier."
h225, H225, version, versionQ_PROTO_H225, bytes, "Version of the H225 VoIP client software."
h245, H245, media_attr_encoding, media_attr_encodingQ_PROTO_H245, bytes, "The encoding of media data."
h245, H245, method, methodQ_PROTO_H245, bytes, "The command"
h245, H245, media_control_channel_addr, media_control_channel_addrQ_PROTO_H245, string, "Address used for a rtcp channel."
h245, H245, media_channel_addr, media_channel_addrQ_PROTO_H245, string, "Address used for a rtp channel."
h248_binary, h248 Protocol (Megaco) in binary mode, context_id, context_idQ_PROTO_H248_BINARY, uint32, "The context ID identifies the context. It is assigned by the Media Gateway. It can be an integer, -"
h248_binary, h248 Protocol (Megaco) in binary mode, call_id, call_idQ_PROTO_H248_BINARY, bytes, "Call id, extracted for each call."
h248_binary, h248 Protocol (Megaco) in binary mode, action, actionQ_PROTO_H248_BINARY, bytes, "The action designates the command that is executed during the transaction. The coommand name is postfixed by Req if the transaction is a request, by Reply if the transaction is a reply"
h248_binary, h248 Protocol (Megaco) in binary mode, from_ip, from_ipQ_PROTO_H248_BINARY, string, "Source IPv4 address"
h248_binary, h248 Protocol (Megaco) in binary mode, to_ip, to_ipQ_PROTO_H248_BINARY, string, "Destination IPv4 address"
h248_binary, h248 Protocol (Megaco) in binary mode, src_audio_connection, src_audio_connectionQ_PROTO_H248_BINARY, bytes, "Source audio connection type"
h248_binary, h248 Protocol (Megaco) in binary mode, src_video_connection, src_video_connectionQ_PROTO_H248_BINARY, bytes, "Source video connection type"
h248_binary, h248 Protocol (Megaco) in binary mode, dst_audio_connection, dst_audio_connectionQ_PROTO_H248_BINARY, bytes, "Destination audio connection type"
h248_binary, h248 Protocol (Megaco) in binary mode, dst_video_connection, dst_video_connectionQ_PROTO_H248_BINARY, bytes, "Destination video connection type"
h248_binary, h248 Protocol (Megaco) in binary mode, response_code, response_codeQ_PROTO_H248_BINARY, uint32, "Return code, extracted from the reply"
h248_text, h248 Protocol (Megaco) in text mode, context_id, context_idQ_PROTO_H248_TEXT, bytes, "The context ID identifies the context. It is assigned by the Media Gateway. It can be an integer, -"
h248_text, h248 Protocol (Megaco) in text mode, call_id, call_idQ_PROTO_H248_TEXT, bytes, "Call id, extracted for each call."
h248_text, h248 Protocol (Megaco) in text mode, action, actionQ_PROTO_H248_TEXT, bytes, "The action designates the command that is executed during the transaction. The coommand name is postfixed by Req if the transaction is a request, by Reply if the transaction is a reply"
h248_text, h248 Protocol (Megaco) in text mode, from_ip, from_ipQ_PROTO_H248_TEXT, string, "Source IPv4 address"
h248_text, h248 Protocol (Megaco) in text mode, to_ip, to_ipQ_PROTO_H248_TEXT, string, "Destination IPv4 address"
h248_text, h248 Protocol (Megaco) in text mode, src_audio_connection, src_audio_connectionQ_PROTO_H248_TEXT, bytes, "Source audio connection type"
h248_text, h248 Protocol (Megaco) in text mode, src_video_connection, src_video_connectionQ_PROTO_H248_TEXT, bytes, "Source video connection type"
h248_text, h248 Protocol (Megaco) in text mode, dst_audio_connection, dst_audio_connectionQ_PROTO_H248_TEXT, bytes, "Destination audio connection type"
h248_text, h248 Protocol (Megaco) in text mode, dst_video_connection, dst_video_connectionQ_PROTO_H248_TEXT, bytes, "Destination video connection type"
h248_text, h248 Protocol (Megaco) in text mode, response_code, response_codeQ_PROTO_H248_TEXT, uint32, "Return code, extracted from the reply"
hi5, Hi5.com, nickname, nicknameQ_PROTO_HI5, bytes, "User's profile displayed name."
hi5, Hi5.com, password, passwordQ_PROTO_HI5, bytes, "User's password string."
hi5, Hi5.com, login, loginQ_PROTO_HI5, bytes, "User's login string."
hi5, Hi5.com, uid, uidQ_PROTO_HI5, bytes, "Generic user ID."
hi5, Hi5.com, is_mobile_service, is_mobile_serviceQ_PROTO_HI5, uint32, "Whether or not the access was made through a mobile device."
high_entropy, High Entropy, entropy, entropyQ_PROTO_HIGH_ENTROPY, uint32, "Computed entropy value."
hsrp, Hot Standby Router Protocol, virtual_addr, virtual_addrQ_PROTO_HSRP, string, "Virtual IP address used by the group."
http, HyperText Transfer Protocol, server, serverQ_PROTO_HTTP, bytes, "Normalized web server name, including lowercase transformation and suffix cleaning."
http, HyperText Transfer Protocol, host, hostQ_PROTO_HTTP, bytes, "Host name value extracted from the Host header."
http, HyperText Transfer Protocol, host_start_offset, host_start_offsetQ_PROTO_HTTP, uint32, "Offset to the first Host HTTP header value byte in the TCP stream. The Host start is located in the current packet (the offset value is positive)."
http, HyperText Transfer Protocol, location, locationQ_PROTO_HTTP, bytes, "Destination address where the client is redirected."
http, HyperText Transfer Protocol, referer, refererQ_PROTO_HTTP, bytes, "Source address from which the client obtained the requested URI."
http, HyperText Transfer Protocol, referer_path, referer_pathQ_PROTO_HTTP, bytes, "Source address from which the client obtained the requested URI without query parameters."
http, HyperText Transfer Protocol, referer_server, referer_serverQ_PROTO_HTTP, bytes, "Contains the host or the website name of the referer."
http, HyperText Transfer Protocol, uri, uriQ_PROTO_HTTP, bytes, "Normalized URL form (path + request) of a web resource, with UNRESERVED percent-encoded characters decoding (RFC3986)."
http, HyperText Transfer Protocol, uri_path, uri_pathQ_PROTO_HTTP, bytes, "Normalized URL path of a web resource, without query parameters."
http, HyperText Transfer Protocol, uri_full, uri_fullQ_PROTO_HTTP, bytes, "Complete name (scheme/authority + path + request) of a web resource."
http, HyperText Transfer Protocol, uri_start_offset, uri_start_offsetQ_PROTO_HTTP, uint32, "Offset to the first URI byte in the TCP stream. The URI start is located in the current packet (the offset value is positive)."
http, HyperText Transfer Protocol, user_agent, user_agentQ_PROTO_HTTP, bytes, "Software used by the client to access the web page."
http, HyperText Transfer Protocol, user_agent_start_offset, user_agent_start_offsetQ_PROTO_HTTP, uint32, "Offset to the first User-agent byte in the TCP stream. The User-agent start is located in the current packet (the offset value is positive)."
http, HyperText Transfer Protocol, mime_type, mime_typeQ_PROTO_HTTP, bytes, "Content type of the request or the web page."
http, HyperText Transfer Protocol, file_type, file_typeQ_PROTO_HTTP, bytes, "Received or sent file content type (prefix-based pattern recognition) exchanged using this protocol."
http, HyperText Transfer Protocol, content_disposition, content_dispositionQ_PROTO_HTTP, bytes, "Information related to the disposition of the content present on the web page."
http, HyperText Transfer Protocol, forward_addr, forward_addrQ_PROTO_HTTP, string, "IPv4 DNS address to which the client is redirected. This is the http header X-Forwarded-for."
http, HyperText Transfer Protocol, forward_redline, forward_redlineQ_PROTO_HTTP, string, "IPv4 address found in the x-forward-redline"
http, HyperText Transfer Protocol, method, methodQ_PROTO_HTTP, bytes, "HTTP command sent by the client."
http, HyperText Transfer Protocol, proxy_auth, proxy_authQ_PROTO_HTTP, bytes, "Authentication type on the proxy."
http, HyperText Transfer Protocol, proxy_login, proxy_loginQ_PROTO_HTTP, bytes, "Login used for proxy authentication."
http, HyperText Transfer Protocol, proxy_realm, proxy_realmQ_PROTO_HTTP, bytes, "Parameter used for proxy authentication."
http, HyperText Transfer Protocol, smb_client, smb_clientQ_PROTO_HTTP, bytes, "Name of the computer during NTLM authentication (Windows environment)."
http, HyperText Transfer Protocol, version, versionQ_PROTO_HTTP, bytes, "Protocol version."
http, HyperText Transfer Protocol, server_agent, server_agentQ_PROTO_HTTP, bytes, "Name of the server software."
http, HyperText Transfer Protocol, rtt, rttQ_PROTO_HTTP, string, "Server response time, calculated between the HTTP Request, and the client acknowledgement of the first non-empty HTTP Response packet."
http, HyperText Transfer Protocol, directory, directoryQ_PROTO_HTTP, bytes, "Directory of the accessed web page."
http, HyperText Transfer Protocol, cookie, cookieQ_PROTO_HTTP, bytes, "Raw value of the HTTP Cookie header line, containing the HTTP request cookies."
http, HyperText Transfer Protocol, code, codeQ_PROTO_HTTP, uint32, "Return code sent by the server."
http, HyperText Transfer Protocol, content_len, content_lenQ_PROTO_HTTP, uint64, "Contains the content length of the HTTP request/response."
http, HyperText Transfer Protocol, x_content_urn, x_content_urnQ_PROTO_HTTP, bytes, "Contains the different hashes of downloaded file (used by Gnutella)."
http, HyperText Transfer Protocol, filename, filenameQ_PROTO_HTTP, bytes, "Name of the transferred file."
http, HyperText Transfer Protocol, content, contentQ_PROTO_HTTP, buffer, "Message content."
http, HyperText Transfer Protocol, content_range, content_rangeQ_PROTO_HTTP, bytes, "Contains information about the size and offset of downloaded file (used by Gnutella)."
http, HyperText Transfer Protocol, charset, charsetQ_PROTO_HTTP, bytes, "Contains the name of the used charset."
http, HyperText Transfer Protocol, wap_profile, wap_profileQ_PROTO_HTTP, bytes, "url link that contains the specification of the used handset."
http, HyperText Transfer Protocol, header_raw, header_rawQ_PROTO_HTTP, bytes, "One HTTP header line (field and value)."
http, HyperText Transfer Protocol, header_name, header_nameQ_PROTO_HTTP, bytes, "One HTTP header line (field)."
http, HyperText Transfer Protocol, header_value, header_valueQ_PROTO_HTTP, bytes, "One HTTP header line (value)."
http, HyperText Transfer Protocol, header_end_offset, header_end_offsetQ_PROTO_HTTP, uint32, "Offset to the first byte after the last HTTP Header-line (\\r\\n included). This is an offset to the '\\r' character of the second carriage return."
http, HyperText Transfer Protocol, header_statusline, header_statuslineQ_PROTO_HTTP, bytes, "The status line, just before the header lines."
http, HyperText Transfer Protocol, auth_username, auth_usernameQ_PROTO_HTTP, bytes, "Login used in the HTTP Authorization request extension for authentication. The supported authentication methods are Basic and Digest."
http, HyperText Transfer Protocol, auth_password, auth_passwordQ_PROTO_HTTP, bytes, "Password used in the HTTP request Authorization extension. The only supported authentication method for password extraction is Basic."
http, HyperText Transfer Protocol, mime_type_main, mime_type_mainQ_PROTO_HTTP, bytes, "Primary part of the MIME type."
http, HyperText Transfer Protocol, mime_type_sub, mime_type_subQ_PROTO_HTTP, bytes, "Second part of the MIME type."
http, HyperText Transfer Protocol, part_header_name, part_header_nameQ_PROTO_HTTP, bytes, "Name of a header line. Extracted only if content-type is multipart"
http, HyperText Transfer Protocol, part_header_value, part_header_valueQ_PROTO_HTTP, bytes, "Value of a header line. Extracted only if content-type is multipart"
http, HyperText Transfer Protocol, part_name, part_nameQ_PROTO_HTTP, bytes, "Name of uploaded data or field. Extracted only if content-type is multipart"
http, HyperText Transfer Protocol, part_filename, part_filenameQ_PROTO_HTTP, bytes, "Name of uploaded file. Extracted only if content-type is multipart"
http, HyperText Transfer Protocol, uri_param_name, uri_param_nameQ_PROTO_HTTP, bytes, "URL parameter name (without URL decoding)."
http, HyperText Transfer Protocol, uri_param_value, uri_param_valueQ_PROTO_HTTP, bytes, "URL parameter value (without URL decoding)."
http, HyperText Transfer Protocol, uri_raw, uri_rawQ_PROTO_HTTP, bytes, "Complete name (scheme/authority + path + request) of a web resource."
http, HyperText Transfer Protocol, uri_raw_path, uri_raw_pathQ_PROTO_HTTP, bytes, "Complete name (scheme/authority + path) of a web resource without query parameters."
http, HyperText Transfer Protocol, index, indexQ_PROTO_HTTP, uint32, "Identifier of the request and response in a HTTP flow."
http, HyperText Transfer Protocol, response_ts, response_tsQ_PROTO_HTTP, string, "Timestamp of the first packet of a HTTP response."
http, HyperText Transfer Protocol, request_ts, request_tsQ_PROTO_HTTP, string, "Timestamp of the first packet of a HTTP query."
http, HyperText Transfer Protocol, connection_header, connection_headerQ_PROTO_HTTP, bytes, "Options in the content of Connection:"
http, HyperText Transfer Protocol, upgrade_header, upgrade_headerQ_PROTO_HTTP, bytes, "Protocoles in the content of Upgrade:"
http, HyperText Transfer Protocol, request_size, request_sizeQ_PROTO_HTTP, uint64, "Contains the total length in bytes of the request or the response (including HTTP headers). This attribute is computed at the end of the request or response."
http, HyperText Transfer Protocol, dechunk_size, dechunk_sizeQ_PROTO_HTTP, uint32, "Contains length of dechunked data."
http, HyperText Transfer Protocol, decompress_size, decompress_sizeQ_PROTO_HTTP, uint32, "Contains length of decompressed data."
http, HyperText Transfer Protocol, content_encoding, content_encodingQ_PROTO_HTTP, bytes, "Contains content encoding format."
http, HyperText Transfer Protocol, accept_encoding, accept_encodingQ_PROTO_HTTP, bytes, "Contains the accepted encodings."
http, HyperText Transfer Protocol, accept_language, accept_languageQ_PROTO_HTTP, bytes, "Contains the languages accepted by the browser (ACCEPT-LANGUAGE HTTP header)."
http, HyperText Transfer Protocol, content_language, content_languageQ_PROTO_HTTP, bytes, "Contains the content languages (CONTENT-LANGUAGE HTTP header)."
http, HyperText Transfer Protocol, pragma, pragmaQ_PROTO_HTTP, bytes, "Contains the current request/response chain pragmas (PRAGMA HTTP header)."
http, HyperText Transfer Protocol, cache_control, cache_controlQ_PROTO_HTTP, bytes, "Contains the current request/response chain cache-control directives (CACHE-CONTROL HTTP header)."
http, HyperText Transfer Protocol, date, dateQ_PROTO_HTTP, bytes, "Contains the date of the response (DATE HTTP header)."
http, HyperText Transfer Protocol, expires, expiresQ_PROTO_HTTP, bytes, "Contains the expiration date of the response (EXPIRES HTTP header)."
http, HyperText Transfer Protocol, age, ageQ_PROTO_HTTP, bytes, "Contains the sender's estimate of the amount of time since the response was generated at the origin server (AGE HTTP header)."
http, HyperText Transfer Protocol, etag, etagQ_PROTO_HTTP, bytes, "Contains the current value of the entity tag for the requested variant (ETAG HTTP header)."
http, HyperText Transfer Protocol, set_cookie, set_cookieQ_PROTO_HTTP, bytes, "Contains a cookie stored by the server (SET-COOKIE HTTP header)."
http, HyperText Transfer Protocol, image_type, image_typeQ_PROTO_HTTP, bytes, "File format."
http, HyperText Transfer Protocol, image_width, image_widthQ_PROTO_HTTP, uint32, "Width of the video in pixels."
http, HyperText Transfer Protocol, image_height, image_heightQ_PROTO_HTTP, uint32, "Height of the video in pixels."
http, HyperText Transfer Protocol, video_type, video_typeQ_PROTO_HTTP, bytes, "File format."
http, HyperText Transfer Protocol, video_brand, video_brandQ_PROTO_HTTP, bytes, "Normalized video format specification identifier."
http, HyperText Transfer Protocol, video_duration, video_durationQ_PROTO_HTTP, uint32, "Duration of the video in seconds."
http, HyperText Transfer Protocol, video_width, video_widthQ_PROTO_HTTP, uint32, "Width of the video in pixels."
http, HyperText Transfer Protocol, video_height, video_heightQ_PROTO_HTTP, uint32, "Height of the video in pixels."
http, HyperText Transfer Protocol, video_datarate, video_datarateQ_PROTO_HTTP, uint32, "Video bitrate in kilobits per second."
http, HyperText Transfer Protocol, video_avgdatarate, video_avgdatarateQ_PROTO_HTTP, uint32, "Average video bitrate in kilobits per second."
http, HyperText Transfer Protocol, audio_datarate, audio_datarateQ_PROTO_HTTP, uint32, "Audio bitrate in kilobits per second."
http, HyperText Transfer Protocol, video_framerate, video_framerateQ_PROTO_HTTP, uint32, "Number of frames per second."
http, HyperText Transfer Protocol, start_time, start_timeQ_PROTO_HTTP, uint32, "Start date of the call."
http, HyperText Transfer Protocol, video_url, video_urlQ_PROTO_HTTP, bytes, "URL of the binary video file referenced by the current metadata."
http, HyperText Transfer Protocol, total_datarate, total_datarateQ_PROTO_HTTP, uint32, "Sum of video and audio datarates."
http, HyperText Transfer Protocol, ntlm_domain, ntlm_domainQ_PROTO_HTTP, bytes, "Domain"
http, HyperText Transfer Protocol, ntlm_user, ntlm_userQ_PROTO_HTTP, bytes, "User"
http, HyperText Transfer Protocol, ntlm_workstation, ntlm_workstationQ_PROTO_HTTP, bytes, "Workstation"
http, HyperText Transfer Protocol, uri_decoded, uri_decodedQ_PROTO_HTTP, bytes, "Normalized and decoded URL form (path + request) of a web resource, including UNRESERVED percent-encoded characters, '+' characters decoding, dot-segments decoding ('/./', '/../', '//'), and trailing '?' character removal."
http, HyperText Transfer Protocol, uri_get_decoded, uri_get_decodedQ_PROTO_HTTP, bytes, "Normalized and decoded URL form (path + request) of an HTTP GET request to a web resource, including UNRESERVED percent-encoded characters, '+' characters decoding, dot-segments decoding ('/./', '/../', '//'), and trailing '?' character removal."
http, HyperText Transfer Protocol, uri_post_decoded, uri_post_decodedQ_PROTO_HTTP, bytes, "Normalized and decoded URL form (path + request) of an HTTP POST request to a web resource, including UNRESERVED percent-encoded characters, '+' characters decoding, dot-segments decoding ('/./', '/../', '//'), and trailing '?' character removal."
http, HyperText Transfer Protocol, uri_path_decoded, uri_path_decodedQ_PROTO_HTTP, bytes, "Normalized and decoded URL path of a web resource, without query parameters, including UNRESERVED percent-encoded characters, '+' characters decoding, dot-segments decoding ('/./', '/../', '//'), and trailing '?' character removal."
http, HyperText Transfer Protocol, post_variable_decoded, post_variable_decodedQ_PROTO_HTTP, bytes, "Extracts the 'name/value' metadata from each web-form CGI parameter found in a POST HTTP Request. The name and value strings are normalized, including UNRESERVED percent-encoded characters, '+' characters decoding, dot-segments decoding ('/./', '/../', '//'), and trailing '?' character removal. The parameters are extracted from the URL of the request, and/or from the 'x-www-form-urlencoded' POST data."
http, HyperText Transfer Protocol, uri_unicode_normalized, uri_unicode_normalizedQ_PROTO_HTTP, bytes, "UTF-8 normalized URL according to Unicode (http://unicode.org/reports/tr15/) (after decoding of unreserved percent-encoded characters and '+')."
http, HyperText Transfer Protocol, last_modified, last_modifiedQ_PROTO_HTTP, bytes, "Contains the date and time at which the origin server believes the variant was last modified."
hulu, Hulu, video_datarate, video_datarateQ_PROTO_HULU, bytes, "Video bitrate in kilobits per second."
iax, Inter Asterisk eXchange, packet_type, packet_typeQ_PROTO_IAX, bytes, "Packet type."
iax, Inter Asterisk eXchange, trunk_timestamp, trunk_timestampQ_PROTO_IAX, uint32, "Timestamp (in ms) after the start of this call, indicating the time at which this trunk packet was transmitted."
iax, Inter Asterisk eXchange, trunk_call_data_offset, trunk_call_data_offsetQ_PROTO_IAX, uint32, "Trunk call data offset in bytes in the UDP Stream."
iax, Inter Asterisk eXchange, message_name, message_nameQ_PROTO_IAX, bytes, "For full IAX2 frames, message_name is the name of a frame."
iax, Inter Asterisk eXchange, subclass_name, subclass_nameQ_PROTO_IAX, bytes, "The command string for a message_name"
iax, Inter Asterisk eXchange, element_name, element_nameQ_PROTO_IAX, bytes, "Name of the information coming from a packet of type Full"
ica, Independant Computing Architecture (Citrix), application, applicationQ_PROTO_ICA, bytes, "Application name used by the client."
ica, Independant Computing Architecture (Citrix), login_info, login_infoQ_PROTO_ICA, bytes, "Login information for the given connection (host, username, network domain)."
ica, Independant Computing Architecture (Citrix), service, serviceQ_PROTO_ICA, bytes, "Current service identification string."
icap, Internet Content Adaptation Protocol, x_client_ip_respmod_req, x_client_ip_respmod_reqQ_PROTO_ICAP, bytes, "The IP source address of the encapsulated HTTP request, when using the X-Client-IP ICAP header extension (draft-stecher-icap-subid-00)."
icap, Internet Content Adaptation Protocol, referer_respmod_req, referer_respmod_reqQ_PROTO_ICAP, bytes, "The HTTP referer embedded in the ICAP RESPMOD request (see http)."
icap, Internet Content Adaptation Protocol, content_type_respmod_req, content_type_respmod_reqQ_PROTO_ICAP, bytes, "The HTTP content_type embedded in the http response part of the ICAP RESPMOD request (see http)."
icap, Internet Content Adaptation Protocol, user_agent_respmod_req, user_agent_respmod_reqQ_PROTO_ICAP, bytes, "The HTTP user_agent embedded in the ICAP RESPMOD request (see http)."
icap, Internet Content Adaptation Protocol, host_respmod_req, host_respmod_reqQ_PROTO_ICAP, bytes, "The HTTP host embedded in the ICAP RESPMOD request (see http)."
icap, Internet Content Adaptation Protocol, uri_respmod_req, uri_respmod_reqQ_PROTO_ICAP, bytes, "The HTTP uri embedded in the ICAP RESPMOD request (see http)."
icap, Internet Content Adaptation Protocol, method_respmod_req, method_respmod_reqQ_PROTO_ICAP, bytes, "The HTTP method embedded in the ICAP RESPMOD request (see http)."
icap, Internet Content Adaptation Protocol, code_respmod_req, code_respmod_reqQ_PROTO_ICAP, uint32, "The HTTP code embedded in the ICAP RESPMOD request (see http)."
icloud, iCloud (Apple), service, serviceQ_PROTO_ICLOUD, bytes, "Current service identification string."
icmp, Internet Control Message Protocol, rtt, rttQ_PROTO_ICMP, string, "Response time of a ping command."
icmp6, Internet Control Message Protocol for IP6, rtt, rttQ_PROTO_ICMP6, string, "Response time of a ping command."
icmp6, Internet Control Message Protocol for IP6, link_layer_addr_type, link_layer_addr_typeQ_PROTO_ICMP6, uint32, "Type of link-layer address (source or target)."
icmp6, Internet Control Message Protocol for IP6, link_layer_mac_addr, link_layer_mac_addrQ_PROTO_ICMP6, string, "Link-layer address in MAC format (if applicable)."
icmp6, Internet Control Message Protocol for IP6, link_layer_eui64_addr, link_layer_eui64_addrQ_PROTO_ICMP6, uint64, "Link-layer address in EUI64 format (if applicable)."
ident, Identification Protocol, server_port, server_portQ_PROTO_IDENT, uint32, "TCP server's port"
ident, Identification Protocol, client_port, client_portQ_PROTO_IDENT, uint32, "TCP client's port"
igmp, Internet Group Management Protocol, version, versionQ_PROTO_IGMP, uint32, "Protocol version."
igmp, Internet Group Management Protocol, address, addressQ_PROTO_IGMP, string, "Multicast address."
igmp, Internet Group Management Protocol, record_maddress, record_maddressQ_PROTO_IGMP, string, "The multicast address in this record"
imap, Internet Message Access Protocol version 4, end, endQ_PROTO_IMAP, Void, "Indicates the end of a top level event."
imap, Internet Message Access Protocol version 4, request, requestQ_PROTO_IMAP, bool, "Parent entry, empty, for client request and server response."
imap, Internet Message Access Protocol version 4, index, indexQ_PROTO_IMAP, bytes, "Identifier of the request and response in a flow."
imap, Internet Message Access Protocol version 4, method, methodQ_PROTO_IMAP, bytes, "Command sent by the client"
imap, Internet Message Access Protocol version 4, server_response, server_responseQ_PROTO_IMAP, bytes, "The return code of the server"
imap, Internet Message Access Protocol version 4, email, emailQ_PROTO_IMAP, bool, "Parent entry, for fields belonging to the same email."
imap, Internet Message Access Protocol version 4, email_index, email_indexQ_PROTO_IMAP, bytes, "Index of the request which the email is attached to."
imap, Internet Message Access Protocol version 4, msglist_entry, msglist_entryQ_PROTO_IMAP, bool, "Parent entry, for different elements belonging to the same message of a message list."
imap, Internet Message Access Protocol version 4, attach, attachQ_PROTO_IMAP, bool, "Parent entry, for attach fields in a message."
imap, Internet Message Access Protocol version 4, msglist_attach, msglist_attachQ_PROTO_IMAP, bool, "Parent entry for attached file in a list of emails."
imap, Internet Message Access Protocol version 4, login, loginQ_PROTO_IMAP, bytes, "User's login string."
imap, Internet Message Access Protocol version 4, password, passwordQ_PROTO_IMAP, bytes, "User's password string."
imap, Internet Message Access Protocol version 4, message_id, message_idQ_PROTO_IMAP, bytes, "A unique identifier of the message."
imap, Internet Message Access Protocol version 4, subject, subjectQ_PROTO_IMAP, bytes, "Message subject."
imap, Internet Message Access Protocol version 4, date, dateQ_PROTO_IMAP, bytes, "Message date."
imap, Internet Message Access Protocol version 4, sender_entry, sender_entryQ_PROTO_IMAP, bool, "Parent entry, for different elements belonging to the sender."
imap, Internet Message Access Protocol version 4, sender, senderQ_PROTO_IMAP, bytes, "Full address of email sender (alias followed by email address)."
imap, Internet Message Access Protocol version 4, sender_email, sender_emailQ_PROTO_IMAP, bytes, "Email address of the email sender."
imap, Internet Message Access Protocol version 4, sender_alias, sender_aliasQ_PROTO_IMAP, bytes, "Name of the email sender."
imap, Internet Message Access Protocol version 4, receiver_entry, receiver_entryQ_PROTO_IMAP, bool, "Parent entry, for different elements belonging to the email receiver."
imap, Internet Message Access Protocol version 4, receiver, receiverQ_PROTO_IMAP, bytes, "Full address of email receiver (including cc and bcc receivers)."
imap, Internet Message Access Protocol version 4, receiver_email, receiver_emailQ_PROTO_IMAP, bytes, "Email address of message receiver (included cc and bcc receivers)."
imap, Internet Message Access Protocol version 4, receiver_alias, receiver_aliasQ_PROTO_IMAP, bytes, "Name of email receiver (included cc and bcc receivers)."
imap, Internet Message Access Protocol version 4, receiver_type, receiver_typeQ_PROTO_IMAP, bytes, "Type of the email receiver."
imap, Internet Message Access Protocol version 4, msglist_subject, msglist_subjectQ_PROTO_IMAP, bytes, "Message subject in a message list."
imap, Internet Message Access Protocol version 4, msglist_date, msglist_dateQ_PROTO_IMAP, bytes, "Message date in a message list."
imap, Internet Message Access Protocol version 4, msglist_sender_entry, msglist_sender_entryQ_PROTO_IMAP, bool, "Parent entry for a sender in a message list."
imap, Internet Message Access Protocol version 4, msglist_sender, msglist_senderQ_PROTO_IMAP, bytes, "Full address of email sender (alias and email address)."
imap, Internet Message Access Protocol version 4, msglist_sender_alias, msglist_sender_aliasQ_PROTO_IMAP, bytes, "Name of email sender."
imap, Internet Message Access Protocol version 4, msglist_sender_email, msglist_sender_emailQ_PROTO_IMAP, bytes, "Address of email sender."
imap, Internet Message Access Protocol version 4, msglist_receiver_entry, msglist_receiver_entryQ_PROTO_IMAP, bool, "Parent entry for a receiver in a message list."
imap, Internet Message Access Protocol version 4, msglist_receiver, msglist_receiverQ_PROTO_IMAP, bytes, "Full address of email receiver in a message list."
imap, Internet Message Access Protocol version 4, msglist_receiver_alias, msglist_receiver_aliasQ_PROTO_IMAP, bytes, "Name of email receiver."
imap, Internet Message Access Protocol version 4, msglist_receiver_email, msglist_receiver_emailQ_PROTO_IMAP, bytes, "Email address of the email receiver."
imap, Internet Message Access Protocol version 4, msglist_mime_type, msglist_mime_typeQ_PROTO_IMAP, bytes, "Content type of the email."
imap, Internet Message Access Protocol version 4, msglist_attach_mime_type, msglist_attach_mime_typeQ_PROTO_IMAP, bytes, "Content type of the attachment (in a list)."
imap, Internet Message Access Protocol version 4, msglist_attach_filename, msglist_attach_filenameQ_PROTO_IMAP, bytes, "Name of file attached to message (in a list)."
imap, Internet Message Access Protocol version 4, mime_type, mime_typeQ_PROTO_IMAP, bytes, "Content type of attached file."
imap, Internet Message Access Protocol version 4, greeting_message, greeting_messageQ_PROTO_IMAP, bytes, "Contains the greeting message of the server when connection is established."
imap, Internet Message Access Protocol version 4, user_agent, user_agentQ_PROTO_IMAP, bytes, "Name of the software used."
imap, Internet Message Access Protocol version 4, attach_mime_type, attach_mime_typeQ_PROTO_IMAP, bytes, "Content type of the attachment."
imap, Internet Message Access Protocol version 4, attach_transfer_encoding, attach_transfer_encodingQ_PROTO_IMAP, bytes, "Contains the encoding of the attached content"
imap, Internet Message Access Protocol version 4, attach_filename, attach_filenameQ_PROTO_IMAP, bytes, "Attachment name."
imap, Internet Message Access Protocol version 4, attach_content_decoded, attach_content_decodedQ_PROTO_IMAP, buffer, "Decoded attached files content."
imap, Internet Message Access Protocol version 4, file_type, file_typeQ_PROTO_IMAP, bytes, "Received or sent file content type (prefix-based pattern recognition) exchanged using this protocol."
imap, Internet Message Access Protocol version 4, replyto, replytoQ_PROTO_IMAP, bytes, "Email address to use in a reply for this message."
imap, Internet Message Access Protocol version 4, login_server, login_serverQ_PROTO_IMAP, bytes, "Concatenated login and server: <login>@<server>."
imap, Internet Message Access Protocol version 4, header_raw, header_rawQ_PROTO_IMAP, bytes, "One IMAP header line (field and value)."
imap, Internet Message Access Protocol version 4, received, receivedQ_PROTO_IMAP, bool, "Parent entry, for fields added by each relay"
imap, Internet Message Access Protocol version 4, received_from_name, received_from_nameQ_PROTO_IMAP, bytes, "Contains the sending host name"
imap, Internet Message Access Protocol version 4, received_from_ip, received_from_ipQ_PROTO_IMAP, string, "Contains the IP address of the sending host name"
imap, Internet Message Access Protocol version 4, received_by_name, received_by_nameQ_PROTO_IMAP, bytes, "Contains the receiving host name"
imap, Internet Message Access Protocol version 4, received_by_ip, received_by_ipQ_PROTO_IMAP, string, "Contains the IP address of the receiving host name"
imap, Internet Message Access Protocol version 4, received_with, received_withQ_PROTO_IMAP, bytes, "Contains the software used to send the email"
imap, Internet Message Access Protocol version 4, received_date, received_dateQ_PROTO_IMAP, bytes, "Date when the transport service relayed the message"
imap, Internet Message Access Protocol version 4, received_server_agent, received_server_agentQ_PROTO_IMAP, bytes, "Contains the name of the sever agent"
imap, Internet Message Access Protocol version 4, xmailer, xmailerQ_PROTO_IMAP, bytes, "Contains the user_agent of the used mailer"
imp, Internet Messaging Program, attach_size, attach_sizeQ_PROTO_IMP, uint32, "Attached file MIME size."
imp, Internet Messaging Program, date, dateQ_PROTO_IMP, bytes, "Message date."
imp, Internet Messaging Program, attach_id, attach_idQ_PROTO_IMP, bytes, "Attachment identifier."
imp, Internet Messaging Program, action, actionQ_PROTO_IMP, bytes, "Indicates if the message is read (Read) or composed (Compose)."
imp, Internet Messaging Program, msglist_receiver_email, msglist_receiver_emailQ_PROTO_IMP, bytes, "Email address of the email receiver."
imp, Internet Messaging Program, msglist_sender_email, msglist_sender_emailQ_PROTO_IMP, bytes, "Address of email sender."
imp, Internet Messaging Program, sender_alias, sender_aliasQ_PROTO_IMP, bytes, "Name of the email sender."
imp, Internet Messaging Program, sender_email, sender_emailQ_PROTO_IMP, bytes, "Email address of the email sender."
imp, Internet Messaging Program, sender, senderQ_PROTO_IMP, bytes, "Full address of email sender (alias followed by email address)."
imp, Internet Messaging Program, msglist_subject, msglist_subjectQ_PROTO_IMP, bytes, "Message subject in a message list."
imp, Internet Messaging Program, msglist_sender_alias, msglist_sender_aliasQ_PROTO_IMP, bytes, "Name of email sender."
imp, Internet Messaging Program, msglist_receiver_alias, msglist_receiver_aliasQ_PROTO_IMP, bytes, "Name of email receiver."
imp, Internet Messaging Program, msglist_date, msglist_dateQ_PROTO_IMP, bytes, "Message date in a message list."
imp, Internet Messaging Program, msglist_msgid, msglist_msgidQ_PROTO_IMP, bytes, "Message identifier."
imp, Internet Messaging Program, msglist_folder, msglist_folderQ_PROTO_IMP, bytes, "Indicates the directory from a message list."
imp, Internet Messaging Program, contact, contactQ_PROTO_IMP, bytes, "Complete contact."
imp, Internet Messaging Program, contact_alias, contact_aliasQ_PROTO_IMP, bytes, "Alias of a contact."
imp, Internet Messaging Program, contact_email, contact_emailQ_PROTO_IMP, bytes, "Email address of a contact."
imp, Internet Messaging Program, attach_type, attach_typeQ_PROTO_IMP, bytes, "Content type of the sent attached file."
imp, Internet Messaging Program, subject, subjectQ_PROTO_IMP, bytes, "Message subject."
imp, Internet Messaging Program, receiver_type, receiver_typeQ_PROTO_IMP, bytes, "Type of the email receiver."
imp, Internet Messaging Program, receiver_alias, receiver_aliasQ_PROTO_IMP, bytes, "Name of email receiver (included cc and bcc receivers)."
imp, Internet Messaging Program, receiver_email, receiver_emailQ_PROTO_IMP, bytes, "Email address of message receiver (included cc and bcc receivers)."
imp, Internet Messaging Program, receiver, receiverQ_PROTO_IMP, bytes, "Full address of email receiver (including cc and bcc receivers)."
imp, Internet Messaging Program, attach_filename, attach_filenameQ_PROTO_IMP, bytes, "Attachment name."
imp, Internet Messaging Program, password, passwordQ_PROTO_IMP, bytes, "User's password string."
imp, Internet Messaging Program, login, loginQ_PROTO_IMP, bytes, "User's login string."
imp, Internet Messaging Program, session_id, session_idQ_PROTO_IMP, bytes, "Uniquely identifies the current user session."
imp, Internet Messaging Program, login_server, login_serverQ_PROTO_IMP, bytes, "Concatenated login and server: <login>@<server>."
imp, Internet Messaging Program, version, versionQ_PROTO_IMP, bytes, "IMP version deployed."
ip, Internet Protocol, fragment_buffered_count, fragment_buffered_countQ_PROTO_IP, uint32, "Number of segments that have been buffered for defragmentation"
ip, Internet Protocol, fragment_buffered_size, fragment_buffered_sizeQ_PROTO_IP, uint32, "Sizes sum of segments that have been buffered for defragmentation"
ipcp, Internet Protocol Control Protocol, ip_addr, ip_addrQ_PROTO_IPCP, string, "IP address attributed."
ipcp, Internet Protocol Control Protocol, mobile_ip_addr, mobile_ip_addrQ_PROTO_IPCP, string, "Mobile IP"
ipcp, Internet Protocol Control Protocol, dns_ip_addr, dns_ip_addrQ_PROTO_IPCP, string, "IP address of the primary DNS server."
ipcp, Internet Protocol Control Protocol, win_ip_addr, win_ip_addrQ_PROTO_IPCP, string, "IP address of the primary WINS server."
ipcp, Internet Protocol Control Protocol, second_dns_ip_addr, second_dns_ip_addrQ_PROTO_IPCP, string, "IP Address of the secondary DNS server."
ipcp, Internet Protocol Control Protocol, second_win_ip_addr, second_win_ip_addrQ_PROTO_IPCP, string, "IP address of the secondary WINS server."
ipp, Internet Printing Protocol, version, versionQ_PROTO_IPP, bytes, "Protocol version."
ipx, Internet Protocol eXchange, dst_net, dst_netQ_PROTO_IPX, uint32, "Destination network address."
ipx, Internet Protocol eXchange, src_net, src_netQ_PROTO_IPX, uint32, "Source network address."
irc, Internet Relay Chat, login, loginQ_PROTO_IRC, bytes, "User's login string."
irc, Internet Relay Chat, login_server, login_serverQ_PROTO_IRC, bytes, "Concatenated login and server: <login>@<server>."
irc, Internet Relay Chat, nickname, nicknameQ_PROTO_IRC, bytes, "User's alias."
irc, Internet Relay Chat, server, serverQ_PROTO_IRC, bytes, "Server name to which the user is connected."
irc, Internet Relay Chat, message, messageQ_PROTO_IRC, bytes, "Contains the chat message."
irc, Internet Relay Chat, sender, senderQ_PROTO_IRC, bytes, "Contains the identity of the sender of a chat session or a file transfer."
irc, Internet Relay Chat, receiver, receiverQ_PROTO_IRC, bytes, "Contains the identity of the receiver for a chat message or a file transfer."
irc, Internet Relay Chat, channel, channelQ_PROTO_IRC, bytes, "Chat room name."
irc, Internet Relay Chat, mode_channel, mode_channelQ_PROTO_IRC, bytes, "Name of the irc channel."
irc, Internet Relay Chat, mode_status, mode_statusQ_PROTO_IRC, bytes, "Status of the irc channel."
irc, Internet Relay Chat, filename, filenameQ_PROTO_IRC, bytes, "Name of the transferred file."
irc, Internet Relay Chat, filesize, filesizeQ_PROTO_IRC, uint32, "Size (byte) of the transferred file."
irc, Internet Relay Chat, file_identifier, file_identifierQ_PROTO_IRC, bytes, "File correlation key."
isakmp, Internet Security Association and Key Management Protocol, version, versionQ_PROTO_ISAKMP, bytes, "Protocol version."
isakmp, Internet Security Association and Key Management Protocol, life_duration, life_durationQ_PROTO_ISAKMP, uint32, "Life time of connection parameters."
isl, InterSwitch Link, dst_addr, dst_addrQ_PROTO_ISL, string, "Destination MAC Address."
isl, InterSwitch Link, src_addr, src_addrQ_PROTO_ISL, string, "Source MAC Address."
isl, InterSwitch Link, type, typeQ_PROTO_ISL, bytes, "Type of the encapsulated frame."
isup, ISDN User Part, message_ts, message_tsQ_PROTO_ISUP, string, "Timestamp of ISUP message"
isup, ISDN User Part, message_name, message_nameQ_PROTO_ISUP, bytes, "Abbreviated name of ISUP message. This attribute is deprecated."
isup, ISDN User Part, message_way, message_wayQ_PROTO_ISUP, bytes, "Way of message"
isup, ISDN User Part, caller, callerQ_PROTO_ISUP, bytes, "Calling party number"
isup, ISDN User Part, callee, calleeQ_PROTO_ISUP, bytes, "Called party number"
isup, ISDN User Part, orig_point_code, orig_point_codeQ_PROTO_ISUP, uint32, "Originating Point Code"
isup, ISDN User Part, dest_point_code, dest_point_codeQ_PROTO_ISUP, uint32, "Destination Point Code"
isup, ISDN User Part, start_time, start_timeQ_PROTO_ISUP, string, "Start date of the call"
isup, ISDN User Part, session_duration, session_durationQ_PROTO_ISUP, string, "Call session duration (elapsed time between the sending of SETUP command and the end of the communication)"
isup, ISDN User Part, time_before_spk, time_before_spkQ_PROTO_ISUP, string, "Waiting delay before speak"
isup, ISDN User Part, call_setup, call_setupQ_PROTO_ISUP, string, "Call setup delay."
isup, ISDN User Part, call_duration, call_durationQ_PROTO_ISUP, string, "Call duration"
isup, ISDN User Part, call_id, call_idQ_PROTO_ISUP, uint64, "Internal unique call identifier"
jabber, XMPP Protocol (Jabber), login, loginQ_PROTO_JABBER, bytes, "User's login string."
jabber, XMPP Protocol (Jabber), nickname, nicknameQ_PROTO_JABBER, bytes, "contains the used username."
jabber, XMPP Protocol (Jabber), version, versionQ_PROTO_JABBER, bytes, "JABBER software version."
jabber, XMPP Protocol (Jabber), user_agent, user_agentQ_PROTO_JABBER, bytes, "Name of the software used."
jabber, XMPP Protocol (Jabber), os, osQ_PROTO_JABBER, bytes, "Client operating system."
jabber, XMPP Protocol (Jabber), message, messageQ_PROTO_JABBER, bytes, "Contains the chat message."
jabber, XMPP Protocol (Jabber), encoding, encodingQ_PROTO_JABBER, bytes, "Message encoding."
jabber, XMPP Protocol (Jabber), sender, senderQ_PROTO_JABBER, bytes, "Contains the identity of the sender of a chat session or a file transfer."
jabber, XMPP Protocol (Jabber), receiver, receiverQ_PROTO_JABBER, bytes, "Contains the identity of the receiver for a chat message or a file transfer."
jabber, XMPP Protocol (Jabber), file_sender, file_senderQ_PROTO_JABBER, bytes, "Contains the identity of the sender of a file transfer."
jabber, XMPP Protocol (Jabber), file_receiver, file_receiverQ_PROTO_JABBER, bytes, "Contains the identity of the receiver for a file transfer."
jabber, XMPP Protocol (Jabber), filename, filenameQ_PROTO_JABBER, bytes, "Name of the transferred file."
jabber, XMPP Protocol (Jabber), filesize, filesizeQ_PROTO_JABBER, uint32, "Size (byte) of the transferred file."
jabber, XMPP Protocol (Jabber), file_sid, file_sidQ_PROTO_JABBER, bytes, "Transferred file identifier."
jabber, XMPP Protocol (Jabber), contact_login, contact_loginQ_PROTO_JABBER, bytes, "Contact login."
jabber, XMPP Protocol (Jabber), contact_name, contact_nameQ_PROTO_JABBER, bytes, "Contact name."
jabber, XMPP Protocol (Jabber), contact_status, contact_statusQ_PROTO_JABBER, bytes, "Contact status."
jabber, XMPP Protocol (Jabber), call_id, call_idQ_PROTO_JABBER, bytes, "Call id, extracted for each call."
jabber, XMPP Protocol (Jabber), start_time, start_timeQ_PROTO_JABBER, string, "Start date of the call."
jabber, XMPP Protocol (Jabber), caller, callerQ_PROTO_JABBER, bytes, "Contains the identity (or the phone number) of the initiator of the call."
jabber, XMPP Protocol (Jabber), callee, calleeQ_PROTO_JABBER, bytes, "Contains the identity (or the phone number) of the called party for a call."
jabber, XMPP Protocol (Jabber), call_duration, call_durationQ_PROTO_JABBER, string, "Call duration."
jabber, XMPP Protocol (Jabber), end_status, end_statusQ_PROTO_JABBER, bytes, "Session end reason."
jabber, XMPP Protocol (Jabber), caller_addr, caller_addrQ_PROTO_JABBER, string, "Address which could be used by the initiator of the call."
jabber, XMPP Protocol (Jabber), callee_addr, callee_addrQ_PROTO_JABBER, string, "Address which could be used by the called party."
jabber, XMPP Protocol (Jabber), file_chunk_len, file_chunk_lenQ_PROTO_JABBER, uint32, "Size of the transferred piece."
jabber, XMPP Protocol (Jabber), file_chunk_number, file_chunk_numberQ_PROTO_JABBER, uint32, "Number of the transferred piece."
jabber, XMPP Protocol (Jabber), file_chunk_sid, file_chunk_sidQ_PROTO_JABBER, bytes, "Transferred file identifier."
java_update, Java Update, type, typeQ_PROTO_JAVA_UPDATE, bytes, "Version type of updated Java."
java_update, Java Update, new_version, new_versionQ_PROTO_JAVA_UPDATE, bytes, "New version number returned by the server."
kakaotalk, KakaoTalk, mime_type, mime_typeQ_PROTO_KAKAOTALK, bytes, "Mime type of the file beeing transferred."
kakaotalk, KakaoTalk, filename, filenameQ_PROTO_KAKAOTALK, bytes, "Name of the transferred file."
kakaotalk, KakaoTalk, login, loginQ_PROTO_KAKAOTALK, uint64, "User's login string."
kaskus, Kaskus.co.id, query_text, query_textQ_PROTO_KASKUS, bytes, "Query sent to the search engine."
kaskus, Kaskus.co.id, query_raw, query_rawQ_PROTO_KASKUS, bytes, "Contains the query sent to the search engine as indicated in the URL."
kaskus, Kaskus.co.id, title, titleQ_PROTO_KASKUS, bytes, "Title of the current page."
kazaa, Kazaa (FastTrack protocol), mime_type, mime_typeQ_PROTO_KAZAA, bytes, "Type of the downloaded file."
kazaa, Kazaa (FastTrack protocol), filename, filenameQ_PROTO_KAZAA, bytes, "Name of the transferred file."
kazaa, Kazaa (FastTrack protocol), login, loginQ_PROTO_KAZAA, bytes, "User's login string."
krb5, Kerberos, login, loginQ_PROTO_KRB5, bytes, "User's login string."
krb5, Kerberos, service, serviceQ_PROTO_KRB5, bytes, "Current service identification string."
krb5, Kerberos, server, serverQ_PROTO_KRB5, bytes, "Name of the server requiring Kerberos authentication."
krb5, Kerberos, enc_data_type, enc_data_typeQ_PROTO_KRB5, uint32, "Indicate type of Encrypted data (hash) sent in the AS-RQ message."
krb5, Kerberos, pa_data_type, pa_data_typeQ_PROTO_KRB5, uint32, "PA-DATA type."
krb5, Kerberos, ticket_name_type, ticket_name_typeQ_PROTO_KRB5, uint32, "Ticket name-type."
krb5, Kerberos, ticket_name, ticket_nameQ_PROTO_KRB5, bytes, "Ticket name component."
krb5, Kerberos, realm, realmQ_PROTO_KRB5, bytes, "Realm in KRB-ERROR message."
krb5, Kerberos, err_crealm, err_crealmQ_PROTO_KRB5, bytes, "Realm in KRB-ERROR message."
krb5, Kerberos, err_realm, err_realmQ_PROTO_KRB5, bytes, "Correct realm in KRB-ERROR message."
krb5, Kerberos, err_cname_type, err_cname_typeQ_PROTO_KRB5, uint32, "KRB-ERROR cname type."
krb5, Kerberos, err_cname_name, err_cname_nameQ_PROTO_KRB5, bytes, "KRB-ERROR message cname component."
krb5, Kerberos, err_sname_type, err_sname_typeQ_PROTO_KRB5, uint32, "KRB-ERROR message server sname type."
krb5, Kerberos, err_sname_name, err_sname_nameQ_PROTO_KRB5, bytes, "KRB-ERROR message server sname component."
krb5, Kerberos, err_text, err_textQ_PROTO_KRB5, bytes, "KRB-ERROR message error description."
l2tp, Layer 2 Tunneling Protocol, hostname, hostnameQ_PROTO_L2TP, bytes, "Name of the issuing LAC or LNS."
l2tp, Layer 2 Tunneling Protocol, vendor_name, vendor_nameQ_PROTO_L2TP, bytes, "Vendor specific string describing the type of LAC or LNS being used."
laposte_webmail, La Poste Webmail, login, loginQ_PROTO_LAPOSTE_WEBMAIL, bytes, "User's login string."
laposte_webmail, La Poste Webmail, session_id, session_idQ_PROTO_LAPOSTE_WEBMAIL, bytes, "Uniquely identifies the current user session."
ldap, Lighweight Directory Access Protocol, message_type, message_typeQ_PROTO_LDAP, bytes, "Message type."
ldap, Lighweight Directory Access Protocol, message_id, message_idQ_PROTO_LDAP, uint32, "Message identification."
ldap, Lighweight Directory Access Protocol, payload_is_crypted, payload_is_cryptedQ_PROTO_LDAP, uint32, "Indicates whether the LDAP payload is encrypted."
ldap, Lighweight Directory Access Protocol, seal_algo, seal_algoQ_PROTO_LDAP, bytes, "Algorithm used to encrypt the Kerberos content."
ldap, Lighweight Directory Access Protocol, contains_sasl, contains_saslQ_PROTO_LDAP, uint32, "Indicates whether the authentication is done using SASL mechanism."
ldap, Lighweight Directory Access Protocol, value_string, value_stringQ_PROTO_LDAP, bytes, "String value of the LDAP element."
ldap, Lighweight Directory Access Protocol, type, typeQ_PROTO_LDAP, bytes, "Type of the LDAP element, in the LDAP tree."
ldap, Lighweight Directory Access Protocol, name, nameQ_PROTO_LDAP, bytes, "Name of the LDAP element, in the LDAP tree (RFC2251)."
ldap, Lighweight Directory Access Protocol, number, numberQ_PROTO_LDAP, uint32, "Item number of the LDAP element."
ldap, Lighweight Directory Access Protocol, level, levelQ_PROTO_LDAP, uint32, "Depth level in ldap tree."
ldap, Lighweight Directory Access Protocol, hostname, hostnameQ_PROTO_LDAP, bytes, "Hostname extracted from a logon response to a CLDAP searchRequest."
ldap, Lighweight Directory Access Protocol, attribute_desc, attribute_descQ_PROTO_LDAP, bytes, "Filter expression first operand, which is an attribute description."
ldap, Lighweight Directory Access Protocol, assertion_value, assertion_valueQ_PROTO_LDAP, bytes, "Filter expression second operand, which is an assertion value."
line, Line, proto_version, proto_versionQ_PROTO_LINE, bytes, "Protocol version currently used by the client."
line, Line, service_stats, service_statsQ_PROTO_LINE, bytes, "Composite attribute containing the packet metrics used for each new service type detection, extracting when performing STATISCAL detection method only. Note: this attribute won't be extracted in case of session expiration (eg. when the current service is not ended properly by the user)."
line, Line, service, serviceQ_PROTO_LINE, bytes, "Current service identification string."
line, Line, service_id, service_idQ_PROTO_LINE, uint32, "Composite 32-bit integer value defining the service currently used. The first byte (LSB) gives the generic service definition, the second byte gives an advanced service definition for specific cases (example: File Transfer)."
line, Line, service_duration, service_durationQ_PROTO_LINE, uint32, "4 bytes integer value indicating, when the service is ended, the length of it in seconds."
line, Line, service_duration_tv, service_duration_tvQ_PROTO_LINE, string, "timeval structure indicating, when the service is ended, the length of it in seconds and microseconds."
line, Line, call_id, call_idQ_PROTO_LINE, bytes, "Call id, extracted for each call."
line, Line, user_agent, user_agentQ_PROTO_LINE, bytes, "Name of the software used."
line, Line, caller_addr, caller_addrQ_PROTO_LINE, string, "Address which could be used by the initiator of the call."
line, Line, caller, callerQ_PROTO_LINE, bytes, "Contains the identity (or the phone number) of the initiator of the call."
line, Line, callee, calleeQ_PROTO_LINE, bytes, "Contains the identity (or the phone number) of the called party for a call."
line, Line, call_byte_count, call_byte_countQ_PROTO_LINE, uint32, "(Deprecated) The count of bytes that were exchanged during the call."
line, Line, call_pkt_count, call_pkt_countQ_PROTO_LINE, uint32, "(Deprecated) The count of data packets that were exchanged during the call."
line, Line, start_time, start_timeQ_PROTO_LINE, bytes, "Start date of the call."
line, Line, call_duration, call_durationQ_PROTO_LINE, uint32, "Call duration."
linkedin, LinkedIn.com, receiver_email, receiver_emailQ_PROTO_LINKEDIN, bytes, "Email address of message receiver (included cc and bcc receivers)."
linkedin, LinkedIn.com, contact_firstname, contact_firstnameQ_PROTO_LINKEDIN, bytes, "Contact first name."
linkedin, LinkedIn.com, contact_lastname, contact_lastnameQ_PROTO_LINKEDIN, bytes, "Contact last name."
linkedin, LinkedIn.com, contact_alias, contact_aliasQ_PROTO_LINKEDIN, bytes, "Alias of a contact."
linkedin, LinkedIn.com, sender_email, sender_emailQ_PROTO_LINKEDIN, bytes, "Email address of the email sender."
linkedin, LinkedIn.com, action, actionQ_PROTO_LINKEDIN, bytes, "Indicates if the message is read (Read) or composed (Compose)."
linkedin, LinkedIn.com, query_text, query_textQ_PROTO_LINKEDIN, bytes, "Query sent to the search engine."
linkedin, LinkedIn.com, query_type, query_typeQ_PROTO_LINKEDIN, bytes, "Query domain."
linkedin, LinkedIn.com, folder, folderQ_PROTO_LINKEDIN, bytes, "Indicates the directory from where messages are read."
linkedin, LinkedIn.com, sender_alias, sender_aliasQ_PROTO_LINKEDIN, bytes, "Name of the email sender."
linkedin, LinkedIn.com, sender, senderQ_PROTO_LINKEDIN, bytes, "Full address of email sender (alias followed by email address)."
linkedin, LinkedIn.com, receiver_type, receiver_typeQ_PROTO_LINKEDIN, bytes, "Type of the email receiver."
linkedin, LinkedIn.com, receiver_alias, receiver_aliasQ_PROTO_LINKEDIN, bytes, "Name of email receiver (included cc and bcc receivers)."
linkedin, LinkedIn.com, receiver, receiverQ_PROTO_LINKEDIN, bytes, "Full address of email receiver (including cc and bcc receivers)."
linkedin, LinkedIn.com, date, dateQ_PROTO_LINKEDIN, bytes, "Message date."
linkedin, LinkedIn.com, subject, subjectQ_PROTO_LINKEDIN, bytes, "Message subject."
linkedin, LinkedIn.com, msg_id, msg_idQ_PROTO_LINKEDIN, bytes, "Identifier of the message."
linkedin, LinkedIn.com, contact_email, contact_emailQ_PROTO_LINKEDIN, bytes, "Email address of a contact."
linkedin, LinkedIn.com, msglist_date, msglist_dateQ_PROTO_LINKEDIN, bytes, "Message date in a message list."
linkedin, LinkedIn.com, msglist_subject, msglist_subjectQ_PROTO_LINKEDIN, bytes, "Message subject in a message list."
linkedin, LinkedIn.com, msglist_receiver_alias, msglist_receiver_aliasQ_PROTO_LINKEDIN, bytes, "Name of email receiver."
linkedin, LinkedIn.com, msglist_receiver, msglist_receiverQ_PROTO_LINKEDIN, bytes, "Full address of email receiver in a message list."
linkedin, LinkedIn.com, msglist_sender_alias, msglist_sender_aliasQ_PROTO_LINKEDIN, bytes, "Name of email sender."
linkedin, LinkedIn.com, msglist_sender, msglist_senderQ_PROTO_LINKEDIN, bytes, "Full address of email sender (alias and email address)."
linkedin, LinkedIn.com, msglist_folder, msglist_folderQ_PROTO_LINKEDIN, bytes, "Indicates the directory from a message list."
linkedin, LinkedIn.com, msglist_msgid, msglist_msgidQ_PROTO_LINKEDIN, bytes, "Message identifier."
linkedin, LinkedIn.com, login, loginQ_PROTO_LINKEDIN, bytes, "User's login string."
live_groups, Windows Live Groups, login, loginQ_PROTO_LIVE_GROUPS, bytes, "User's login string."
live_groups, Windows Live Groups, group_name, group_nameQ_PROTO_LIVE_GROUPS, bytes, "Name of the group the user has subscribed to."
live_groups, Windows Live Groups, group_id, group_idQ_PROTO_LIVE_GROUPS, bytes, "Unique identifier of the group."
live_groups, Windows Live Groups, name, nameQ_PROTO_LIVE_GROUPS, bytes, "User's full name."
live_groups, Windows Live Groups, sender, senderQ_PROTO_LIVE_GROUPS, bytes, "Full address of email sender (alias followed by email address)."
live_groups, Windows Live Groups, sender_email, sender_emailQ_PROTO_LIVE_GROUPS, bytes, "Email address of the email sender."
live_groups, Windows Live Groups, sender_alias, sender_aliasQ_PROTO_LIVE_GROUPS, bytes, "Name of the email sender."
live_groups, Windows Live Groups, date, dateQ_PROTO_LIVE_GROUPS, bytes, "Message date."
live_groups, Windows Live Groups, subject, subjectQ_PROTO_LIVE_GROUPS, bytes, "Message subject."
live_groups, Windows Live Groups, action, actionQ_PROTO_LIVE_GROUPS, bytes, "Indicates if the message is read (Read) or composed (Compose)."
live_groups, Windows Live Groups, member_alias, member_aliasQ_PROTO_LIVE_GROUPS, bytes, "Member name."
live_groups, Windows Live Groups, member_email, member_emailQ_PROTO_LIVE_GROUPS, bytes, "Email address of the member."
live_groups, Windows Live Groups, msglist_sender_alias, msglist_sender_aliasQ_PROTO_LIVE_GROUPS, bytes, "Name of email sender."
live_groups, Windows Live Groups, msglist_sender, msglist_senderQ_PROTO_LIVE_GROUPS, bytes, "Full address of email sender (alias and email address)."
live_groups, Windows Live Groups, msglist_subject, msglist_subjectQ_PROTO_LIVE_GROUPS, bytes, "Message subject in a message list."
live_groups, Windows Live Groups, session_id, session_idQ_PROTO_LIVE_GROUPS, bytes, "Uniquely identifies the current user session."
live_hotmail, Windows Live Hotmail, login, loginQ_PROTO_LIVE_HOTMAIL, bytes, "User's login string."
live_hotmail, Windows Live Hotmail, session_id, session_idQ_PROTO_LIVE_HOTMAIL, bytes, "Uniquely identifies the current user session."
live_hotmail, Windows Live Hotmail, name, nameQ_PROTO_LIVE_HOTMAIL, bytes, "User's full name."
live_hotmail, Windows Live Hotmail, msglist_sender_email, msglist_sender_emailQ_PROTO_LIVE_HOTMAIL, bytes, "Address of email sender."
live_hotmail, Windows Live Hotmail, msglist_sender, msglist_senderQ_PROTO_LIVE_HOTMAIL, bytes, "Full address of email sender (alias and email address)."
live_hotmail, Windows Live Hotmail, msglist_sender_alias, msglist_sender_aliasQ_PROTO_LIVE_HOTMAIL, bytes, "Name of email sender."
live_hotmail, Windows Live Hotmail, msglist_receiver, msglist_receiverQ_PROTO_LIVE_HOTMAIL, bytes, "Full address of email receiver in a message list."
live_hotmail, Windows Live Hotmail, msglist_receiver_alias, msglist_receiver_aliasQ_PROTO_LIVE_HOTMAIL, bytes, "Name of email receiver."
live_hotmail, Windows Live Hotmail, msglist_receiver_email, msglist_receiver_emailQ_PROTO_LIVE_HOTMAIL, bytes, "Email address of the email receiver."
live_hotmail, Windows Live Hotmail, msglist_subject, msglist_subjectQ_PROTO_LIVE_HOTMAIL, bytes, "Message subject in a message list."
live_hotmail, Windows Live Hotmail, msglist_date, msglist_dateQ_PROTO_LIVE_HOTMAIL, bytes, "Message date in a message list."
live_hotmail, Windows Live Hotmail, msglist_folder, msglist_folderQ_PROTO_LIVE_HOTMAIL, bytes, "Indicates the directory from a message list."
live_hotmail, Windows Live Hotmail, msglist_msgid, msglist_msgidQ_PROTO_LIVE_HOTMAIL, bytes, "Message identifier."
live_hotmail, Windows Live Hotmail, sender, senderQ_PROTO_LIVE_HOTMAIL, bytes, "Full address of email sender (alias followed by email address)."
live_hotmail, Windows Live Hotmail, sender_email, sender_emailQ_PROTO_LIVE_HOTMAIL, bytes, "Email address of the email sender."
live_hotmail, Windows Live Hotmail, sender_alias, sender_aliasQ_PROTO_LIVE_HOTMAIL, bytes, "Name of the email sender."
live_hotmail, Windows Live Hotmail, receiver, receiverQ_PROTO_LIVE_HOTMAIL, bytes, "Full address of email receiver (including cc and bcc receivers)."
live_hotmail, Windows Live Hotmail, receiver_alias, receiver_aliasQ_PROTO_LIVE_HOTMAIL, bytes, "Name of email receiver (included cc and bcc receivers)."
live_hotmail, Windows Live Hotmail, receiver_email, receiver_emailQ_PROTO_LIVE_HOTMAIL, bytes, "Email address of message receiver (included cc and bcc receivers)."
live_hotmail, Windows Live Hotmail, receiver_type, receiver_typeQ_PROTO_LIVE_HOTMAIL, bytes, "Type of the email receiver."
live_hotmail, Windows Live Hotmail, replyto, replytoQ_PROTO_LIVE_HOTMAIL, bytes, "Email address to use in a reply for this message."
live_hotmail, Windows Live Hotmail, date, dateQ_PROTO_LIVE_HOTMAIL, bytes, "Message date."
live_hotmail, Windows Live Hotmail, subject, subjectQ_PROTO_LIVE_HOTMAIL, bytes, "Message subject."
live_hotmail, Windows Live Hotmail, msg_id, msg_idQ_PROTO_LIVE_HOTMAIL, bytes, "Identifier of the message."
live_hotmail, Windows Live Hotmail, attach_id, attach_idQ_PROTO_LIVE_HOTMAIL, bytes, "Attachment identifier."
live_hotmail, Windows Live Hotmail, attach_filename, attach_filenameQ_PROTO_LIVE_HOTMAIL, bytes, "Attachment name."
live_hotmail, Windows Live Hotmail, attach_type, attach_typeQ_PROTO_LIVE_HOTMAIL, bytes, "Content type of the sent attached file."
live_hotmail, Windows Live Hotmail, attach_size, attach_sizeQ_PROTO_LIVE_HOTMAIL, uint32, "Attached file MIME size."
live_hotmail, Windows Live Hotmail, action, actionQ_PROTO_LIVE_HOTMAIL, bytes, "Indicates if the message is read (Read) or composed (Compose)."
live_hotmail, Windows Live Hotmail, draft, draftQ_PROTO_LIVE_HOTMAIL, uint32, "Indicates if the email is a draft or has really been posted"
live_hotmail, Windows Live Hotmail, contact, contactQ_PROTO_LIVE_HOTMAIL, bytes, "Complete contact."
live_hotmail, Windows Live Hotmail, contact_email, contact_emailQ_PROTO_LIVE_HOTMAIL, bytes, "Email address of a contact."
live_hotmail, Windows Live Hotmail, contact_alias, contact_aliasQ_PROTO_LIVE_HOTMAIL, bytes, "Alias of a contact."
live_hotmail, Windows Live Hotmail, folder, folderQ_PROTO_LIVE_HOTMAIL, bytes, "Indicates the directory from where messages are read."
live_hotmail, Windows Live Hotmail, attach_fileid, attach_fileidQ_PROTO_LIVE_HOTMAIL, bytes, "File identifier used for attachments correlation."
livemail_mobile, Live hotmail for mobile, receiver_type, receiver_typeQ_PROTO_LIVEMAIL_MOBILE, bytes, "Type of the email receiver."
livemail_mobile, Live hotmail for mobile, receiver_alias, receiver_aliasQ_PROTO_LIVEMAIL_MOBILE, bytes, "Name of email receiver (included cc and bcc receivers)."
livemail_mobile, Live hotmail for mobile, receiver_email, receiver_emailQ_PROTO_LIVEMAIL_MOBILE, bytes, "Email address of message receiver (included cc and bcc receivers)."
livemail_mobile, Live hotmail for mobile, receiver, receiverQ_PROTO_LIVEMAIL_MOBILE, bytes, "Full address of email receiver (including cc and bcc receivers)."
livemail_mobile, Live hotmail for mobile, sender_alias, sender_aliasQ_PROTO_LIVEMAIL_MOBILE, bytes, "Name of the email sender."
livemail_mobile, Live hotmail for mobile, sender_email, sender_emailQ_PROTO_LIVEMAIL_MOBILE, bytes, "Email address of the email sender."
livemail_mobile, Live hotmail for mobile, sender, senderQ_PROTO_LIVEMAIL_MOBILE, bytes, "Full address of email sender (alias followed by email address)."
livemail_mobile, Live hotmail for mobile, session_id, session_idQ_PROTO_LIVEMAIL_MOBILE, bytes, "Uniquely identifies the current user session."
livemail_mobile, Live hotmail for mobile, login, loginQ_PROTO_LIVEMAIL_MOBILE, bytes, "User's login string."
livemail_mobile, Live hotmail for mobile, contact_email, contact_emailQ_PROTO_LIVEMAIL_MOBILE, bytes, "Email address of a contact."
livemail_mobile, Live hotmail for mobile, contact_alias, contact_aliasQ_PROTO_LIVEMAIL_MOBILE, bytes, "Alias of a contact."
livemail_mobile, Live hotmail for mobile, msglist_sender_email, msglist_sender_emailQ_PROTO_LIVEMAIL_MOBILE, bytes, "Address of email sender."
livemail_mobile, Live hotmail for mobile, msglist_sender_alias, msglist_sender_aliasQ_PROTO_LIVEMAIL_MOBILE, bytes, "Name of email sender."
livemail_mobile, Live hotmail for mobile, msglist_subject, msglist_subjectQ_PROTO_LIVEMAIL_MOBILE, bytes, "Message subject in a message list."
livemail_mobile, Live hotmail for mobile, msglist_msgid, msglist_msgidQ_PROTO_LIVEMAIL_MOBILE, bytes, "Message identifier."
livemail_mobile, Live hotmail for mobile, attach_fileid, attach_fileidQ_PROTO_LIVEMAIL_MOBILE, bytes, "Automatically generated filename for file attachment."
livemail_mobile, Live hotmail for mobile, attach_filename, attach_filenameQ_PROTO_LIVEMAIL_MOBILE, bytes, "Attachment name."
livemail_mobile, Live hotmail for mobile, attach_id, attach_idQ_PROTO_LIVEMAIL_MOBILE, bytes, "Attachment identifier."
livemail_mobile, Live hotmail for mobile, msg_id, msg_idQ_PROTO_LIVEMAIL_MOBILE, bytes, "Identifier of the message."
livemail_mobile, Live hotmail for mobile, date, dateQ_PROTO_LIVEMAIL_MOBILE, bytes, "Message date."
livemail_mobile, Live hotmail for mobile, subject, subjectQ_PROTO_LIVEMAIL_MOBILE, bytes, "Message subject."
livemail_mobile, Live hotmail for mobile, action, actionQ_PROTO_LIVEMAIL_MOBILE, bytes, "Indicates if the message is read (Read) or composed (Compose)."
lotusnotes, Lotus Notes, login, loginQ_PROTO_LOTUSNOTES, bytes, "User's login string."
lotusnotes, Lotus Notes, organization, organizationQ_PROTO_LOTUSNOTES, bytes, "Organization."
lotusnotes, Lotus Notes, service, serviceQ_PROTO_LOTUSNOTES, bytes, "Current service identification string."
lotusnotes, Lotus Notes, version, versionQ_PROTO_LOTUSNOTES, bytes, "Client version."
lotusnotes, Lotus Notes, subject, subjectQ_PROTO_LOTUSNOTES, bytes, "Message subject."
lotusnotes, Lotus Notes, mime_version, mime_versionQ_PROTO_LOTUSNOTES, bytes, "MIME version."
lotusnotes, Lotus Notes, msg_id, msg_idQ_PROTO_LOTUSNOTES, bytes, "Identifier of the message."
lotusnotes, Lotus Notes, replyto, replytoQ_PROTO_LOTUSNOTES, bytes, "Email address to use in a reply for this message."
lotusnotes, Lotus Notes, header_name, header_nameQ_PROTO_LOTUSNOTES, bytes, "Lotusnotes header name (used for the Email service)."
lotusnotes, Lotus Notes, header_value, header_valueQ_PROTO_LOTUSNOTES, bytes, "Lotusnotes header value (used for the Email service)."
lotusnotes, Lotus Notes, sender, senderQ_PROTO_LOTUSNOTES, bytes, "Full address of email sender (alias followed by email address)."
lotusnotes, Lotus Notes, sender_alias, sender_aliasQ_PROTO_LOTUSNOTES, bytes, "Name of the email sender."
lotusnotes, Lotus Notes, sender_email, sender_emailQ_PROTO_LOTUSNOTES, bytes, "Email address of the email sender."
lotusnotes, Lotus Notes, receiver, receiverQ_PROTO_LOTUSNOTES, bytes, "Full address of email receiver (including cc and bcc receivers)."
lotusnotes, Lotus Notes, receiver_alias, receiver_aliasQ_PROTO_LOTUSNOTES, bytes, "Name of email receiver (included cc and bcc receivers)."
lotusnotes, Lotus Notes, receiver_email, receiver_emailQ_PROTO_LOTUSNOTES, bytes, "Email address of message receiver (included cc and bcc receivers)."
lotusnotes, Lotus Notes, receiver_type, receiver_typeQ_PROTO_LOTUSNOTES, bytes, "Type of the email receiver."
lotusnotes, Lotus Notes, attach_id, attach_idQ_PROTO_LOTUSNOTES, bytes, "Attachment identifier."
lotusnotes, Lotus Notes, attach_filename, attach_filenameQ_PROTO_LOTUSNOTES, bytes, "Attachment name."
lotusnotes, Lotus Notes, attach_size, attach_sizeQ_PROTO_LOTUSNOTES, uint32, "Attached file MIME size."
lotusnotes, Lotus Notes, attach_compress, attach_compressQ_PROTO_LOTUSNOTES, bytes, "The compression method used for the attached file download."
lotusnotes, Lotus Notes, attach_content_seq, attach_content_seqQ_PROTO_LOTUSNOTES, uint32, "Sequence number of a attach file part."
lotusnotes, Lotus Notes, attach_content_size, attach_content_sizeQ_PROTO_LOTUSNOTES, uint32, "Size of a attach file part."
lpr, Line Printer Remote, login, loginQ_PROTO_LPR, bytes, "User's login string."
lpr, Line Printer Remote, server, serverQ_PROTO_LPR, bytes, "Name of the machine that sent a file to print."
lpr, Line Printer Remote, job, jobQ_PROTO_LPR, bytes, "Name of the printed file."
lync, Microsoft Lync, service_id, service_idQ_PROTO_LYNC, uint32, "Composite 32-bit integer value defining the service currently used. The first byte (LSB) gives the generic service definition, the second byte gives an advanced service definition for specific cases (example: File Transfer)."
lync, Microsoft Lync, service, serviceQ_PROTO_LYNC, bytes, "Current service identification string."
mailru, Mail.ru Webmail, contact_email, contact_emailQ_PROTO_MAILRU, bytes, "Email address of a contact."
mailru, Mail.ru Webmail, contact_alias, contact_aliasQ_PROTO_MAILRU, bytes, "Alias of a contact."
mailru, Mail.ru Webmail, attach_size, attach_sizeQ_PROTO_MAILRU, uint32, "Attached file MIME size."
mailru, Mail.ru Webmail, folder, folderQ_PROTO_MAILRU, bytes, "Indicates the directory from where messages are read."
mailru, Mail.ru Webmail, sender_alias, sender_aliasQ_PROTO_MAILRU, bytes, "Name of the email sender."
mailru, Mail.ru Webmail, sender_email, sender_emailQ_PROTO_MAILRU, bytes, "Email address of the email sender."
mailru, Mail.ru Webmail, sender, senderQ_PROTO_MAILRU, bytes, "Full address of email sender (alias followed by email address)."
mailru, Mail.ru Webmail, subject, subjectQ_PROTO_MAILRU, bytes, "Message subject."
mailru, Mail.ru Webmail, date, dateQ_PROTO_MAILRU, bytes, "Message date."
mailru, Mail.ru Webmail, receiver_type, receiver_typeQ_PROTO_MAILRU, bytes, "Type of the email receiver."
mailru, Mail.ru Webmail, receiver_alias, receiver_aliasQ_PROTO_MAILRU, bytes, "Name of email receiver (included cc and bcc receivers)."
mailru, Mail.ru Webmail, receiver_email, receiver_emailQ_PROTO_MAILRU, bytes, "Email address of message receiver (included cc and bcc receivers)."
mailru, Mail.ru Webmail, receiver, receiverQ_PROTO_MAILRU, bytes, "Full address of email receiver (including cc and bcc receivers)."
mailru, Mail.ru Webmail, msglist_attach, msglist_attachQ_PROTO_MAILRU, uint32, "Indicates if the message contains an attachment."
mailru, Mail.ru Webmail, msglist_importance, msglist_importanceQ_PROTO_MAILRU, uint32, "Indicates if the message has been marked by the user."
mailru, Mail.ru Webmail, msglist_unread, msglist_unreadQ_PROTO_MAILRU, uint32, "Indicates if the message has been read."
mailru, Mail.ru Webmail, name, nameQ_PROTO_MAILRU, bytes, "User's full name."
mailru, Mail.ru Webmail, msglist_date, msglist_dateQ_PROTO_MAILRU, bytes, "Message date in a message list."
mailru, Mail.ru Webmail, msglist_subject, msglist_subjectQ_PROTO_MAILRU, bytes, "Message subject in a message list."
mailru, Mail.ru Webmail, msglist_msgid, msglist_msgidQ_PROTO_MAILRU, bytes, "Message identifier."
mailru, Mail.ru Webmail, msglist_receiver_email, msglist_receiver_emailQ_PROTO_MAILRU, bytes, "Email address of the email receiver."
mailru, Mail.ru Webmail, msglist_sender, msglist_senderQ_PROTO_MAILRU, bytes, "Full address of email sender (alias and email address)."
mailru, Mail.ru Webmail, msglist_sender_alias, msglist_sender_aliasQ_PROTO_MAILRU, bytes, "Name of email sender."
mailru, Mail.ru Webmail, msglist_sender_email, msglist_sender_emailQ_PROTO_MAILRU, bytes, "Address of email sender."
mailru, Mail.ru Webmail, login, loginQ_PROTO_MAILRU, bytes, "User's login string."
mailru, Mail.ru Webmail, draft, draftQ_PROTO_MAILRU, uint32, "Indicates if the email is a draft or has really been posted"
mailru, Mail.ru Webmail, msg_id, msg_idQ_PROTO_MAILRU, bytes, "Identifier of the message."
mailru, Mail.ru Webmail, attach_id, attach_idQ_PROTO_MAILRU, bytes, "Attachment identifier."
mailru, Mail.ru Webmail, attach_type, attach_typeQ_PROTO_MAILRU, bytes, "Content type of the sent attached file."
mailru, Mail.ru Webmail, attach_filename, attach_filenameQ_PROTO_MAILRU, bytes, "Attachment name."
mailru, Mail.ru Webmail, action, actionQ_PROTO_MAILRU, bytes, "Indicates if the message is read (Read) or composed (Compose)."
mailru, Mail.ru Webmail, folderlist_item_name, folderlist_item_nameQ_PROTO_MAILRU, bytes, "Message folder name."
mailru, Mail.ru Webmail, folderlist_item_id, folderlist_item_idQ_PROTO_MAILRU, bytes, "Message folder unique identifier."
mailru, Mail.ru Webmail, importance, importanceQ_PROTO_MAILRU, uint32, "Indicates if the email has been marked by the user."
mailru, Mail.ru Webmail, contact, contactQ_PROTO_MAILRU, bytes, "Complete contact."
mailru, Mail.ru Webmail, msglist_receiver, msglist_receiverQ_PROTO_MAILRU, bytes, "Full address of email receiver in a message list."
mailru, Mail.ru Webmail, msglist_receiver_alias, msglist_receiver_aliasQ_PROTO_MAILRU, bytes, "Name of email receiver."
mailru, Mail.ru Webmail, msglist_folder, msglist_folderQ_PROTO_MAILRU, bytes, "Indicates the directory from a message list."
mailru_agent, Mail.ru Agent, file_id, file_idQ_PROTO_MAILRU_AGENT, bytes, "Exchanged file identifier"
mailru_agent, Mail.ru Agent, msg_receiver, msg_receiverQ_PROTO_MAILRU_AGENT, bytes, "The person who chat or voice is done with"
mailru_agent, Mail.ru Agent, msg, msgQ_PROTO_MAILRU_AGENT, bytes, "Exchanged message during a chat"
mailru_agent, Mail.ru Agent, conference_id, conference_idQ_PROTO_MAILRU_AGENT, bytes, "Dialog session identifier, constant during a same session"
mailru_agent, Mail.ru Agent, im_action, im_actionQ_PROTO_MAILRU_AGENT, bytes, "Action of the user."
mailru_agent, Mail.ru Agent, user, userQ_PROTO_MAILRU_AGENT, bytes, "Application user name."
maktoob, Maktoob mail, login, loginQ_PROTO_MAKTOOB, bytes, "User's login string."
maktoob, Maktoob mail, name, nameQ_PROTO_MAKTOOB, bytes, "User's full name."
maktoob, Maktoob mail, msglist_sender, msglist_senderQ_PROTO_MAKTOOB, bytes, "Full address of email sender (alias and email address)."
maktoob, Maktoob mail, msglist_sender_alias, msglist_sender_aliasQ_PROTO_MAKTOOB, bytes, "Name of email sender."
maktoob, Maktoob mail, msglist_receiver, msglist_receiverQ_PROTO_MAKTOOB, bytes, "Full address of email receiver in a message list."
maktoob, Maktoob mail, msglist_receiver_alias, msglist_receiver_aliasQ_PROTO_MAKTOOB, bytes, "Name of email receiver."
maktoob, Maktoob mail, msglist_subject, msglist_subjectQ_PROTO_MAKTOOB, bytes, "Message subject in a message list."
maktoob, Maktoob mail, msglist_date, msglist_dateQ_PROTO_MAKTOOB, bytes, "Message date in a message list."
maktoob, Maktoob mail, msglist_size, msglist_sizeQ_PROTO_MAKTOOB, bytes, "Message size in a message list."
maktoob, Maktoob mail, msglist_folder, msglist_folderQ_PROTO_MAKTOOB, bytes, "Indicates the directory from a message list."
maktoob, Maktoob mail, sender, senderQ_PROTO_MAKTOOB, bytes, "Full address of email sender (alias followed by email address)."
maktoob, Maktoob mail, sender_email, sender_emailQ_PROTO_MAKTOOB, bytes, "Email address of the email sender."
maktoob, Maktoob mail, sender_alias, sender_aliasQ_PROTO_MAKTOOB, bytes, "Name of the email sender."
maktoob, Maktoob mail, receiver, receiverQ_PROTO_MAKTOOB, bytes, "Full address of email receiver (including cc and bcc receivers)."
maktoob, Maktoob mail, receiver_alias, receiver_aliasQ_PROTO_MAKTOOB, bytes, "Name of email receiver (included cc and bcc receivers)."
maktoob, Maktoob mail, receiver_email, receiver_emailQ_PROTO_MAKTOOB, bytes, "Email address of message receiver (included cc and bcc receivers)."
maktoob, Maktoob mail, receiver_type, receiver_typeQ_PROTO_MAKTOOB, bytes, "Type of the email receiver."
maktoob, Maktoob mail, replyto, replytoQ_PROTO_MAKTOOB, bytes, "Email address to use in a reply for this message."
maktoob, Maktoob mail, date, dateQ_PROTO_MAKTOOB, bytes, "Message date."
maktoob, Maktoob mail, subject, subjectQ_PROTO_MAKTOOB, bytes, "Message subject."
maktoob, Maktoob mail, attach_id, attach_idQ_PROTO_MAKTOOB, bytes, "Attachment identifier."
maktoob, Maktoob mail, attach_filename, attach_filenameQ_PROTO_MAKTOOB, bytes, "Attachment name."
maktoob, Maktoob mail, attach_type, attach_typeQ_PROTO_MAKTOOB, bytes, "Content type of the sent attached file."
maktoob, Maktoob mail, attach_size, attach_sizeQ_PROTO_MAKTOOB, uint32, "Attached file MIME size."
maktoob, Maktoob mail, msg_id, msg_idQ_PROTO_MAKTOOB, bytes, "Identifier of the message."
maktoob, Maktoob mail, draft, draftQ_PROTO_MAKTOOB, uint32, "Indicates if the email is a draft or has really been posted"
maktoob, Maktoob mail, encoding, encodingQ_PROTO_MAKTOOB, bytes, "Page encoding"
maktoob, Maktoob mail, folder, folderQ_PROTO_MAKTOOB, bytes, "Indicates the directory from where messages are read."
maktoob, Maktoob mail, action, actionQ_PROTO_MAKTOOB, bytes, "Indicates if the message is read (Read) or composed (Compose)."
maktoob, Maktoob mail, contact_email, contact_emailQ_PROTO_MAKTOOB, bytes, "Email address of a contact."
maktoob, Maktoob mail, contact_alias, contact_aliasQ_PROTO_MAKTOOB, bytes, "Alias of a contact."
maktoob, Maktoob mail, contact, contactQ_PROTO_MAKTOOB, bytes, "Complete contact."
maktoob, Maktoob mail, session_id, session_idQ_PROTO_MAKTOOB, bytes, "Uniquely identifies the current user session."
mandriva_update, Mandriva Update, package_name, package_nameQ_PROTO_MANDRIVA_UPDATE, bytes, "Name of the downloaded package."
mandriva_update, Mandriva Update, package_version, package_versionQ_PROTO_MANDRIVA_UPDATE, bytes, "Version number of the downloaded package."
mandriva_update, Mandriva Update, package_archi, package_archiQ_PROTO_MANDRIVA_UPDATE, bytes, "Archi of package."
mandriva_update, Mandriva Update, package_distrib, package_distribQ_PROTO_MANDRIVA_UPDATE, bytes, "Version of the currently upgraded-distribution"
mapi, MS Exchange Message API, login, loginQ_PROTO_MAPI, bytes, "User's login string."
mapi, MS Exchange Message API, login_server, login_serverQ_PROTO_MAPI, bytes, "Concatenated login and server: <login>@<server>."
mapi, MS Exchange Message API, host, hostQ_PROTO_MAPI, bytes, "Client's hostname."
mapi, MS Exchange Message API, domain, domainQ_PROTO_MAPI, bytes, "Network domain of the client."
mapi, MS Exchange Message API, action, actionQ_PROTO_MAPI, bytes, "Indicates if the message is read (Read) or composed (Compose)."
mapi, MS Exchange Message API, importance, importanceQ_PROTO_MAPI, uint32, "Indicates if the email has been marked by the user."
mapi, MS Exchange Message API, sensivity, sensivityQ_PROTO_MAPI, uint32, "Message sensibility."
mapi, MS Exchange Message API, date, dateQ_PROTO_MAPI, uint64, "Message date: number of 100-nanosecond intervals since January 1, 1601."
mapi, MS Exchange Message API, size, sizeQ_PROTO_MAPI, uint32, "Message size."
mapi, MS Exchange Message API, flags, flagsQ_PROTO_MAPI, uint32, "Message flags."
mapi, MS Exchange Message API, email_type, email_typeQ_PROTO_MAPI, bytes, "E-mail type (enumeration)."
mapi, MS Exchange Message API, receiver_type, receiver_typeQ_PROTO_MAPI, bytes, "Type of the email receiver."
mapi, MS Exchange Message API, attach_id, attach_idQ_PROTO_MAPI, uint32, "Attachment identifier."
mapi, MS Exchange Message API, msglist_date, msglist_dateQ_PROTO_MAPI, uint64, "Message date in a message list: number of 100-nanosecond intervals since January 1, 1601."
mapi, MS Exchange Message API, msglist_msgid, msglist_msgidQ_PROTO_MAPI, uint64, "Message identifier."
mapi, MS Exchange Message API, msglist_size, msglist_sizeQ_PROTO_MAPI, uint32, "Message size in a message list."
mapi, MS Exchange Message API, msglist_importance, msglist_importanceQ_PROTO_MAPI, uint32, "Indicates if the message has been marked by the user."
mapi, MS Exchange Message API, msglist_sensivity, msglist_sensivityQ_PROTO_MAPI, uint32, "Message sensibility in a message list."
mapi, MS Exchange Message API, msglist_flags, msglist_flagsQ_PROTO_MAPI, uint32, "Message flags in a message list."
mapi, MS Exchange Message API, msglist_receiver_type, msglist_receiver_typeQ_PROTO_MAPI, bytes, "Type of the email receiver"
mashare, Ma-Share.com, action, actionQ_PROTO_MASHARE, bytes, "Indicates the action executed by the user."
mashare, Ma-Share.com, filename, filenameQ_PROTO_MASHARE, bytes, "Name of the transferred file."
mashare, Ma-Share.com, filesize, filesizeQ_PROTO_MASHARE, uint32, "Size (byte) of the transferred file."
mashare, Ma-Share.com, download_url, download_urlQ_PROTO_MASHARE, bytes, "Link of the downloaded file."
mashare, Ma-Share.com, delete_url, delete_urlQ_PROTO_MASHARE, bytes, "Link to use in order to delete the file."
mashare, Ma-Share.com, fileid, fileidQ_PROTO_MASHARE, bytes, "Unique identifier of the file."
mgcp, Media Gateway Control Protocol, method, methodQ_PROTO_MGCP, bytes, "The command"
mgcp, Media Gateway Control Protocol, endpoint, endpointQ_PROTO_MGCP, bytes, "Handset identifier"
mgcp, Media Gateway Control Protocol, version, versionQ_PROTO_MGCP, bytes, "Protocol version"
mgcp, Media Gateway Control Protocol, tid, tidQ_PROTO_MGCP, uint32, "Transaction identifier"
mgcp, Media Gateway Control Protocol, code, codeQ_PROTO_MGCP, uint32, "Return code of a query"
mgcp, Media Gateway Control Protocol, packets_sent, packets_sentQ_PROTO_MGCP, uint32, "Number of RTP packets sent"
mgcp, Media Gateway Control Protocol, octets_sent, octets_sentQ_PROTO_MGCP, uint32, "Number of RTP octets sent"
mgcp, Media Gateway Control Protocol, packets_received, packets_receivedQ_PROTO_MGCP, uint32, "Number of RTP packets received"
mgcp, Media Gateway Control Protocol, octets_received, octets_receivedQ_PROTO_MGCP, uint32, "Number of RTP octets received"
mgcp, Media Gateway Control Protocol, packets_lost, packets_lostQ_PROTO_MGCP, uint32, "Number of lost RTP packets"
mgcp, Media Gateway Control Protocol, jitter, jitterQ_PROTO_MGCP, uint32, "Observed Jitter for RTP packets"
mgcp, Media Gateway Control Protocol, latency, latencyQ_PROTO_MGCP, uint32, "Observed latency for RTP packets"
mgcp, Media Gateway Control Protocol, call_duration, call_durationQ_PROTO_MGCP, string, "Call duration."
mgcp, Media Gateway Control Protocol, session_duration, session_durationQ_PROTO_MGCP, string, "Call setup duration."
mgcp, Media Gateway Control Protocol, phone_number, phone_numberQ_PROTO_MGCP, bytes, "The phone number."
mgcp, Media Gateway Control Protocol, event, eventQ_PROTO_MGCP, bytes, "Observed events"
mgcp, Media Gateway Control Protocol, message_type, message_typeQ_PROTO_MGCP, bytes, "The message type"
mgcp, Media Gateway Control Protocol, call_way, call_wayQ_PROTO_MGCP, bytes, "The call Way (In, Out)"
mgcp, Media Gateway Control Protocol, start_time, start_timeQ_PROTO_MGCP, string, "Start date of the call."
mgcp, Media Gateway Control Protocol, mode, modeQ_PROTO_MGCP, bytes, "Contains the connection mode (sendrcv, recvonly, ...)"
mgcp, Media Gateway Control Protocol, notifiedEntity, notifiedEntityQ_PROTO_MGCP, bytes, "Contains the identity of the notified identity"
mgcp, Media Gateway Control Protocol, media_type, media_typeQ_PROTO_MGCP, bytes, "Contains the media type."
mgcp, Media Gateway Control Protocol, media_proto, media_protoQ_PROTO_MGCP, bytes, "Protocol used in client stream."
mgcp, Media Gateway Control Protocol, media_format, media_formatQ_PROTO_MGCP, uint32, "Client's protocol formats available."
mgcp, Media Gateway Control Protocol, signal, signalQ_PROTO_MGCP, bytes, "Contains the received/sent signal"
mgcp, Media Gateway Control Protocol, digitmap, digitmapQ_PROTO_MGCP, bytes, "Contains the digitmap"
mgcp, Media Gateway Control Protocol, caller, callerQ_PROTO_MGCP, bytes, "Contains the identity (or the phone number) of the initiator of the call."
mgcp, Media Gateway Control Protocol, callee, calleeQ_PROTO_MGCP, bytes, "Contains the identity (or the phone number) of the called party for a call."
mgcp, Media Gateway Control Protocol, connection_id, connection_idQ_PROTO_MGCP, bytes, "Connection identifier"
mgcp, Media Gateway Control Protocol, media_attr_type, media_attr_typeQ_PROTO_MGCP, uint32, "Contains the media type (audio or video)."
mgcp, Media Gateway Control Protocol, media_attr_encoding, media_attr_encodingQ_PROTO_MGCP, bytes, "The encoding of media data."
mgcp, Media Gateway Control Protocol, media_attr_rate, media_attr_rateQ_PROTO_MGCP, bytes, "The encoding rate."
mgcp, Media Gateway Control Protocol, media_attr_param, media_attr_paramQ_PROTO_MGCP, bytes, "Session attribute value."
mgcp, Media Gateway Control Protocol, media_attr_label, media_attr_labelQ_PROTO_MGCP, bytes, "Name of the described session attribute."
mgcp, Media Gateway Control Protocol, media_attr_addr, media_attr_addrQ_PROTO_MGCP, string, "The mentioned IPv4 address to be used."
mgcp, Media Gateway Control Protocol, media_attr_channel, media_attr_channelQ_PROTO_MGCP, bytes, "The channel value."
mgcp, Media Gateway Control Protocol, media_attr_transport, media_attr_transportQ_PROTO_MGCP, bytes, "The transport protocol (TCP or UDP)."
mgcp, Media Gateway Control Protocol, media_attr_value, media_attr_valueQ_PROTO_MGCP, bytes, "Line value of the media attribute."
mgcp, Media Gateway Control Protocol, call_id, call_idQ_PROTO_MGCP, bytes, "Call id, extracted for each call."
mimp, IMP mobile version, attach_filename, attach_filenameQ_PROTO_MIMP, bytes, "Attachment name."
mimp, IMP mobile version, date, dateQ_PROTO_MIMP, bytes, "Message date."
mimp, IMP mobile version, sender_alias, sender_aliasQ_PROTO_MIMP, bytes, "Name of the email sender."
mimp, IMP mobile version, sender_email, sender_emailQ_PROTO_MIMP, bytes, "Email address of the email sender."
mimp, IMP mobile version, sender, senderQ_PROTO_MIMP, bytes, "Full address of email sender (alias followed by email address)."
mimp, IMP mobile version, subject, subjectQ_PROTO_MIMP, bytes, "Message subject."
mimp, IMP mobile version, receiver_type, receiver_typeQ_PROTO_MIMP, bytes, "Type of the email receiver."
mimp, IMP mobile version, receiver_alias, receiver_aliasQ_PROTO_MIMP, bytes, "Name of email receiver (included cc and bcc receivers)."
mimp, IMP mobile version, receiver_email, receiver_emailQ_PROTO_MIMP, bytes, "Email address of message receiver (included cc and bcc receivers)."
mimp, IMP mobile version, receiver, receiverQ_PROTO_MIMP, bytes, "Full address of email receiver (including cc and bcc receivers)."
mimp, IMP mobile version, msglist_subject, msglist_subjectQ_PROTO_MIMP, bytes, "Message subject in a message list."
mimp, IMP mobile version, msglist_sender_alias, msglist_sender_aliasQ_PROTO_MIMP, bytes, "Name of email sender."
mimp, IMP mobile version, msglist_receiver_alias, msglist_receiver_aliasQ_PROTO_MIMP, bytes, "Name of email receiver."
mimp, IMP mobile version, password, passwordQ_PROTO_MIMP, bytes, "User's password string."
mimp, IMP mobile version, login, loginQ_PROTO_MIMP, bytes, "User's login string."
mimp, IMP mobile version, action, actionQ_PROTO_MIMP, bytes, "Indicates if the message is read (Read) or composed (Compose)."
mimp, IMP mobile version, msglist_folder, msglist_folderQ_PROTO_MIMP, bytes, "Indicates the directory from a message list."
mimp, IMP mobile version, attach_size, attach_sizeQ_PROTO_MIMP, uint32, "Attached file MIME size."
mms, Microsoft Multimedia Streaming, filename, filenameQ_PROTO_MMS, bytes, "Name of the file currently broadcasted."
mmse, MultiMedia Messages Encapsulation, receiver, receiverQ_PROTO_MMSE, bytes, "MMS receiver."
mmse, MultiMedia Messages Encapsulation, nb_receiver, nb_receiverQ_PROTO_MMSE, uint32, "Number of receiver for the same MMS."
mmse, MultiMedia Messages Encapsulation, version, versionQ_PROTO_MMSE, bytes, "Protocol version."
mmse, MultiMedia Messages Encapsulation, tid, tidQ_PROTO_MMSE, bytes, "Transaction identifier."
mmse, MultiMedia Messages Encapsulation, sender, senderQ_PROTO_MMSE, bytes, "MMS sender."
mmse, MultiMedia Messages Encapsulation, subject, subjectQ_PROTO_MMSE, bytes, "MMS subject."
mmse, MultiMedia Messages Encapsulation, content_type, content_typeQ_PROTO_MMSE, bytes, "The content type of the message."
mmse, MultiMedia Messages Encapsulation, message_id, message_idQ_PROTO_MMSE, bytes, "A unique reference assigned to the message. The ID enables a client to match delivery reports with previously sent messages."
mmse, MultiMedia Messages Encapsulation, content_location, content_locationQ_PROTO_MMSE, bytes, "Specifies a reference to the stored version of the MM that can be retrieved or can be used to obtain information about the MM using the WSP/HTTP GET or M-Mbox-View-req."
mmse, MultiMedia Messages Encapsulation, response_status_code, response_status_codeQ_PROTO_MMSE, uint32, "It is used by the originating MMS Proxy-Relay to inform the MMS Client, which has performed a submission or a forward the result of that particular operation."
mmse, MultiMedia Messages Encapsulation, response_status_text, response_status_textQ_PROTO_MMSE, bytes, "Description which qualifies the response_status_code. The description may be based on the on the status code names contained in RFC1893."
mmse, MultiMedia Messages Encapsulation, message_sz, message_szQ_PROTO_MMSE, uint32, "Full size of message in octets."
mmse, MultiMedia Messages Encapsulation, content_part_type, content_part_typeQ_PROTO_MMSE, bytes, "Message sub-part type."
mmse, MultiMedia Messages Encapsulation, content_part_id, content_part_idQ_PROTO_MMSE, bytes, "Message sub-part ID."
mmse, MultiMedia Messages Encapsulation, content_part_filename, content_part_filenameQ_PROTO_MMSE, bytes, "Name of the file containing the current message sub-part data."
mount, Mount, flavor, flavorQ_PROTO_MOUNT, uint32, "Authentification supported by the server"
mount, Mount, flavors, flavorsQ_PROTO_MOUNT, uint32, "Number of authentification flavors supported by the server"
mount, Mount, length_fhandle, length_fhandleQ_PROTO_MOUNT, uint32, "Length of the file handle"
mount, Mount, status, statusQ_PROTO_MOUNT, uint32, "Information status on the request process."
mount, Mount, path_value, path_valueQ_PROTO_MOUNT, bytes, "Value of the data path string."
mount, Mount, path_length, path_lengthQ_PROTO_MOUNT, uint32, "Length of the data path string."
mpegts, MPEG-Transport Stream, chunk_len, chunk_lenQ_PROTO_MPEGTS, uint32, "Data length."
mplus_messenger, M+ Messenger, service_id, service_idQ_PROTO_MPLUS_MESSENGER, uint32, "Composite 32-bit integer value defining the service currently used. The first byte (LSB) gives the generic service definition, the second byte gives an advanced service definition for specific cases (example: File Transfer)."
mplus_messenger, M+ Messenger, service, serviceQ_PROTO_MPLUS_MESSENGER, bytes, "Current service identification string."
mplus_messenger, M+ Messenger, service_stats, service_statsQ_PROTO_MPLUS_MESSENGER, bytes, "Composite attribute containing the packet metrics used for each new service type detection, extracting when performing STATISCAL detection method only. Note: this attribute won't be extracted in case of session expiration (eg. when the current service is not ended properly by the user)."
msrp, Message Session Relay Protocol, session_id, session_idQ_PROTO_MSRP, bytes, "Uniquely identifies the current user session."
msrp, Message Session Relay Protocol, authority, authorityQ_PROTO_MSRP, bytes, "Authority part of an MSRP uri"
msrp, Message Session Relay Protocol, uri, uriQ_PROTO_MSRP, bytes, "MSRP uri"
msrp, Message Session Relay Protocol, path_type, path_typeQ_PROTO_MSRP, bytes, "path_entry attribute type."
myspace, MySpace.com, query_raw, query_rawQ_PROTO_MYSPACE, bytes, "Contains the query sent to the search engine as indicated in the URL."
myspace, MySpace.com, query_text, query_textQ_PROTO_MYSPACE, bytes, "Query sent to the search engine."
myspace, MySpace.com, password, passwordQ_PROTO_MYSPACE, bytes, "User's password string."
myspace, MySpace.com, nickname, nicknameQ_PROTO_MYSPACE, bytes, "User's profile displayed name."
myspace, MySpace.com, name, nameQ_PROTO_MYSPACE, bytes, "Name the user."
myspace, MySpace.com, login, loginQ_PROTO_MYSPACE, bytes, "User's login string."
mysql, MySQL Protocol, login, loginQ_PROTO_MYSQL, bytes, "User's login string."
mysql, MySQL Protocol, base, baseQ_PROTO_MYSQL, bytes, "Database name."
mysql, MySQL Protocol, query, queryQ_PROTO_MYSQL, bytes, "SQL query."
nbns, Netbios Name Service, service, serviceQ_PROTO_NBNS, bytes, "Current service identification string."
nbns, Netbios Name Service, query, queryQ_PROTO_NBNS, bytes, "Query sent."
netbios, Netbios, caller, callerQ_PROTO_NETBIOS, bytes, "Name of the caller."
netbios, Netbios, callee, calleeQ_PROTO_NETBIOS, bytes, "Name of the called member."
netbsd_update, NetBSD Updates, package_name, package_nameQ_PROTO_NETBSD_UPDATE, bytes, "Software package name."
netflix, Netflix.com, login, loginQ_PROTO_NETFLIX, bytes, "User's login string."
netflix, Netflix.com, video_duration, video_durationQ_PROTO_NETFLIX, bytes, "Duration of the video in seconds."
netflix, Netflix.com, videoid, videoidQ_PROTO_NETFLIX, bytes, "Netflix video identifier."
netflix, Netflix.com, title, titleQ_PROTO_NETFLIX, bytes, "Title of the movie."
netflix, Netflix.com, description, descriptionQ_PROTO_NETFLIX, bytes, "Synopsis of the movie."
netflix, Netflix.com, date, dateQ_PROTO_NETFLIX, bytes, "Release date of the movie."
netlog, Netlog.com, login, loginQ_PROTO_NETLOG, bytes, "User's login string."
netlog, Netlog.com, password, passwordQ_PROTO_NETLOG, bytes, "User's password string."
netlog, Netlog.com, is_mobile_service, is_mobile_serviceQ_PROTO_NETLOG, uint32, "Whether or not the access was made through a mobile device."
nfs, Network File System, version, versionQ_PROTO_NFS, bytes, "Used version"
nfs, Network File System, filename, filenameQ_PROTO_NFS, bytes, "Accessed, written or read file name."
nfs, Network File System, offset, offsetQ_PROTO_NFS, uint64, "Offset of the written/read file. Extracted on READ and WRITE procedure replies."
nfs, Network File System, filesize, filesizeQ_PROTO_NFS, uint64, "Size of the file."
nfs, Network File System, uid, uidQ_PROTO_NFS, uint32, "Generic user ID."
nfs, Network File System, gid, gidQ_PROTO_NFS, uint32, "Identifier of the file owner's group (see page 21 of RFC 1813)."
nfs, Network File System, mode, modeQ_PROTO_NFS, uint32, "Protection mode bits (see page 22 of RFC 1813)."
nfs, Network File System, type_string, type_stringQ_PROTO_NFS, bytes, "File type (see page 19 of RFC 1813)."
niconico_douga, Nicovideo.jp (aka Nico Nico Douga), query_text, query_textQ_PROTO_NICONICO_DOUGA, bytes, "Decoded query text."
niconico_douga, Nicovideo.jp (aka Nico Nico Douga), query_raw, query_rawQ_PROTO_NICONICO_DOUGA, bytes, "Query in raw HTML"
niconico_douga, Nicovideo.jp (aka Nico Nico Douga), video_duration, video_durationQ_PROTO_NICONICO_DOUGA, bytes, "Duration of the video in seconds."
niconico_douga, Nicovideo.jp (aka Nico Nico Douga), videoid, videoidQ_PROTO_NICONICO_DOUGA, bytes, "Nico nico video identifier."
niconico_douga, Nicovideo.jp (aka Nico Nico Douga), tag, tagQ_PROTO_NICONICO_DOUGA, bytes, "Video tag."
niconico_douga, Nicovideo.jp (aka Nico Nico Douga), title, titleQ_PROTO_NICONICO_DOUGA, bytes, "Title of the video."
niconico_douga, Nicovideo.jp (aka Nico Nico Douga), description, descriptionQ_PROTO_NICONICO_DOUGA, bytes, "Synopsis of the video."
niconico_douga, Nicovideo.jp (aka Nico Nico Douga), date, dateQ_PROTO_NICONICO_DOUGA, bytes, "Release date of the video."
niconico_douga, Nicovideo.jp (aka Nico Nico Douga), nickname, nicknameQ_PROTO_NICONICO_DOUGA, bytes, "User nickname."
niconico_douga, Nicovideo.jp (aka Nico Nico Douga), login, loginQ_PROTO_NICONICO_DOUGA, bytes, "User's login string."
nntp, Network News Transport Protocol, sender, senderQ_PROTO_NNTP, bytes, "Full address of email sender (alias followed by email address)."
nntp, Network News Transport Protocol, login, loginQ_PROTO_NNTP, bytes, "User's login string."
nntp, Network News Transport Protocol, password, passwordQ_PROTO_NNTP, bytes, "User's password string."
nntp, Network News Transport Protocol, newsgroup, newsgroupQ_PROTO_NNTP, bytes, "Newsgroup name."
nntp, Network News Transport Protocol, subject, subjectQ_PROTO_NNTP, bytes, "Message subject."
nntp, Network News Transport Protocol, header_raw, header_rawQ_PROTO_NNTP, bytes, "One NNTP header line (field and value)."
nntp, Network News Transport Protocol, attach_filename, attach_filenameQ_PROTO_NNTP, bytes, "Attachment name."
ntp, Network Time Protocol, reference_clock, reference_clockQ_PROTO_NTP, string, "Reference clock IP address."
odnoklassniki, Odnoklassniki.ru, contact_alias, contact_aliasQ_PROTO_ODNOKLASSNIKI, bytes, "Alias of a contact."
odnoklassniki, Odnoklassniki.ru, group_name, group_nameQ_PROTO_ODNOKLASSNIKI, bytes, "Name of the group the user has subscribed to."
odnoklassniki, Odnoklassniki.ru, password, passwordQ_PROTO_ODNOKLASSNIKI, bytes, "User's password string."
odnoklassniki, Odnoklassniki.ru, login, loginQ_PROTO_ODNOKLASSNIKI, bytes, "User's login string."
oovoo, Oovoo, login, loginQ_PROTO_OOVOO, bytes, "User's login string."
openbsd_update, OpenBSD Updates, package_name, package_nameQ_PROTO_OPENBSD_UPDATE, bytes, "Software package name."
openvpn, OpenVPN, seq, seqQ_PROTO_OPENVPN, uint32, "Sequence number"
opera_update, Opera Update, new_version, new_versionQ_PROTO_OPERA_UPDATE, bytes, "New version of Opera which will be installed."
opera_update, Opera Update, current_version, current_versionQ_PROTO_OPERA_UPDATE, bytes, "Opera version currently installed."
orangemail, Orange webmail, draft, draftQ_PROTO_ORANGEMAIL, uint32, "Indicates if the email is a draft or has really been posted"
orangemail, Orange webmail, attach_id, attach_idQ_PROTO_ORANGEMAIL, bytes, "Attachment identifier."
orangemail, Orange webmail, attach_filename, attach_filenameQ_PROTO_ORANGEMAIL, bytes, "Attachment name."
orangemail, Orange webmail, date, dateQ_PROTO_ORANGEMAIL, bytes, "Message date."
orangemail, Orange webmail, receiver_type, receiver_typeQ_PROTO_ORANGEMAIL, bytes, "Type of the email receiver."
orangemail, Orange webmail, receiver_alias, receiver_aliasQ_PROTO_ORANGEMAIL, bytes, "Name of email receiver (included cc and bcc receivers)."
orangemail, Orange webmail, receiver_email, receiver_emailQ_PROTO_ORANGEMAIL, bytes, "Email address of message receiver (included cc and bcc receivers)."
orangemail, Orange webmail, receiver, receiverQ_PROTO_ORANGEMAIL, bytes, "Full address of email receiver (including cc and bcc receivers)."
orangemail, Orange webmail, sender_alias, sender_aliasQ_PROTO_ORANGEMAIL, bytes, "Name of the email sender."
orangemail, Orange webmail, sender_email, sender_emailQ_PROTO_ORANGEMAIL, bytes, "Email address of the email sender."
orangemail, Orange webmail, sender, senderQ_PROTO_ORANGEMAIL, bytes, "Full address of email sender (alias followed by email address)."
orangemail, Orange webmail, subject, subjectQ_PROTO_ORANGEMAIL, bytes, "Message subject."
orangemail, Orange webmail, msg_id, msg_idQ_PROTO_ORANGEMAIL, bytes, "Identifier of the message."
orangemail, Orange webmail, action, actionQ_PROTO_ORANGEMAIL, bytes, "Indicates if the message is read (Read) or composed (Compose)."
orangemail, Orange webmail, folder, folderQ_PROTO_ORANGEMAIL, bytes, "Indicates the directory from where messages are read."
orangemail, Orange webmail, msglist_date, msglist_dateQ_PROTO_ORANGEMAIL, bytes, "Message date in a message list."
orangemail, Orange webmail, msglist_subject, msglist_subjectQ_PROTO_ORANGEMAIL, bytes, "Message subject in a message list."
orangemail, Orange webmail, msglist_sender_alias, msglist_sender_aliasQ_PROTO_ORANGEMAIL, bytes, "Name of email sender."
orangemail, Orange webmail, msglist_sender, msglist_senderQ_PROTO_ORANGEMAIL, bytes, "Full address of email sender (alias and email address)."
orangemail, Orange webmail, msglist_receiver_alias, msglist_receiver_aliasQ_PROTO_ORANGEMAIL, bytes, "Name of email receiver."
orangemail, Orange webmail, msglist_receiver, msglist_receiverQ_PROTO_ORANGEMAIL, bytes, "Full address of email receiver in a message list."
orangemail, Orange webmail, msglist_folder, msglist_folderQ_PROTO_ORANGEMAIL, bytes, "Indicates the directory from a message list."
orangemail, Orange webmail, contact_alias, contact_aliasQ_PROTO_ORANGEMAIL, bytes, "Alias of a contact."
orangemail, Orange webmail, contact_email, contact_emailQ_PROTO_ORANGEMAIL, bytes, "Email address of a contact."
orangemail, Orange webmail, contact_firstname, contact_firstnameQ_PROTO_ORANGEMAIL, bytes, "Contact first name."
orangemail, Orange webmail, contact_lastname, contact_lastnameQ_PROTO_ORANGEMAIL, bytes, "Contact last name."
orangemail, Orange webmail, msglist_msgid, msglist_msgidQ_PROTO_ORANGEMAIL, bytes, "Message identifier."
orangemail, Orange webmail, attach_size, attach_sizeQ_PROTO_ORANGEMAIL, uint32, "Attached file MIME size."
orangemail, Orange webmail, login, loginQ_PROTO_ORANGEMAIL, bytes, "User's login string."
ospf, Open Shortest Path First, router_id, router_idQ_PROTO_OSPF, string, "Router Id."
ospf, Open Shortest Path First, area_id, area_idQ_PROTO_OSPF, string, "The Area ID of the area to which the attached network belongs."
ospf, Open Shortest Path First, netmask, netmaskQ_PROTO_OSPF, string, "The network mask associated with this interface."
ospf, Open Shortest Path First, dead_interval, dead_intervalQ_PROTO_OSPF, uint32, "The number of seconds before declaring a silent router down."
ospf, Open Shortest Path First, designed_router, designed_routerQ_PROTO_OSPF, string, "The identity of the Designated Router for this network, in the view of the sending router>."
ospf, Open Shortest Path First, backup_router, backup_routerQ_PROTO_OSPF, string, "The identity of the Backup Designated Router for this network, in the view of the sending router."
ospf, Open Shortest Path First, neighbor, neighborQ_PROTO_OSPF, string, "The Router IDs of each router from whom valid Hello packets have been seen recently on the network."
ospf, Open Shortest Path First, ls_type, ls_typeQ_PROTO_OSPF, uint32, "The type of the LSA."
ospf, Open Shortest Path First, ls_id, ls_idQ_PROTO_OSPF, string, "This field identifies the portion of the internet environment that is being described by the LSA."
ospf, Open Shortest Path First, ls_adv_router, ls_adv_routerQ_PROTO_OSPF, string, "The Router ID of the router that originated the LSA."
ospf, Open Shortest Path First, ls_seq_number, ls_seq_numberQ_PROTO_OSPF, uint32, "Detects old or duplicate LSAs."
ospf, Open Shortest Path First, ls_netmask, ls_netmaskQ_PROTO_OSPF, string, "The IP address mask for the network."
ospf, Open Shortest Path First, ls_metric, ls_metricQ_PROTO_OSPF, uint32, "The cost of this route."
ospf, Open Shortest Path First, ls_attach_router, ls_attach_routerQ_PROTO_OSPF, string, "The Router IDs of each of the routers attached to the network."
ospf, Open Shortest Path First, link_id, link_idQ_PROTO_OSPF, string, "Identifies the object that this router link connects to."
ospf, Open Shortest Path First, link_data, link_dataQ_PROTO_OSPF, string, "For connections to stub networks, Link Data specifies the network's IP address mask. For unnumbered point-to-point connections, it specifies the interface's MIB-II [Ref8] ifIndex value. For the other link types it specifies the router interface's IP address."
ospf, Open Shortest Path First, dd_seq_nbr, dd_seq_nbrQ_PROTO_OSPF, uint32, "Used to sequence the collection of Database Description Packets."
ospf, Open Shortest Path First, external_fwd_addr, external_fwd_addrQ_PROTO_OSPF, string, "Data traffic for the advertised destination will be forwarded to this address."
ospf, Open Shortest Path First, external_route_tag, external_route_tagQ_PROTO_OSPF, uint32, "A 32-bit field attached to each external route."
owa, Outlook Web App, end, endQ_PROTO_OWA, Void, "Indicates the end of a top level event."
owa, Outlook Web App, msglist_sender, msglist_senderQ_PROTO_OWA, bytes, "Full address of email sender (alias and email address)."
owa, Outlook Web App, msglist_receiver_alias, msglist_receiver_aliasQ_PROTO_OWA, bytes, "Name of email receiver."
owa, Outlook Web App, msglist_receiver_entry, msglist_receiver_entryQ_PROTO_OWA, bool, "Parent entry for a receiver in a message list."
owa, Outlook Web App, contact_email, contact_emailQ_PROTO_OWA, bytes, "Email address of a contact."
owa, Outlook Web App, contact_alias, contact_aliasQ_PROTO_OWA, bytes, "Alias of a contact."
owa, Outlook Web App, contact_entry, contact_entryQ_PROTO_OWA, bool, "This attribute groups information about a contact."
owa, Outlook Web App, draft, draftQ_PROTO_OWA, uint32, "Indicates if the email is a draft or has really been posted"
owa, Outlook Web App, receiver, receiverQ_PROTO_OWA, bytes, "Full address of email receiver (including cc and bcc receivers)."
owa, Outlook Web App, receiver_email, receiver_emailQ_PROTO_OWA, bytes, "Email address of message receiver (included cc and bcc receivers)."
owa, Outlook Web App, receiver_alias, receiver_aliasQ_PROTO_OWA, bytes, "Name of email receiver (included cc and bcc receivers)."
owa, Outlook Web App, receiver_type, receiver_typeQ_PROTO_OWA, bytes, "Type of the email receiver."
owa, Outlook Web App, receiver_entry, receiver_entryQ_PROTO_OWA, bool, "Parent entry, for different elements belonging to the email receiver."
owa, Outlook Web App, date, dateQ_PROTO_OWA, bytes, "Message date."
owa, Outlook Web App, sender, senderQ_PROTO_OWA, bytes, "Full address of email sender (alias followed by email address)."
owa, Outlook Web App, sender_email, sender_emailQ_PROTO_OWA, bytes, "Email address of the email sender."
owa, Outlook Web App, sender_alias, sender_aliasQ_PROTO_OWA, bytes, "Name of the email sender."
owa, Outlook Web App, sender_entry, sender_entryQ_PROTO_OWA, bool, "Parent entry, for different elements belonging to the sender."
owa, Outlook Web App, msg_id, msg_idQ_PROTO_OWA, bytes, "Identifier of the message."
owa, Outlook Web App, subject, subjectQ_PROTO_OWA, bytes, "Message subject."
owa, Outlook Web App, action, actionQ_PROTO_OWA, bytes, "Indicates if the message is read (Read) or composed (Compose)."
owa, Outlook Web App, attach_filename, attach_filenameQ_PROTO_OWA, bytes, "Attachment name."
owa, Outlook Web App, msglist_date, msglist_dateQ_PROTO_OWA, bytes, "Message date in a message list."
owa, Outlook Web App, msglist_sender_alias, msglist_sender_aliasQ_PROTO_OWA, bytes, "Name of email sender."
owa, Outlook Web App, msglist_sender_entry, msglist_sender_entryQ_PROTO_OWA, bool, "Parent entry for a sender in a message list."
owa, Outlook Web App, msglist_subject, msglist_subjectQ_PROTO_OWA, bytes, "Message subject in a message list."
owa, Outlook Web App, msglist_msgid, msglist_msgidQ_PROTO_OWA, bytes, "Message identifier."
owa, Outlook Web App, msglist_entry, msglist_entryQ_PROTO_OWA, bool, "Parent entry, for different elements belonging to the same message of a message list."
owa, Outlook Web App, attach_content, attach_contentQ_PROTO_OWA, buffer, "Attached file content."
owa, Outlook Web App, attach_type, attach_typeQ_PROTO_OWA, bytes, "Content type of the sent attached file."
owa, Outlook Web App, attach, attachQ_PROTO_OWA, bool, "Parent entry, for attach fields in a message."
owa, Outlook Web App, email, emailQ_PROTO_OWA, bool, "Parent entry, for fields belonging to the same email."
owa, Outlook Web App, msglist_folder, msglist_folderQ_PROTO_OWA, bytes, "Indicates the directory from a message list."
owa, Outlook Web App, folder, folderQ_PROTO_OWA, bytes, "Indicates the directory from where messages are read."
owa, Outlook Web App, attach_id, attach_idQ_PROTO_OWA, bytes, "Attachment identifier."
owa, Outlook Web App, session_id, session_idQ_PROTO_OWA, bytes, "Uniquely identifies the current user session."
owa, Outlook Web App, attach_size, attach_sizeQ_PROTO_OWA, uint32, "Attached file MIME size."
owa, Outlook Web App, login_server, login_serverQ_PROTO_OWA, bytes, "Concatenated login and server: <login>@<server>."
owa, Outlook Web App, msglist_receiver, msglist_receiverQ_PROTO_OWA, bytes, "Full address of email receiver in a message list."
owa, Outlook Web App, login, loginQ_PROTO_OWA, bytes, "User's login string."
owa, Outlook Web App, msglist_receiver_email, msglist_receiver_emailQ_PROTO_OWA, bytes, "Email address of the email receiver."
owa, Outlook Web App, msglist_sender_email, msglist_sender_emailQ_PROTO_OWA, bytes, "Address of email sender."
paltalk, PalTalk, uid, uidQ_PROTO_PALTALK, uint32, "Generic user ID."
paltalk, PalTalk, login, loginQ_PROTO_PALTALK, bytes, "User's login string."
paltalk, PalTalk, user_email, user_emailQ_PROTO_PALTALK, bytes, "User's email address."
paltalk, PalTalk, contact_uid, contact_uidQ_PROTO_PALTALK, uint32, "Contact ID."
paltalk, PalTalk, contact_login, contact_loginQ_PROTO_PALTALK, bytes, "Contact login."
paltalk, PalTalk, chat_id, chat_idQ_PROTO_PALTALK, bytes, "Window chat id."
paltalk, PalTalk, channel, channelQ_PROTO_PALTALK, bytes, "Chat room name."
paltalk, PalTalk, message, messageQ_PROTO_PALTALK, bytes, "Contains the chat message."
paltalk, PalTalk, encoding, encodingQ_PROTO_PALTALK, bytes, "Message encoding."
paltalk, PalTalk, sender, senderQ_PROTO_PALTALK, bytes, "Contains the identity of the sender of a chat session or a file transfer."
paltalk, PalTalk, receiver, receiverQ_PROTO_PALTALK, bytes, "Contains the identity of the receiver for a chat message or a file transfer."
paltalk, PalTalk, sender_uid, sender_uidQ_PROTO_PALTALK, uint32, "Message sender's unique identifier."
paltalk, PalTalk, receiver_uid, receiver_uidQ_PROTO_PALTALK, uint32, "Message receiver's unique identifier."
paltalk, PalTalk, call_id, call_idQ_PROTO_PALTALK, bytes, "Call id, extracted for each call."
paltalk, PalTalk, start_time, start_timeQ_PROTO_PALTALK, string, "Start date of the call."
paltalk, PalTalk, caller, callerQ_PROTO_PALTALK, bytes, "Contains the identity (or the phone number) of the initiator of the call."
paltalk, PalTalk, caller_uid, caller_uidQ_PROTO_PALTALK, uint32, "Caller's unique identifier."
paltalk, PalTalk, callee, calleeQ_PROTO_PALTALK, bytes, "Contains the identity (or the phone number) of the called party for a call."
paltalk, PalTalk, callee_uid, callee_uidQ_PROTO_PALTALK, uint32, "Callee's unique identifier."
paltalk, PalTalk, call_duration, call_durationQ_PROTO_PALTALK, string, "Call duration."
paltalk, PalTalk, caller_addr, caller_addrQ_PROTO_PALTALK, string, "Address which could be used by the initiator of the call."
paltalk, PalTalk, callee_addr, callee_addrQ_PROTO_PALTALK, string, "Address which could be used by the called party."
paltalk_transfer, PalTalk Transfer Protocol, login, loginQ_PROTO_PALTALK_TRANSFER, bytes, "User's login string."
paltalk_transfer, PalTalk Transfer Protocol, sender, senderQ_PROTO_PALTALK_TRANSFER, bytes, "Contains the identity of the sender of a file transfer."
paltalk_transfer, PalTalk Transfer Protocol, receiver, receiverQ_PROTO_PALTALK_TRANSFER, bytes, "Contains the identity of the receiver for a file transfer."
paltalk_transfer, PalTalk Transfer Protocol, sender_uid, sender_uidQ_PROTO_PALTALK_TRANSFER, uint32, "File sender's UID"
paltalk_transfer, PalTalk Transfer Protocol, receiver_uid, receiver_uidQ_PROTO_PALTALK_TRANSFER, uint32, "File receiver's UID"
paltalk_transfer, PalTalk Transfer Protocol, filename, filenameQ_PROTO_PALTALK_TRANSFER, bytes, "Name of the transferred file."
paltalk_transfer, PalTalk Transfer Protocol, filesize, filesizeQ_PROTO_PALTALK_TRANSFER, uint32, "Size (byte) of the transferred file."
pap, Password Authentication Protocol, login, loginQ_PROTO_PAP, bytes, "User's login string."
pap, Password Authentication Protocol, password, passwordQ_PROTO_PAP, bytes, "User's password string."
pap, Password Authentication Protocol, message_type, message_typeQ_PROTO_PAP, bytes, "Message type."
perforce, Perforce Protocol, parameter_name, parameter_nameQ_PROTO_PERFORCE, bytes, "Name of the perforce parameter."
perforce, Perforce Protocol, parameter_value, parameter_valueQ_PROTO_PERFORCE, bytes, "Value of the perforce parameter."
perforce, Perforce Protocol, parameter_size, parameter_sizeQ_PROTO_PERFORCE, uint32, "Size in bytes of the parameter value."
perfspot, Perfspot.com, is_mobile_service, is_mobile_serviceQ_PROTO_PERFSPOT, uint32, "Whether or not the access was made through a mobile device."
perfspot, Perfspot.com, password, passwordQ_PROTO_PERFSPOT, bytes, "User's password string."
perfspot, Perfspot.com, login, loginQ_PROTO_PERFSPOT, bytes, "User's login string."
pop3, Post Office Protocol (Version 3), end, endQ_PROTO_POP3, Void, "Indicates the end of a top level event."
pop3, Post Office Protocol (Version 3), login, loginQ_PROTO_POP3, bytes, "User's login string."
pop3, Post Office Protocol (Version 3), email, emailQ_PROTO_POP3, bool, "Parent entry, for fields belonging to the same email."
pop3, Post Office Protocol (Version 3), password, passwordQ_PROTO_POP3, bytes, "User's password string."
pop3, Post Office Protocol (Version 3), sender_entry, sender_entryQ_PROTO_POP3, bool, "Parent entry, for different elements belonging to the sender."
pop3, Post Office Protocol (Version 3), sender, senderQ_PROTO_POP3, bytes, "Full address of email sender (alias followed by email address)."
pop3, Post Office Protocol (Version 3), sender_email, sender_emailQ_PROTO_POP3, bytes, "Email address of the email sender."
pop3, Post Office Protocol (Version 3), sender_alias, sender_aliasQ_PROTO_POP3, bytes, "Name of the email sender."
pop3, Post Office Protocol (Version 3), receiver_entry, receiver_entryQ_PROTO_POP3, bool, "Parent entry, for different elements belonging to the email receiver."
pop3, Post Office Protocol (Version 3), receiver, receiverQ_PROTO_POP3, bytes, "Full address of email receiver (including cc and bcc receivers)."
pop3, Post Office Protocol (Version 3), receiver_email, receiver_emailQ_PROTO_POP3, bytes, "Email address of message receiver (included cc and bcc receivers)."
pop3, Post Office Protocol (Version 3), receiver_alias, receiver_aliasQ_PROTO_POP3, bytes, "Name of email receiver (included cc and bcc receivers)."
pop3, Post Office Protocol (Version 3), receiver_type, receiver_typeQ_PROTO_POP3, bytes, "Type of the email receiver."
pop3, Post Office Protocol (Version 3), subject, subjectQ_PROTO_POP3, bytes, "Message subject."
pop3, Post Office Protocol (Version 3), date, dateQ_PROTO_POP3, bytes, "Message date."
pop3, Post Office Protocol (Version 3), mime_type, mime_typeQ_PROTO_POP3, bytes, "Content type of received email body."
pop3, Post Office Protocol (Version 3), request, requestQ_PROTO_POP3, bool, "Parent entry, empty, for client request and server response."
pop3, Post Office Protocol (Version 3), index, indexQ_PROTO_POP3, bytes, "Identifier of the request and response in a flow."
pop3, Post Office Protocol (Version 3), email_index, email_indexQ_PROTO_POP3, bytes, "Index of the request which the email is attached to."
pop3, Post Office Protocol (Version 3), method, methodQ_PROTO_POP3, bytes, "Command sent by the client"
pop3, Post Office Protocol (Version 3), server_response, server_responseQ_PROTO_POP3, bytes, "The return code of the server"
pop3, Post Office Protocol (Version 3), attach, attachQ_PROTO_POP3, bool, "Parent entry, for attach fields in a message."
pop3, Post Office Protocol (Version 3), attach_filename, attach_filenameQ_PROTO_POP3, bytes, "Attachment name."
pop3, Post Office Protocol (Version 3), attach_type, attach_typeQ_PROTO_POP3, bytes, "Content type of the sent attached file."
pop3, Post Office Protocol (Version 3), file_type, file_typeQ_PROTO_POP3, bytes, "Received or sent file content type (prefix-based pattern recognition) exchanged using this protocol."
pop3, Post Office Protocol (Version 3), attach_transfer_encoding, attach_transfer_encodingQ_PROTO_POP3, bytes, "Contains the encoding of the attached content"
pop3, Post Office Protocol (Version 3), attach_disposition, attach_dispositionQ_PROTO_POP3, bytes, "Attached file disposition"
pop3, Post Office Protocol (Version 3), attach_content_decoded, attach_content_decodedQ_PROTO_POP3, buffer, "Decoded attached files content."
pop3, Post Office Protocol (Version 3), replyto, replytoQ_PROTO_POP3, bytes, "Email address to use in a reply for this message."
pop3, Post Office Protocol (Version 3), greeting_message, greeting_messageQ_PROTO_POP3, bytes, "Server banner line."
pop3, Post Office Protocol (Version 3), login_server, login_serverQ_PROTO_POP3, bytes, "Concatenated login and server: <login>@<server>."
pop3, Post Office Protocol (Version 3), xmailer, xmailerQ_PROTO_POP3, bytes, "Contains the user_agent of the used mailer"
pop3, Post Office Protocol (Version 3), message_id, message_idQ_PROTO_POP3, bytes, "A unique identifier of the message."
pop3, Post Office Protocol (Version 3), user_agent, user_agentQ_PROTO_POP3, bytes, "Name of the software used."
pop3, Post Office Protocol (Version 3), header_raw, header_rawQ_PROTO_POP3, bytes, "One POP3 header line (field and value)."
pop3, Post Office Protocol (Version 3), received, receivedQ_PROTO_POP3, bool, "Parent entry, for fields added by each relay"
pop3, Post Office Protocol (Version 3), received_from_name, received_from_nameQ_PROTO_POP3, bytes, "Contains the sending host name"
pop3, Post Office Protocol (Version 3), received_from_ip, received_from_ipQ_PROTO_POP3, string, "Contains the IP address of the sending host name"
pop3, Post Office Protocol (Version 3), received_by_name, received_by_nameQ_PROTO_POP3, bytes, "Contains the receiving host name"
pop3, Post Office Protocol (Version 3), received_by_ip, received_by_ipQ_PROTO_POP3, string, "Contains the IP address of the receiving host name"
pop3, Post Office Protocol (Version 3), received_with, received_withQ_PROTO_POP3, bytes, "Contains the software used to send the email"
pop3, Post Office Protocol (Version 3), received_date, received_dateQ_PROTO_POP3, bytes, "Date when the transport service relayed the message"
pop3, Post Office Protocol (Version 3), received_server_agent, received_server_agentQ_PROTO_POP3, bytes, "Contains the name of the sever agent"
postgres, PostgreSQL, login, loginQ_PROTO_POSTGRES, bytes, "User's login string."
postgres, PostgreSQL, password, passwordQ_PROTO_POSTGRES, bytes, "User's password string."
postgres, PostgreSQL, authentification_type, authentification_typeQ_PROTO_POSTGRES, bytes, "Authentication method requested by the server."
postgres, PostgreSQL, base, baseQ_PROTO_POSTGRES, bytes, "Database name."
postgres, PostgreSQL, server_version, server_versionQ_PROTO_POSTGRES, bytes, "Server version"
postgres, PostgreSQL, proto_version, proto_versionQ_PROTO_POSTGRES, bytes, "Protocol version used"
postgres, PostgreSQL, query, queryQ_PROTO_POSTGRES, bytes, "Query sent"
postgres, PostgreSQL, error, errorQ_PROTO_POSTGRES, bytes, "Error message"
pplive, PPlive, method, methodQ_PROTO_PPLIVE, bytes, "Contains the method used for a PPLive Live Streaming command"
ppp, Point-to-Point Protocol, protocol, protocolQ_PROTO_PPP, bytes, "Higher level protocol code or name."
pptp, Point-to-Point Tunneling Protocol, version, versionQ_PROTO_PPTP, bytes, "Protocol version."
pptp, Point-to-Point Tunneling Protocol, vendor, vendorQ_PROTO_PPTP, bytes, "The type of PAC being used, or the type of PNS software being used"
pricerunner, PriceRunner, query_text, query_textQ_PROTO_PRICERUNNER, bytes, "Query sent to the search engine."
pricerunner, PriceRunner, query_raw, query_rawQ_PROTO_PRICERUNNER, bytes, "Contains the query sent to the search engine as indicated in the URL."
q931, Q.931, display, displayQ_PROTO_Q931, bytes, "Display name."
q931, Q.931, call_duration, call_durationQ_PROTO_Q931, string, "Call duration."
q931, Q.931, setup_delay, setup_delayQ_PROTO_Q931, string, "Call setup delay"
q931, Q.931, session_duration, session_durationQ_PROTO_Q931, string, "Call setup duration."
q931, Q.931, caller, callerQ_PROTO_Q931, bytes, "Contains the identity (or the phone number) of the initiator of the call."
q931, Q.931, callee, calleeQ_PROTO_Q931, bytes, "Contains the identity (or the phone number) of the called party for a call."
qq, QQ, login, loginQ_PROTO_QQ, bytes, "User's login string."
qq, QQ, version_code, version_codeQ_PROTO_QQ, bytes, "The protocol version number used by the client."
qq, QQ, msg_type, msg_typeQ_PROTO_QQ, uint32, "QQ command name."
qq, QQ, service, serviceQ_PROTO_QQ, bytes, "Current service identification string."
qq, QQ, caller, callerQ_PROTO_QQ, bytes, "Contains the identity (or the phone number) of the initiator of the call."
qq, QQ, callee, calleeQ_PROTO_QQ, bytes, "Contains the identity (or the phone number) of the called party for a call."
qq, QQ, contact_login, contact_loginQ_PROTO_QQ, bytes, "Contact login."
qq, QQ, msg_code, msg_codeQ_PROTO_QQ, uint32, "(deprecated) QQ command number."
qq, QQ, call_duration, call_durationQ_PROTO_QQ, string, "Call duration."
qq_transfer, QQ File Transfer, action, actionQ_PROTO_QQ_TRANSFER, bytes, "Indicates whether the file is uploaded or downloaded."
qq_transfer, QQ File Transfer, filename, filenameQ_PROTO_QQ_TRANSFER, bytes, "Name of the transferred file."
qq_transfer, QQ File Transfer, filesize, filesizeQ_PROTO_QQ_TRANSFER, uint32, "Size (byte) of the transferred file."
qq_transfer, QQ File Transfer, filekey, filekeyQ_PROTO_QQ_TRANSFER, bytes, "MD5Sum computed on file data (extracted from data flow)"
qq_transfer, QQ File Transfer, login, loginQ_PROTO_QQ_TRANSFER, bytes, "User's login string."
qq_transfer, QQ File Transfer, service, serviceQ_PROTO_QQ_TRANSFER, bytes, "Current service identification string."
quake, Quake, server, serverQ_PROTO_QUAKE, bytes, "Server name."
qvod, QVOD Player, peer_ip, peer_ipQ_PROTO_QVOD, string, "IPv4 address of the QVOD peer."
radius, Remote Authentication Dial-In User Service, login, loginQ_PROTO_RADIUS, bytes, "User-Name (an attribute defined in RFC2865)."
radius, Remote Authentication Dial-In User Service, calling_station_id, calling_station_idQ_PROTO_RADIUS, bytes, "Client id."
radius, Remote Authentication Dial-In User Service, framed_ip, framed_ipQ_PROTO_RADIUS, string, "Framed-IP-Address (an attribute defined in RFC2865)."
radius, Remote Authentication Dial-In User Service, framed_ip_netmask, framed_ip_netmaskQ_PROTO_RADIUS, string, "Framed-IP-Netmask (an attribute defined in RFC2865)."
radius, Remote Authentication Dial-In User Service, acct_session_id, acct_session_idQ_PROTO_RADIUS, bytes, "Accounting session ID."
radius, Remote Authentication Dial-In User Service, called_station_id, called_station_idQ_PROTO_RADIUS, bytes, "The phone number that the user called, using Dialed Number Identification (DNIS) or similar technology."
radius, Remote Authentication Dial-In User Service, nas_id, nas_idQ_PROTO_RADIUS, bytes, "Unique identifier of the NAS originating the Access-Request"
radius, Remote Authentication Dial-In User Service, nas_ip, nas_ipQ_PROTO_RADIUS, string, "IP address of the NAS originating the Access-Request"
radius, Remote Authentication Dial-In User Service, nas_port, nas_portQ_PROTO_RADIUS, uint32, "Physical port number of the user on the NAS"
radius, Remote Authentication Dial-In User Service, nas_port_type, nas_port_typeQ_PROTO_RADIUS, uint32, "Indicates the type of physical port the network access server (NAS) is using to authenticate the user."
radius, Remote Authentication Dial-In User Service, nas_port_id, nas_port_idQ_PROTO_RADIUS, bytes, "Identifies the NAS."
radius, Remote Authentication Dial-In User Service, callback_number, callback_numberQ_PROTO_RADIUS, bytes, "Contains the dialing string to be used for callback"
radius, Remote Authentication Dial-In User Service, terminate_cause, terminate_causeQ_PROTO_RADIUS, uint32, "This attribute indicates how the session was terminated"
radius, Remote Authentication Dial-In User Service, acct_output_octets, acct_output_octetsQ_PROTO_RADIUS, uint32, "Indicates how many octets have been sent to the port in the course of delivering this service"
radius, Remote Authentication Dial-In User Service, acct_input_octets, acct_input_octetsQ_PROTO_RADIUS, uint32, "Indicates how many octets have been received from the port over the course of this service being provided"
radius, Remote Authentication Dial-In User Service, session_timeout, session_timeoutQ_PROTO_RADIUS, uint32, "The maximum number of seconds of service to be provided to the user before termination of the session or prompt."
radius, Remote Authentication Dial-In User Service, idle_timeout, idle_timeoutQ_PROTO_RADIUS, uint32, "The maximum number of consecutive seconds of idle connection allowed to the user before termination of the session or prompt."
radius, Remote Authentication Dial-In User Service, start_time, start_timeQ_PROTO_RADIUS, string, "Indicates the beginning of the user service."
radius, Remote Authentication Dial-In User Service, stop_time, stop_timeQ_PROTO_RADIUS, string, "Indicates the end of the user service."
radius, Remote Authentication Dial-In User Service, framed_ipv6_route, framed_ipv6_routeQ_PROTO_RADIUS, bytes, "Provides the routing information to be configured for the user on the NAS"
radius, Remote Authentication Dial-In User Service, framed_ipv6_pool, framed_ipv6_poolQ_PROTO_RADIUS, bytes, "Contains the name of an assigned pool that SHOULD be used to assign an IPv6 prefix for the user."
radius, Remote Authentication Dial-In User Service, avp_ipv4, avp_ipv4Q_PROTO_RADIUS, string, "An IPv4 address. (CLEP_DATA_IP_ADDR)"
radius, Remote Authentication Dial-In User Service, avp_int, avp_intQ_PROTO_RADIUS, uint32, "An 8, 24 or 32 bits integer value. (CLEP_DATA_UINT32)"
radius, Remote Authentication Dial-In User Service, avp_int64, avp_int64Q_PROTO_RADIUS, uint64, "A 64 bits integer value. (CLEP_DATA_UINT64)"
radius, Remote Authentication Dial-In User Service, avp_vendor_id, avp_vendor_idQ_PROTO_RADIUS, uint32, "SMI Network Management Private Enterprise Code. (CLEP_DATA_UINT32)"
radius, Remote Authentication Dial-In User Service, avp_interface_id, avp_interface_idQ_PROTO_RADIUS, uint64, "IPv6 interface identifier. (CLEP_DATA_UINT64)"
radius, Remote Authentication Dial-In User Service, 3gpp_imsi, _3gpp_imsiQ_PROTO_RADIUS, bytes, "IMSI for the user"
radius, Remote Authentication Dial-In User Service, 3gpp_sgsn_address, _3gpp_sgsn_addressQ_PROTO_RADIUS, string, "IP address of the SGSN"
radius, Remote Authentication Dial-In User Service, 3gpp_sgsn_mcc_mnc, _3gpp_sgsn_mcc_mncQ_PROTO_RADIUS, uint32, "MCC and MNC of the SGSN"
rambler, Rambler.ru, query_text, query_textQ_PROTO_RAMBLER, bytes, "Query sent to the search engine."
rambler, Rambler.ru, query_raw, query_rawQ_PROTO_RAMBLER, bytes, "Contains the query sent to the search engine as indicated in the URL."
rambler, Rambler.ru, query_type, query_typeQ_PROTO_RAMBLER, bytes, "Sort of query sent to the search engine."
rambler, Rambler.ru, login, loginQ_PROTO_RAMBLER, bytes, "User's login string."
rambler, Rambler.ru, domain, domainQ_PROTO_RAMBLER, bytes, "Domain name used for the login of the user."
rambler, Rambler.ru, password, passwordQ_PROTO_RAMBLER, bytes, "User's password string."
rambler_webmail, Rambler webmail, attach_type, attach_typeQ_PROTO_RAMBLER_WEBMAIL, bytes, "Content type of the sent attached file."
rambler_webmail, Rambler webmail, date, dateQ_PROTO_RAMBLER_WEBMAIL, bytes, "Message date."
rambler_webmail, Rambler webmail, msg_id, msg_idQ_PROTO_RAMBLER_WEBMAIL, bytes, "Identifier of the message."
rambler_webmail, Rambler webmail, contact_alias, contact_aliasQ_PROTO_RAMBLER_WEBMAIL, bytes, "Alias of a contact."
rambler_webmail, Rambler webmail, contact_email, contact_emailQ_PROTO_RAMBLER_WEBMAIL, bytes, "Email address of a contact."
rambler_webmail, Rambler webmail, attach_filename, attach_filenameQ_PROTO_RAMBLER_WEBMAIL, bytes, "Attachment name."
rambler_webmail, Rambler webmail, receiver_type, receiver_typeQ_PROTO_RAMBLER_WEBMAIL, bytes, "Type of the email receiver."
rambler_webmail, Rambler webmail, attach_id, attach_idQ_PROTO_RAMBLER_WEBMAIL, bytes, "Attachment identifier."
rambler_webmail, Rambler webmail, folder, folderQ_PROTO_RAMBLER_WEBMAIL, bytes, "Indicates the directory from where messages are read."
rambler_webmail, Rambler webmail, subject, subjectQ_PROTO_RAMBLER_WEBMAIL, bytes, "Message subject."
rambler_webmail, Rambler webmail, draft, draftQ_PROTO_RAMBLER_WEBMAIL, uint32, "Indicates if the email is a draft or has really been posted"
rambler_webmail, Rambler webmail, action, actionQ_PROTO_RAMBLER_WEBMAIL, bytes, "Indicates if the message is read (Read) or composed (Compose)."
rambler_webmail, Rambler webmail, msglist_date, msglist_dateQ_PROTO_RAMBLER_WEBMAIL, bytes, "Message date in a message list."
rambler_webmail, Rambler webmail, msglist_attach, msglist_attachQ_PROTO_RAMBLER_WEBMAIL, uint32, "Indicates if the message contains an attachment."
rambler_webmail, Rambler webmail, msglist_subject, msglist_subjectQ_PROTO_RAMBLER_WEBMAIL, bytes, "Message subject in a message list."
rambler_webmail, Rambler webmail, msglist_msgid, msglist_msgidQ_PROTO_RAMBLER_WEBMAIL, bytes, "Message identifier."
rambler_webmail, Rambler webmail, msglist_unread, msglist_unreadQ_PROTO_RAMBLER_WEBMAIL, uint32, "Indicates if the message has been read."
rambler_webmail, Rambler webmail, msglist_importance, msglist_importanceQ_PROTO_RAMBLER_WEBMAIL, uint32, "Indicates if the message has been marked by the user."
rambler_webmail, Rambler webmail, msglist_folder, msglist_folderQ_PROTO_RAMBLER_WEBMAIL, bytes, "Indicates the directory from a message list."
rambler_webmail, Rambler webmail, attach_size, attach_sizeQ_PROTO_RAMBLER_WEBMAIL, uint32, "Attached file MIME size."
rambler_webmail, Rambler webmail, folderlist_item_name, folderlist_item_nameQ_PROTO_RAMBLER_WEBMAIL, bytes, "Message folder name."
rambler_webmail, Rambler webmail, receiver, receiverQ_PROTO_RAMBLER_WEBMAIL, bytes, "Full address of email receiver (including cc and bcc receivers)."
rambler_webmail, Rambler webmail, receiver_alias, receiver_aliasQ_PROTO_RAMBLER_WEBMAIL, bytes, "Name of email receiver (included cc and bcc receivers)."
rambler_webmail, Rambler webmail, receiver_email, receiver_emailQ_PROTO_RAMBLER_WEBMAIL, bytes, "Email address of message receiver (included cc and bcc receivers)."
rambler_webmail, Rambler webmail, sender, senderQ_PROTO_RAMBLER_WEBMAIL, bytes, "Full address of email sender (alias followed by email address)."
rambler_webmail, Rambler webmail, sender_alias, sender_aliasQ_PROTO_RAMBLER_WEBMAIL, bytes, "Name of the email sender."
rambler_webmail, Rambler webmail, sender_email, sender_emailQ_PROTO_RAMBLER_WEBMAIL, bytes, "Email address of the email sender."
rambler_webmail, Rambler webmail, msglist_receiver_email, msglist_receiver_emailQ_PROTO_RAMBLER_WEBMAIL, bytes, "Email address of the email receiver."
rambler_webmail, Rambler webmail, msglist_receiver_alias, msglist_receiver_aliasQ_PROTO_RAMBLER_WEBMAIL, bytes, "Name of email receiver."
rambler_webmail, Rambler webmail, msglist_receiver, msglist_receiverQ_PROTO_RAMBLER_WEBMAIL, bytes, "Full address of email receiver in a message list."
rambler_webmail, Rambler webmail, msglist_sender_email, msglist_sender_emailQ_PROTO_RAMBLER_WEBMAIL, bytes, "Address of email sender."
rambler_webmail, Rambler webmail, msglist_sender_alias, msglist_sender_aliasQ_PROTO_RAMBLER_WEBMAIL, bytes, "Name of email sender."
rambler_webmail, Rambler webmail, msglist_sender, msglist_senderQ_PROTO_RAMBLER_WEBMAIL, bytes, "Full address of email sender (alias and email address)."
rambler_webmail, Rambler webmail, domain, domainQ_PROTO_RAMBLER_WEBMAIL, bytes, "Domain name used for the email address of the user."
rambler_webmail, Rambler webmail, login, loginQ_PROTO_RAMBLER_WEBMAIL, bytes, "User's login string."
rapidshare, RapidShare.com, action, actionQ_PROTO_RAPIDSHARE, bytes, "Indicates the action executed by the user."
rapidshare, RapidShare.com, login, loginQ_PROTO_RAPIDSHARE, bytes, "User's login string."
rapidshare, RapidShare.com, password, passwordQ_PROTO_RAPIDSHARE, bytes, "User's password string."
rapidshare, RapidShare.com, filename, filenameQ_PROTO_RAPIDSHARE, bytes, "Name of the transferred file."
rapidshare, RapidShare.com, filesize, filesizeQ_PROTO_RAPIDSHARE, uint32, "Size (byte) of the transferred file."
rapidshare, RapidShare.com, method, methodQ_PROTO_RAPIDSHARE, bytes, "HTTP method used for this action."
rapidshare, RapidShare.com, email_address, email_addressQ_PROTO_RAPIDSHARE, bytes, "User email address."
rapidshare, RapidShare.com, client_id, client_idQ_PROTO_RAPIDSHARE, bytes, "User account number."
rapidshare, RapidShare.com, download_url, download_urlQ_PROTO_RAPIDSHARE, bytes, "Downloaded file URL."
rdp, Remote Desktop Protocol (Windows Terminal Server), version, versionQ_PROTO_RDP, bytes, "RDP Version used."
rdp, Remote Desktop Protocol (Windows Terminal Server), client_build, client_buildQ_PROTO_RDP, uint32, "RDP client build."
rdp, Remote Desktop Protocol (Windows Terminal Server), desktop_width, desktop_widthQ_PROTO_RDP, uint32, "desktop width."
rdp, Remote Desktop Protocol (Windows Terminal Server), desktop_height, desktop_heightQ_PROTO_RDP, uint32, "desktop height."
rdp, Remote Desktop Protocol (Windows Terminal Server), hostname_ascii, hostname_asciiQ_PROTO_RDP, bytes, "Client hostname, in ASCII."
rdp, Remote Desktop Protocol (Windows Terminal Server), domain_ascii, domain_asciiQ_PROTO_RDP, bytes, "Client domain, in ASCII."
rdp, Remote Desktop Protocol (Windows Terminal Server), username_ascii, username_asciiQ_PROTO_RDP, bytes, "Client login, in ASCII."
rdp, Remote Desktop Protocol (Windows Terminal Server), default_username, default_usernameQ_PROTO_RDP, bytes, "User's default login, provided at RDP's client runtime."
rdp, Remote Desktop Protocol (Windows Terminal Server), encrypted, encryptedQ_PROTO_RDP, uint32, "Indicates if the traffic is encrypted with TLS or CresDDP."
rdp, Remote Desktop Protocol (Windows Terminal Server), io_channel_id, io_channel_idQ_PROTO_RDP, uint32, "IO channel ID."
rdp, Remote Desktop Protocol (Windows Terminal Server), channel_id, channel_idQ_PROTO_RDP, uint32, "Communication channel ID."
rdp, Remote Desktop Protocol (Windows Terminal Server), channel_name, channel_nameQ_PROTO_RDP, bytes, "Communication channel name (An 8-byte array containing a unique 7-character ANSI channel name and a null terminator)."
rdp, Remote Desktop Protocol (Windows Terminal Server), channel_disabled, channel_disabledQ_PROTO_RDP, uint32, "Tells whether the channel is disabled."
rdp, Remote Desktop Protocol (Windows Terminal Server), channel_encrypt_way, channel_encrypt_wayQ_PROTO_RDP, bytes, "Tells whether the channel is encrypted."
rdp, Remote Desktop Protocol (Windows Terminal Server), channel_priority, channel_priorityQ_PROTO_RDP, bytes, "Channel priority."
redhat_update, RedHat Update, kernel_name, kernel_nameQ_PROTO_REDHAT_UPDATE, bytes, "Kernel package or package linked to the kernel."
redhat_update, RedHat Update, kernel_version, kernel_versionQ_PROTO_REDHAT_UPDATE, bytes, "Version number of the kernel package."
redhat_update, RedHat Update, kernel_archi, kernel_archiQ_PROTO_REDHAT_UPDATE, bytes, "Archi of package kernel."
redhat_update, RedHat Update, kernel_distrib, kernel_distribQ_PROTO_REDHAT_UPDATE, bytes, "Distrib linked to this kernel package."
redhat_update, RedHat Update, package_name, package_nameQ_PROTO_REDHAT_UPDATE, bytes, "Name of the downloaded package."
redhat_update, RedHat Update, package_version, package_versionQ_PROTO_REDHAT_UPDATE, bytes, "Version number of the downloaded package."
redhat_update, RedHat Update, package_archi, package_archiQ_PROTO_REDHAT_UPDATE, bytes, "Archi of package."
redhat_update, RedHat Update, package_distrib, package_distribQ_PROTO_REDHAT_UPDATE, bytes, "Distrib linked to this package."
rip2, Routing Information Protocol V2, ip_addr, ip_addrQ_PROTO_RIP2, string, "IP address of a router."
rip2, Routing Information Protocol V2, next_hope, next_hopeQ_PROTO_RIP2, string, "The immediate next hop IP address to which packets to the destination specified by this route entry should be forwarded."
rip2, Routing Information Protocol V2, netmask, netmaskQ_PROTO_RIP2, string, "The Subnet Mask field contains the subnet mask which is applied to the IP address to yield the non-host portion of the address."
rip2, Routing Information Protocol V2, metric, metricQ_PROTO_RIP2, uint32, "Total distance to a router."
rip2, Routing Information Protocol V2, authentication, authenticationQ_PROTO_RIP2, bytes, "Authentication content (password for example)."
rlogin, Remote Login, client_login, client_loginQ_PROTO_RLOGIN, bytes, "Name of the client host."
rlogin, Remote Login, server_login, server_loginQ_PROTO_RLOGIN, bytes, "User login."
rlogin, Remote Login, server_password, server_passwordQ_PROTO_RLOGIN, bytes, "User password."
rlogin, Remote Login, term_type, term_typeQ_PROTO_RLOGIN, bytes, "Terminal type used to establish the remote session."
rlogin, Remote Login, speed, speedQ_PROTO_RLOGIN, uint32, "Connection speed."
rpc, Remote Procedure Call, program, programQ_PROTO_RPC, uint32, "Program Identifier."
rpc, Remote Procedure Call, version, versionQ_PROTO_RPC, uint32, "Version of the RPC protocol."
rpc, Remote Procedure Call, program_version, program_versionQ_PROTO_RPC, uint32, "Version of the used program over RPC."
rpc, Remote Procedure Call, procedure, procedureQ_PROTO_RPC, uint32, "Contains the request used by the application program (NFS, YelloPages, ...)."
rpc, Remote Procedure Call, state, stateQ_PROTO_RPC, uint32, "Status of the command response."
rpc, Remote Procedure Call, xid, xidQ_PROTO_RPC, uint32, "Identifier of the request or the reply."
rpc, Remote Procedure Call, message_type, message_typeQ_PROTO_RPC, bytes, "Message type (Call or Reply)."
rsh, Remote Shell, login, loginQ_PROTO_RSH, bytes, "User's login string."
rsh, Remote Shell, remote_login, remote_loginQ_PROTO_RSH, bytes, "(Deprecated) User login on the remote server."
rsh, Remote Shell, server, serverQ_PROTO_RSH, bytes, "Remote server."
rsync, Remote synchronous (file transfer), module, moduleQ_PROTO_RSYNC, bytes, "Name of the group in which files are gathered."
rsync, Remote synchronous (file transfer), login, loginQ_PROTO_RSYNC, bytes, "User's login string."
rsync, Remote synchronous (file transfer), password, passwordQ_PROTO_RSYNC, bytes, "User's password string."
rtcp, Real Time Control Protocol, cname, cnameQ_PROTO_RTCP, bytes, "User name."
rtcp, Real Time Control Protocol, name, nameQ_PROTO_RTCP, bytes, "Complete user name."
rtcp, Real Time Control Protocol, email, emailQ_PROTO_RTCP, bytes, "User's email address."
rtcp, Real Time Control Protocol, phone, phoneQ_PROTO_RTCP, bytes, "User's phone number."
rtcp, Real Time Control Protocol, loc, locQ_PROTO_RTCP, bytes, "User's location."
rtcp, Real Time Control Protocol, tool, toolQ_PROTO_RTCP, bytes, "Client's software."
rtcp, Real Time Control Protocol, note, noteQ_PROTO_RTCP, bytes, "User's comments."
rtcp, Real Time Control Protocol, ssrc, ssrcQ_PROTO_RTCP, uint32, "Identity of the Synchronization source"
rtcp, Real Time Control Protocol, rr_pkt_sender_ssrc, rr_pkt_sender_ssrcQ_PROTO_RTCP, uint32, "The synchronization source identifier for the originator of this Receiver Report packet."
rtcp, Real Time Control Protocol, rr_jitter, rr_jitterQ_PROTO_RTCP, uint32, "Jitter value (in receiver report)."
rtcp, Real Time Control Protocol, rr_cumlost, rr_cumlostQ_PROTO_RTCP, uint32, "Contains the cumulative number of lost packets (in receiver reports)."
rtcp, Real Time Control Protocol, rr_ssrc_id, rr_ssrc_idQ_PROTO_RTCP, uint32, "Identity of the source that sent the receiver report."
rtcp, Real Time Control Protocol, rr_highestseqnum, rr_highestseqnumQ_PROTO_RTCP, uint32, "highest sequence number received in an RTP data packet from source SSRC_n"
rtcp, Real Time Control Protocol, rr_lsr, rr_lsrQ_PROTO_RTCP, uint32, "The middle 32 bits out of 64 in the NTP timestamp"
rtcp, Real Time Control Protocol, rr_dlsr, rr_dlsrQ_PROTO_RTCP, uint32, "The delay between receiving the last RR packet from source n and sending reception report block."
rtcp, Real Time Control Protocol, sr_pkt_sender_ssrc, sr_pkt_sender_ssrcQ_PROTO_RTCP, uint32, "The synchronization source identifier for the originator of this Sender Report packet."
rtcp, Real Time Control Protocol, sr_ntp_ts_msw, sr_ntp_ts_mswQ_PROTO_RTCP, uint32, "NTP timestamp, most significant word"
rtcp, Real Time Control Protocol, sr_ntp_ts_lsw, sr_ntp_ts_lswQ_PROTO_RTCP, uint32, "NTP timestamp, least significant word"
rtcp, Real Time Control Protocol, sr_rtp_ts, sr_rtp_tsQ_PROTO_RTCP, uint32, "RTP timestamp"
rtcp, Real Time Control Protocol, sr_pkt_count, sr_pkt_countQ_PROTO_RTCP, uint32, "The total number of RTP data packets transmitted by the sender"
rtcp, Real Time Control Protocol, sr_octet_count, sr_octet_countQ_PROTO_RTCP, uint32, "The total number of payload octets transmitted in RTP"
rtcp, Real Time Control Protocol, sr_ssrc_id, sr_ssrc_idQ_PROTO_RTCP, uint32, "The SSRC identifier of the source"
rtcp, Real Time Control Protocol, sr_cumlost, sr_cumlostQ_PROTO_RTCP, uint32, ">Contains the cumulative number of lost packets (in sender reports)."
rtcp, Real Time Control Protocol, sr_highestseqnum, sr_highestseqnumQ_PROTO_RTCP, uint32, "highest sequence number received in an RTP data packet from source SSRC_n"
rtcp, Real Time Control Protocol, sr_jitter, sr_jitterQ_PROTO_RTCP, uint32, "Jitter value (in Sender report)."
rtcp, Real Time Control Protocol, sr_lsr, sr_lsrQ_PROTO_RTCP, uint32, "The middle 32 bits out of 64 in the NTP timestamp"
rtcp, Real Time Control Protocol, sr_dlsr, sr_dlsrQ_PROTO_RTCP, uint32, "The delay between receiving the last SR packet from source n and sending reception report block."
rtmp, Real Time Messaging Protocol, page_url, page_urlQ_PROTO_RTMP, bytes, "URL of the webpage where the audio/video content is streamed."
rtmp, Real Time Messaging Protocol, stream_url, stream_urlQ_PROTO_RTMP, bytes, "URL of the streamed audio/video."
rtmp, Real Time Messaging Protocol, app_name, app_nameQ_PROTO_RTMP, bytes, "Name of the application accessing the streamed content."
rtmp, Real Time Messaging Protocol, start_time, start_timeQ_PROTO_RTMP, uint32, "The timestamp of the beginning of the streamed audio/video (in ms)."
rtmp, Real Time Messaging Protocol, stop_time, stop_timeQ_PROTO_RTMP, uint32, "The timestamp of the end of the streamed audio/video (in ms)."
rtmp, Real Time Messaging Protocol, encryption, encryptionQ_PROTO_RTMP, bytes, "Name of the encryption used."
rtp, Real Time Protocol, codec_name, codec_nameQ_PROTO_RTP, bytes, "Name of the codec."
rtp, Real Time Protocol, unseq, unseqQ_PROTO_RTP, uint32, "Contains the number of miss ordered packets (use sum)."
rtp, Real Time Protocol, mos, mosQ_PROTO_RTP, uint32, "Standard voice quality indicator (Mean Opinion Score). This attribute is deprecated."
rtp, Real Time Protocol, ssrc, ssrcQ_PROTO_RTP, uint32, "Identity of the Synchronization source"
rtp, Real Time Protocol, timestamp, timestampQ_PROTO_RTP, uint32, "RTP packet timestamp."
rtp, Real Time Protocol, mos_session, mos_sessionQ_PROTO_RTP, uint32, "Standard voice quality indicator, multiplied by 1000. The following codecs are supported: PCMU, GSM(GSM-FR), G723, PCMA, G729, EVRC, EVRCB, AMR-WB."
rtp, Real Time Protocol, rfactor, rfactorQ_PROTO_RTP, uint32, "Rfactor value, following the ITU G.107 calculation method, multiplied by 1000. The following codecs are supported: PCMU, GSM(GSM-FR), G723, PCMA, G729, EVRC, EVRCB, AMR-WB."
rtp, Real Time Protocol, mos_satellite, mos_satelliteQ_PROTO_RTP, uint32, "Standard voice quality indicator for satellite (Mean Opinion Score). This attribute is deprecated."
rtp, Real Time Protocol, session_duration, session_durationQ_PROTO_RTP, string, "Call setup duration."
rtsp, Real Time Streaming Protocol, user_agent, user_agentQ_PROTO_RTSP, bytes, "Client's software."
rtsp, Real Time Streaming Protocol, filename, filenameQ_PROTO_RTSP, bytes, "Name of the streamed file."
rtsp, Real Time Streaming Protocol, method, methodQ_PROTO_RTSP, bytes, "RTSP command sent by the client."
rtsp, Real Time Streaming Protocol, server_agent, server_agentQ_PROTO_RTSP, bytes, "Name of the server software."
rtsp, Real Time Streaming Protocol, server, serverQ_PROTO_RTSP, bytes, "Name of the streaming server."
rtsp, Real Time Streaming Protocol, directory, directoryQ_PROTO_RTSP, bytes, "File directory."
rtsp, Real Time Streaming Protocol, code, codeQ_PROTO_RTSP, uint32, "Server return code."
rtsp, Real Time Streaming Protocol, uri, uriQ_PROTO_RTSP, bytes, "Complete name (path + filename) of a web resource (truncated at 1503 characters)."
rtsp, Real Time Streaming Protocol, uri_start_offset, uri_start_offsetQ_PROTO_RTSP, uint32, "Offset to the first URI byte in the stream."
rtsp, Real Time Streaming Protocol, uri_end_offset, uri_end_offsetQ_PROTO_RTSP, uint32, "Offset to the first byte which is not part of the URI in the stream."
rtsp, Real Time Streaming Protocol, urilast64, urilast64Q_PROTO_RTSP, bytes, "uri last 64 characters of the uri."
rtsp, Real Time Streaming Protocol, urilen, urilenQ_PROTO_RTSP, uint32, "uri length."
rtsp, Real Time Streaming Protocol, uri_full, uri_fullQ_PROTO_RTSP, bytes, "Complete name (path + filename) of a web resource (not truncated)."
rtsp, Real Time Streaming Protocol, header_name, header_nameQ_PROTO_RTSP, bytes, "One RTSP header line (field)."
rtsp, Real Time Streaming Protocol, header_value, header_valueQ_PROTO_RTSP, bytes, "One RTSP header line (value)."
rtsp, Real Time Streaming Protocol, header_statusline, header_statuslineQ_PROTO_RTSP, bytes, "The status line, just before the header lines."
rtsp, Real Time Streaming Protocol, version, versionQ_PROTO_RTSP, bytes, "Protocol version."
rtsp, Real Time Streaming Protocol, cseq, cseqQ_PROTO_RTSP, bytes, "Sequence number."
rtsp, Real Time Streaming Protocol, start_time, start_timeQ_PROTO_RTSP, string, "Start date of the call."
rtsp, Real Time Streaming Protocol, session_duration, session_durationQ_PROTO_RTSP, string, "Call setup duration."
rtsp, Real Time Streaming Protocol, media_attr_value, media_attr_valueQ_PROTO_RTSP, bytes, "Line value of the media attribute."
rtsp, Real Time Streaming Protocol, media_attr_type, media_attr_typeQ_PROTO_RTSP, uint32, "Contains the media type (audio or video)."
rtsp, Real Time Streaming Protocol, media_attr_encoding, media_attr_encodingQ_PROTO_RTSP, bytes, "The encoding of media data."
rtsp, Real Time Streaming Protocol, media_attr_rate, media_attr_rateQ_PROTO_RTSP, bytes, "The encoding rate."
rtsp, Real Time Streaming Protocol, media_attr_param, media_attr_paramQ_PROTO_RTSP, bytes, "Session attribute value."
rtsp, Real Time Streaming Protocol, media_attr_label, media_attr_labelQ_PROTO_RTSP, bytes, "Name of the described session attribute."
rtsp, Real Time Streaming Protocol, media_attr_addr, media_attr_addrQ_PROTO_RTSP, string, "The mentioned IPv4 address to be used."
rtsp, Real Time Streaming Protocol, media_attr_channel, media_attr_channelQ_PROTO_RTSP, bytes, "The channel value."
rtsp, Real Time Streaming Protocol, media_attr_transport, media_attr_transportQ_PROTO_RTSP, bytes, "The transport protocol (TCP or UDP)."
rtsp, Real Time Streaming Protocol, media_type, media_typeQ_PROTO_RTSP, bytes, "Contains the media type."
rtsp, Real Time Streaming Protocol, media_proto, media_protoQ_PROTO_RTSP, bytes, "Protocol used in client stream."
rtsp, Real Time Streaming Protocol, media_format, media_formatQ_PROTO_RTSP, uint32, "Client's protocol formats available."
s1ap, S1 Application Protocol, ep_name, ep_nameQ_PROTO_S1AP, bytes, "Elementary Procedure name."
s1ap, S1 Application Protocol, ep_mme_ue_id, ep_mme_ue_idQ_PROTO_S1AP, uint32, "Mobility Management Entity Identifier (MME UE S1AP ID)."
s1ap, S1 Application Protocol, ep_enb_ue_id, ep_enb_ue_idQ_PROTO_S1AP, uint32, "E-UTRAN NodeB Identifier (eNB UE S1AP ID)."
s1ap, S1 Application Protocol, ep_ie_name, ep_ie_nameQ_PROTO_S1AP, bytes, "Information Element name."
s1ap, S1 Application Protocol, ep_ie_rab_addr, ep_ie_rab_addrQ_PROTO_S1AP, string, "Transport Layer Address (IPv4)."
s1ap, S1 Application Protocol, ep_ie_rab_teid, ep_ie_rab_teidQ_PROTO_S1AP, bytes, "GTP Tunnel Endpoint Identifier (GTP-TEID)."
s1ap, S1 Application Protocol, ep_ie_tai, ep_ie_taiQ_PROTO_S1AP, bytes, "Tracking Area Identifier (TAI)."
s1ap, S1 Application Protocol, ep_ie_cgi, ep_ie_cgiQ_PROTO_S1AP, bytes, "E-UTRAN Cell Global Identifier (E-UTRAN CGI)."
samsung_apps, Samsung Apps, is_smartphone, is_smartphoneQ_PROTO_SAMSUNG_APPS, uint32, "Boolean attribute indicating whether the client is a smartphone(1) or not(0)."
sccp, Skinny Client Control Protocol, message_type, message_typeQ_PROTO_SCCP, uint32, "The type of the message."
sccp, Skinny Client Control Protocol, call_id, call_idQ_PROTO_SCCP, uint32, "Call id, extracted for each call."
sccp, Skinny Client Control Protocol, caller, callerQ_PROTO_SCCP, bytes, "Contains the identity (or the phone number) of the initiator of the call."
sccp, Skinny Client Control Protocol, callee, calleeQ_PROTO_SCCP, bytes, "Contains the identity (or the phone number) of the called party for a call."
sccp, Skinny Client Control Protocol, callername, callernameQ_PROTO_SCCP, bytes, "Calling party identity"
sccp, Skinny Client Control Protocol, calleename, calleenameQ_PROTO_SCCP, bytes, "Called party identity"
sccp, Skinny Client Control Protocol, device_type, device_typeQ_PROTO_SCCP, uint32, "Device type"
sccp, Skinny Client Control Protocol, device_name, device_nameQ_PROTO_SCCP, bytes, "Device name"
sccp, Skinny Client Control Protocol, call_way, call_wayQ_PROTO_SCCP, uint32, "The call Way (In, Out)"
sccp, Skinny Client Control Protocol, start_time, start_timeQ_PROTO_SCCP, string, "Start date of the call."
sccp, Skinny Client Control Protocol, call_duration, call_durationQ_PROTO_SCCP, string, "Call duration."
sccp, Skinny Client Control Protocol, callstate, callstateQ_PROTO_SCCP, uint32, "Status of the current call"
sccp, Skinny Client Control Protocol, nb_pkt_sent, nb_pkt_sentQ_PROTO_SCCP, uint32, "Number of RTP packets sent"
sccp, Skinny Client Control Protocol, nb_pkt_rcv, nb_pkt_rcvQ_PROTO_SCCP, uint32, "Number of RTP packets received"
sccp, Skinny Client Control Protocol, nb_byt_sent, nb_byt_sentQ_PROTO_SCCP, uint32, "Number of RTP octets sent"
sccp, Skinny Client Control Protocol, nb_byt_rcv, nb_byt_rcvQ_PROTO_SCCP, uint32, "Number of RTP octets received"
sccp, Skinny Client Control Protocol, nb_pkt_lost, nb_pkt_lostQ_PROTO_SCCP, uint32, "Number of RTP packets lost"
sccp, Skinny Client Control Protocol, stats_jitter, stats_jitterQ_PROTO_SCCP, uint32, "Observed Jitter for RTP packets"
sccp, Skinny Client Control Protocol, stats_latency, stats_latencyQ_PROTO_SCCP, uint32, "Observed latency for RTP packets"
sccp, Skinny Client Control Protocol, keypad, keypadQ_PROTO_SCCP, uint32, "Contains the key pressed on the handset"
sccp, Skinny Client Control Protocol, codec, codecQ_PROTO_SCCP, uint32, "The codec used in the RTP session"
sccp, Skinny Client Control Protocol, softkeyevent, softkeyeventQ_PROTO_SCCP, uint32, "Contains the soft key event"
sctp, Stream Control Transmission Protocol, chunk_data_tsn, chunk_data_tsnQ_PROTO_SCTP, uint32, "The Transmission Sequence Number is a global sequence number of chunks."
sctp, Stream Control Transmission Protocol, chunk_data_proto, chunk_data_protoQ_PROTO_SCTP, uint32, "Indicating the data type (or protocol) containing in the chunk."
secondlife, SecondLife.com, login, loginQ_PROTO_SECONDLIFE, bytes, "User's login string."
secondlife, SecondLife.com, message, messageQ_PROTO_SECONDLIFE, bytes, "Content of chat message."
secondlife, SecondLife.com, message_type, message_typeQ_PROTO_SECONDLIFE, bytes, "Message type."
secondlife, SecondLife.com, source_name, source_nameQ_PROTO_SECONDLIFE, bytes, "Source name."
secondlife, SecondLife.com, source_type, source_typeQ_PROTO_SECONDLIFE, bytes, "Source type."
secondlife, SecondLife.com, chat_type, chat_typeQ_PROTO_SECONDLIFE, bytes, "Chat message type."
silverlight, Silverlight (Microsoft Smooth Streaming), video_datarate, video_datarateQ_PROTO_SILVERLIGHT, bytes, "Video bitrate in kilobits per second."
sip, Session Initiation Protocol, method, methodQ_PROTO_SIP, bytes, "The command"
sip, Session Initiation Protocol, uri, uriQ_PROTO_SIP, bytes, "Contains the URI (similar to To: field)"
sip, Session Initiation Protocol, expires, expiresQ_PROTO_SIP, uint32, "Time in seconds after which the message expires."
sip, Session Initiation Protocol, reply_code, reply_codeQ_PROTO_SIP, bytes, "Return status code."
sip, Session Initiation Protocol, mime_type, mime_typeQ_PROTO_SIP, bytes, "Data type."
sip, Session Initiation Protocol, user_agent, user_agentQ_PROTO_SIP, bytes, "Client's software."
sip, Session Initiation Protocol, request_call_id, request_call_idQ_PROTO_SIP, bytes, "Call's id extracted for each sip request."
sip, Session Initiation Protocol, server_agent, server_agentQ_PROTO_SIP, bytes, "Server's software."
sip, Session Initiation Protocol, cseq, cseqQ_PROTO_SIP, bytes, "Sequence number"
sip, Session Initiation Protocol, via, viaQ_PROTO_SIP, bytes, "The Via header field indicates the transport used for the transaction and identifies the location where the response is to be sent"
sip, Session Initiation Protocol, contact, contactQ_PROTO_SIP, bytes, "The Contact header field provides a SIP or SIPS URI that can be used to contact that specific instance of the UA for subsequent requests"
sip, Session Initiation Protocol, record_route, record_routeQ_PROTO_SIP, bytes, "The Record-Route header field is inserted by proxies in a request to force future requests in the dialog to be routed through the proxy"
sip, Session Initiation Protocol, p_asserted_id, p_asserted_idQ_PROTO_SIP, bytes, "Indicates the identity of the trusted SIP server"
sip, Session Initiation Protocol, remote_party_id, remote_party_idQ_PROTO_SIP, bytes, "The IP address of the remote party."
sip, Session Initiation Protocol, reason, reasonQ_PROTO_SIP, bytes, "The reason a Session Initiation Protocol request was issued."
sip, Session Initiation Protocol, from, fromQ_PROTO_SIP, bytes, "The initiator of the request."
sip, Session Initiation Protocol, to, toQ_PROTO_SIP, bytes, "The recipient of the request."
sip, Session Initiation Protocol, subject, subjectQ_PROTO_SIP, bytes, "the subject header present in the SIP packet"
sip, Session Initiation Protocol, caller_domain, caller_domainQ_PROTO_SIP, bytes, "Caller's domain"
sip, Session Initiation Protocol, callee_domain, callee_domainQ_PROTO_SIP, bytes, "Callee's domain"
sip, Session Initiation Protocol, date, dateQ_PROTO_SIP, bytes, "Contains the date and time."
sip, Session Initiation Protocol, proxy_authorization, proxy_authorizationQ_PROTO_SIP, bytes, "allows the client to identify itself (or its user) to a proxy that requires authentication"
sip, Session Initiation Protocol, www_authenticate, www_authenticateQ_PROTO_SIP, bytes, "Contains an authentication challenge."
sip, Session Initiation Protocol, authorization_username, authorization_usernameQ_PROTO_SIP, bytes, "User's name as specified in the Authorization SIP header."
sip, Session Initiation Protocol, alert_info, alert_infoQ_PROTO_SIP, bytes, "Specifies an alternative ring tone."
sip, Session Initiation Protocol, call_info, call_infoQ_PROTO_SIP, bytes, "Provides additional information about the caller or callee."
sip, Session Initiation Protocol, accept_language, accept_languageQ_PROTO_SIP, bytes, "Indicates the preferred languages."
sip, Session Initiation Protocol, call_id, call_idQ_PROTO_SIP, bytes, "Call id, extracted for each call."
sip, Session Initiation Protocol, start_time, start_timeQ_PROTO_SIP, string, "Start date of the call."
sip, Session Initiation Protocol, time_before_spk, time_before_spkQ_PROTO_SIP, string, "Waiting delay before speak"
sip, Session Initiation Protocol, session_duration, session_durationQ_PROTO_SIP, string, "Duration of the session, between INVITE and BYE."
sip, Session Initiation Protocol, call_duration, call_durationQ_PROTO_SIP, string, "Call duration."
sip, Session Initiation Protocol, setup_delay, setup_delayQ_PROTO_SIP, string, "Call setup delay."
sip, Session Initiation Protocol, caller, callerQ_PROTO_SIP, bytes, "Contains the identity (or the phone number) of the initiator of the call."
sip, Session Initiation Protocol, caller_e164, caller_e164Q_PROTO_SIP, bytes, "Format of the caller's telephone numbers"
sip, Session Initiation Protocol, callee, calleeQ_PROTO_SIP, bytes, "Contains the identity (or the phone number) of the called party for a call."
sip, Session Initiation Protocol, callee_e164, callee_e164Q_PROTO_SIP, bytes, "Format of the callee's telephone numbers"
sip, Session Initiation Protocol, caller_nickname, caller_nicknameQ_PROTO_SIP, bytes, "the caller nickname"
sip, Session Initiation Protocol, callee_nickname, callee_nicknameQ_PROTO_SIP, bytes, "the callee nickname"
sip, Session Initiation Protocol, confcall_caller, confcall_callerQ_PROTO_SIP, bytes, "Caller's name, in a confcall."
sip, Session Initiation Protocol, confcall_callee, confcall_calleeQ_PROTO_SIP, bytes, "Callee's name, in a confcall."
sip, Session Initiation Protocol, caller_user_agent, caller_user_agentQ_PROTO_SIP, bytes, "Client's software in the caller way."
sip, Session Initiation Protocol, callee_user_agent, callee_user_agentQ_PROTO_SIP, bytes, "Client's software used by the callee."
sip, Session Initiation Protocol, caller_server_agent, caller_server_agentQ_PROTO_SIP, bytes, "Server's software in the caller way."
sip, Session Initiation Protocol, callee_server_agent, callee_server_agentQ_PROTO_SIP, bytes, "Server's software in the callee way."
sip, Session Initiation Protocol, end_status, end_statusQ_PROTO_SIP, bytes, "Status of the call end"
sip, Session Initiation Protocol, caller_addr, caller_addrQ_PROTO_SIP, string, "Address which could be used by the initiator of the call."
sip, Session Initiation Protocol, callee_addr, callee_addrQ_PROTO_SIP, string, "Address which could be used by the called party."
sip, Session Initiation Protocol, connection_info_addr, connection_info_addrQ_PROTO_SIP, string, "Connection IPv4 address."
sip, Session Initiation Protocol, connection_info_addr_type, connection_info_addr_typeQ_PROTO_SIP, bytes, "Connection address type."
sip, Session Initiation Protocol, connection_info_net_type, connection_info_net_typeQ_PROTO_SIP, bytes, "Network type for the connection."
sip, Session Initiation Protocol, media_type, media_typeQ_PROTO_SIP, bytes, "Contains the media type."
sip, Session Initiation Protocol, media_proto, media_protoQ_PROTO_SIP, bytes, "Protocol used in client stream."
sip, Session Initiation Protocol, media_format, media_formatQ_PROTO_SIP, uint32, "Client's protocol formats available."
sip, Session Initiation Protocol, media_attr_type, media_attr_typeQ_PROTO_SIP, uint32, "Contains the media type (audio or video)."
sip, Session Initiation Protocol, media_attr_encoding, media_attr_encodingQ_PROTO_SIP, bytes, "The encoding of media data."
sip, Session Initiation Protocol, media_attr_rate, media_attr_rateQ_PROTO_SIP, bytes, "The encoding rate."
sip, Session Initiation Protocol, media_attr_param, media_attr_paramQ_PROTO_SIP, bytes, "Session attribute value."
sip, Session Initiation Protocol, media_attr_label, media_attr_labelQ_PROTO_SIP, bytes, "Name of the described session attribute."
sip, Session Initiation Protocol, media_attr_addr, media_attr_addrQ_PROTO_SIP, string, "The mentioned IPv4 address to be used."
sip, Session Initiation Protocol, media_attr_channel, media_attr_channelQ_PROTO_SIP, bytes, "The channel value."
sip, Session Initiation Protocol, media_attr_transport, media_attr_transportQ_PROTO_SIP, bytes, "The transport protocol (TCP or UDP)."
sip, Session Initiation Protocol, media_attr_value, media_attr_valueQ_PROTO_SIP, bytes, "Line value of the media attribute."
sip, Session Initiation Protocol, user_id, user_idQ_PROTO_SIP, bytes, "Client identifier used for his registering with a SIP server."
skyblog, Skyblog, password, passwordQ_PROTO_SKYBLOG, bytes, "User's password string."
skyblog, Skyblog, login, loginQ_PROTO_SKYBLOG, bytes, "User's login string."
skype, Skype, version, versionQ_PROTO_SKYPE, bytes, "Skype client version."
skype, Skype, service_stats, service_statsQ_PROTO_SKYPE, bytes, "Composite attribute containing the packet metrics used for each new service type detection, extracting when performing STATISCAL detection method only. Note: this attribute won't be extracted in case of session expiration (eg. when the current service is not ended properly by the user)."
skype, Skype, service, serviceQ_PROTO_SKYPE, bytes, "Current service identification string."
skype, Skype, service_id, service_idQ_PROTO_SKYPE, uint32, "Composite 32-bit integer value defining the service currently used. The first byte (LSB) gives the generic service definition, the second byte gives an advanced service definition for specific cases (example: File Transfer)."
skype, Skype, service_duration, service_durationQ_PROTO_SKYPE, uint32, "4 bytes integer value indicating, when the service is ended, the length of it in seconds"
skype, Skype, service_duration_tv, service_duration_tvQ_PROTO_SKYPE, string, "Timeval structure indicating, when the service is ended, the length of it in second and microseconds."
slsk, SoulSeek, query, queryQ_PROTO_SLSK, bytes, "Query sent to find a file."
slsk, SoulSeek, version, versionQ_PROTO_SLSK, uint32, "Current version of the Soulseek client."
slsk, SoulSeek, filename, filenameQ_PROTO_SLSK, bytes, "Name of the transferred file."
slsk, SoulSeek, filesize, filesizeQ_PROTO_SLSK, uint32, "Size (byte) of the transferred file."
slsk, SoulSeek, file_id, file_idQ_PROTO_SLSK, uint64, "Unique identifier of a file, based on IP of peer and the unique token for this combination file/peer."
slsk, SoulSeek, transfer_way, transfer_wayQ_PROTO_SLSK, bytes, "Indicates whether the file is uploaded or downloaded."
slsk, SoulSeek, password, passwordQ_PROTO_SLSK, bytes, "User's password string."
slsk, SoulSeek, login, loginQ_PROTO_SLSK, bytes, "User's login string."
smb, Server Message Block (Windows File Server), login, loginQ_PROTO_SMB, bytes, "User's login string."
smb, Server Message Block (Windows File Server), service, serviceQ_PROTO_SMB, bytes, "Current service identification string."
smb, Server Message Block (Windows File Server), file_chunk_data_offset, file_chunk_data_offsetQ_PROTO_SMB, uint64, "Offset of the transferred data."
smb, Server Message Block (Windows File Server), file_chunk_len, file_chunk_lenQ_PROTO_SMB, uint32, "Size of the transferred piece."
smb, Server Message Block (Windows File Server), end_of_file, end_of_fileQ_PROTO_SMB, uint64, "The end of file offset value."
smb, Server Message Block (Windows File Server), file_attributes, file_attributesQ_PROTO_SMB, uint32, "File attributes (bit field)."
smb, Server Message Block (Windows File Server), user_id, user_idQ_PROTO_SMB, uint32, "User identifier (SMB usmb_v1 only)."
smb, Server Message Block (Windows File Server), process_id, process_idQ_PROTO_SMB, uint32, "Identifier of the process being affected by the following command."
smb, Server Message Block (Windows File Server), nt_status, nt_statusQ_PROTO_SMB, uint32, "NT error code."
smb, Server Message Block (Windows File Server), directory, directoryQ_PROTO_SMB, bytes, "(deprecated) Name of the shared directory on the server host."
smb, Server Message Block (Windows File Server), path, pathQ_PROTO_SMB, bytes, "The server/share name of the resource to which the client attempts to connect."
smb, Server Message Block (Windows File Server), domain, domainQ_PROTO_SMB, bytes, "Domain name."
smb, Server Message Block (Windows File Server), host, hostQ_PROTO_SMB, bytes, "Server name (NTLMSSP)."
smb, Server Message Block (Windows File Server), native_os, native_osQ_PROTO_SMB, bytes, "Client's operating system."
smb, Server Message Block (Windows File Server), native_lan_manager, native_lan_managerQ_PROTO_SMB, bytes, "The native LAN manager type."
smb, Server Message Block (Windows File Server), command_string, command_stringQ_PROTO_SMB, bytes, "Command name."
smb, Server Message Block (Windows File Server), loadway, loadwayQ_PROTO_SMB, bytes, "Contains the file transfer way (Upload vs Download)."
smb, Server Message Block (Windows File Server), version, versionQ_PROTO_SMB, uint32, "Protocol version."
smb, Server Message Block (Windows File Server), query_id, query_idQ_PROTO_SMB, uint64, "Indexes and correlates requests and responses."
smb, Server Message Block (Windows File Server), security_blob_len, security_blob_lenQ_PROTO_SMB, uint32, "Security blob data length."
smb, Server Message Block (Windows File Server), search_attributes, search_attributesQ_PROTO_SMB, uint32, "An attribute mask used to specify the standard attributes a file MUST have in order to match the search."
smb, Server Message Block (Windows File Server), search_storage_type, search_storage_typeQ_PROTO_SMB, uint32, "Specify the search type (directory or file)."
smb, Server Message Block (Windows File Server), search_pattern, search_patternQ_PROTO_SMB, bytes, "The file pattern to search for."
smb, Server Message Block (Windows File Server), dialect, dialectQ_PROTO_SMB, bytes, "The version of the SMB Protocol."
smb, Server Message Block (Windows File Server), filename, filenameQ_PROTO_SMB, bytes, "Name of the transferred file."
smb, Server Message Block (Windows File Server), filesize, filesizeQ_PROTO_SMB, uint64, "Size (byte) of the transferred file."
smb, Server Message Block (Windows File Server), attributes, attributesQ_PROTO_SMB, uint32, "File attributes/folder (bit field)."
smb, Server Message Block (Windows File Server), ext_attributes, ext_attributesQ_PROTO_SMB, uint32, "(deprecated) Extended File attributes/folder (bit field)."
smpp, Short message peer-to-peer protocol, sender, senderQ_PROTO_SMPP, bytes, "Sender's address."
smpp, Short message peer-to-peer protocol, receiver, receiverQ_PROTO_SMPP, bytes, "Receiver's address."
smtp, Simple Mail Transfer Protocol, end, endQ_PROTO_SMTP, Void, "Indicates the end of a top level event."
smtp, Simple Mail Transfer Protocol, login, loginQ_PROTO_SMTP, bytes, "User's login string."
smtp, Simple Mail Transfer Protocol, password, passwordQ_PROTO_SMTP, bytes, "User's password string."
smtp, Simple Mail Transfer Protocol, email, emailQ_PROTO_SMTP, bool, "Parent entry, for fields belonging to the same email."
smtp, Simple Mail Transfer Protocol, sender_entry, sender_entryQ_PROTO_SMTP, bool, "Parent entry, for different elements belonging to the sender."
smtp, Simple Mail Transfer Protocol, sender, senderQ_PROTO_SMTP, bytes, "Full address of email sender (alias followed by email address)."
smtp, Simple Mail Transfer Protocol, sender_alias, sender_aliasQ_PROTO_SMTP, bytes, "Name of the email sender."
smtp, Simple Mail Transfer Protocol, sender_email, sender_emailQ_PROTO_SMTP, bytes, "Email address of the email sender."
smtp, Simple Mail Transfer Protocol, mailfrom, mailfromQ_PROTO_SMTP, bool, "Contains the domain and the sender's email"
smtp, Simple Mail Transfer Protocol, sender_mailfrom, sender_mailfromQ_PROTO_SMTP, bytes, "Sender's email address (used by MAIL FROM method)."
smtp, Simple Mail Transfer Protocol, sender_domain, sender_domainQ_PROTO_SMTP, bytes, "Domain of the sender's email address."
smtp, Simple Mail Transfer Protocol, rcptto, rcpttoQ_PROTO_SMTP, bool, "Domain and recipient's email address (used by RCPT TO method)."
smtp, Simple Mail Transfer Protocol, receiver_rcptto, receiver_rcpttoQ_PROTO_SMTP, bytes, "Recipient's email address (used by RCPT TO method)."
smtp, Simple Mail Transfer Protocol, receiver_domain, receiver_domainQ_PROTO_SMTP, bytes, "Domain of the recipient's email address."
smtp, Simple Mail Transfer Protocol, header_raw, header_rawQ_PROTO_SMTP, bytes, "One SMTP header line (field and value)."
smtp, Simple Mail Transfer Protocol, receiver_entry, receiver_entryQ_PROTO_SMTP, bool, "Parent entry, for different elements belonging to the email receiver."
smtp, Simple Mail Transfer Protocol, receiver, receiverQ_PROTO_SMTP, bytes, "Full address of email receiver (including cc and bcc receivers)."
smtp, Simple Mail Transfer Protocol, receiver_alias, receiver_aliasQ_PROTO_SMTP, bytes, "Name of email receiver (included cc and bcc receivers)."
smtp, Simple Mail Transfer Protocol, receiver_email, receiver_emailQ_PROTO_SMTP, bytes, "Email address of message receiver (included cc and bcc receivers)."
smtp, Simple Mail Transfer Protocol, receiver_type, receiver_typeQ_PROTO_SMTP, bytes, "Type of the email receiver."
smtp, Simple Mail Transfer Protocol, request, requestQ_PROTO_SMTP, bool, "Parent entry, empty, for client request and server response."
smtp, Simple Mail Transfer Protocol, index, indexQ_PROTO_SMTP, bytes, "Identifier of the request and response in a flow."
smtp, Simple Mail Transfer Protocol, email_index, email_indexQ_PROTO_SMTP, bytes, "Index of the request which the email is attached to."
smtp, Simple Mail Transfer Protocol, method, methodQ_PROTO_SMTP, bytes, "Command sent by the client"
smtp, Simple Mail Transfer Protocol, response_code, response_codeQ_PROTO_SMTP, uint32, "Return code"
smtp, Simple Mail Transfer Protocol, server_response, server_responseQ_PROTO_SMTP, bytes, "The return code of the server"
smtp, Simple Mail Transfer Protocol, subject, subjectQ_PROTO_SMTP, bytes, "Message subject."
smtp, Simple Mail Transfer Protocol, date, dateQ_PROTO_SMTP, bytes, "Message date."
smtp, Simple Mail Transfer Protocol, mime_type, mime_typeQ_PROTO_SMTP, bytes, "Mail's content type."
smtp, Simple Mail Transfer Protocol, msg_id, msg_idQ_PROTO_SMTP, bytes, "Identifier of the message."
smtp, Simple Mail Transfer Protocol, user_agent, user_agentQ_PROTO_SMTP, bytes, "Name of the software used."
smtp, Simple Mail Transfer Protocol, start_time, start_timeQ_PROTO_SMTP, string, "Starting time of SMTP session"
smtp, Simple Mail Transfer Protocol, stop_time, stop_timeQ_PROTO_SMTP, string, "Ending time of SMTP session"
smtp, Simple Mail Transfer Protocol, duration, durationQ_PROTO_SMTP, string, "Duration of the SMTP session"
smtp, Simple Mail Transfer Protocol, attach, attachQ_PROTO_SMTP, bool, "Parent entry, for attach fields in a message."
smtp, Simple Mail Transfer Protocol, attach_type, attach_typeQ_PROTO_SMTP, bytes, "Content type of the sent attached file."
smtp, Simple Mail Transfer Protocol, file_type, file_typeQ_PROTO_SMTP, bytes, "Received or sent file content type (prefix-based pattern recognition) exchanged using this protocol."
smtp, Simple Mail Transfer Protocol, attach_size, attach_sizeQ_PROTO_SMTP, uint32, "Attached file MIME size."
smtp, Simple Mail Transfer Protocol, attach_disposition, attach_dispositionQ_PROTO_SMTP, bytes, "Attached file disposition"
smtp, Simple Mail Transfer Protocol, attach_filename, attach_filenameQ_PROTO_SMTP, bytes, "Attachment name."
smtp, Simple Mail Transfer Protocol, attach_content_decoded, attach_content_decodedQ_PROTO_SMTP, buffer, "Decoded attached files content."
smtp, Simple Mail Transfer Protocol, attach_transfer_encoding, attach_transfer_encodingQ_PROTO_SMTP, bytes, "Contains the encoding of the attached content"
smtp, Simple Mail Transfer Protocol, server, serverQ_PROTO_SMTP, bytes, "Contains the name of the used smtp server"
smtp, Simple Mail Transfer Protocol, server_agent, server_agentQ_PROTO_SMTP, bytes, "The software name used by the email server"
smtp, Simple Mail Transfer Protocol, greeting_message, greeting_messageQ_PROTO_SMTP, bytes, "Contains the greeting message of the server when connection is established"
smtp, Simple Mail Transfer Protocol, replyto, replytoQ_PROTO_SMTP, bytes, "Email address to use in a reply for this message."
smtp, Simple Mail Transfer Protocol, received, receivedQ_PROTO_SMTP, bool, "Parent entry, for fields added by each relay"
smtp, Simple Mail Transfer Protocol, received_from_name, received_from_nameQ_PROTO_SMTP, bytes, "Contains the sending host name"
smtp, Simple Mail Transfer Protocol, received_from_ip, received_from_ipQ_PROTO_SMTP, string, "Contains the IP address of the sending host name"
smtp, Simple Mail Transfer Protocol, received_by_name, received_by_nameQ_PROTO_SMTP, bytes, "Contains the receiving host name"
smtp, Simple Mail Transfer Protocol, received_by_ip, received_by_ipQ_PROTO_SMTP, string, "Contains the IP address of the receiving host name"
smtp, Simple Mail Transfer Protocol, received_with, received_withQ_PROTO_SMTP, bytes, "Contains the software used to send the email"
smtp, Simple Mail Transfer Protocol, received_date, received_dateQ_PROTO_SMTP, bytes, "Date when the transport service relayed the message"
smtp, Simple Mail Transfer Protocol, received_server_agent, received_server_agentQ_PROTO_SMTP, bytes, "Contains the name of the sever agent"
smtp, Simple Mail Transfer Protocol, xmailer, xmailerQ_PROTO_SMTP, bytes, "Contains the user_agent of the used mailer"
snmp, Simple Network Management Protocol, community, communityQ_PROTO_SNMP, bytes, "Community name."
snmp, Simple Network Management Protocol, method, methodQ_PROTO_SNMP, bytes, "SNMP request type."
snmp, Simple Network Management Protocol, request_id, request_idQ_PROTO_SNMP, uint32, "Request Identifier."
snmp, Simple Network Management Protocol, oid, oidQ_PROTO_SNMP, bytes, "Object Identifier."
snmp, Simple Network Management Protocol, value_type, value_typeQ_PROTO_SNMP, bytes, "Object type."
snmp, Simple Network Management Protocol, value_len, value_lenQ_PROTO_SNMP, uint32, "Size of value_raw in bytes."
snmp, Simple Network Management Protocol, name, nameQ_PROTO_SNMP, bytes, "Name the user."
snpp, Simple Network Paging Protocol, login, loginQ_PROTO_SNPP, bytes, "User's login string."
snpp, Simple Network Paging Protocol, password, passwordQ_PROTO_SNPP, bytes, "User's password string."
snpp, Simple Network Paging Protocol, method, methodQ_PROTO_SNPP, bytes, "Contains the SNPP command."
snpp, Simple Network Paging Protocol, caller_id, caller_idQ_PROTO_SNPP, bytes, "Login of person who send the message."
snpp, Simple Network Paging Protocol, message, messageQ_PROTO_SNPP, bytes, "Contains the message sent to the pager."
snpp, Simple Network Paging Protocol, pager_id, pager_idQ_PROTO_SNPP, bytes, "Contains pager number."
socks4, SOCKet Secure v4, remote_addr, remote_addrQ_PROTO_SOCKS4, string, "Remote IP address."
socks5, SOCKet Secure v5, login, loginQ_PROTO_SOCKS5, bytes, "User's login string."
socks5, SOCKet Secure v5, password, passwordQ_PROTO_SOCKS5, bytes, "User's password string."
socks5, SOCKet Secure v5, remote_addr, remote_addrQ_PROTO_SOCKS5, string, "Remote IP address."
socks5, SOCKet Secure v5, remote_name, remote_nameQ_PROTO_SOCKS5, bytes, "Fully qualified remote domain name."
spdy, SPDY, stream_id, stream_idQ_PROTO_SPDY, uint32, "Stream identifier."
spdy, SPDY, length, lengthQ_PROTO_SPDY, uint32, "Length of the message starting at the offset of this field."
spdy, SPDY, associated_stream_id, associated_stream_idQ_PROTO_SPDY, uint32, "Identifier for a stream which this stream is associated to."
spdy, SPDY, status_code, status_codeQ_PROTO_SPDY, uint32, "An indicator for why the stream is being terminated."
spdy, SPDY, header_count, header_countQ_PROTO_SPDY, uint32, "The number of repeating name/value pairs following this field"
spdy, SPDY, header_name, header_nameQ_PROTO_SPDY, bytes, "Header name, prefixed by a ':' if it's a mandatory SPDY header."
spdy, SPDY, header_value, header_valueQ_PROTO_SPDY, bytes, "Header value."
spid, Statistical Protocol IDentification, found_protocol, found_protocolQ_PROTO_SPID, bytes, "Protocol name that has been discovered by SPID."
spid, Statistical Protocol IDentification, divergence, divergenceQ_PROTO_SPID, uint32, "Divergence giving the distance"
squirrelmail, SquirrelMail, contact_email, contact_emailQ_PROTO_SQUIRRELMAIL, bytes, "Email address of a contact."
squirrelmail, SquirrelMail, contact_alias, contact_aliasQ_PROTO_SQUIRRELMAIL, bytes, "Alias of a contact."
squirrelmail, SquirrelMail, msglist_sender_alias, msglist_sender_aliasQ_PROTO_SQUIRRELMAIL, bytes, "Name of email sender."
squirrelmail, SquirrelMail, msglist_sender_email, msglist_sender_emailQ_PROTO_SQUIRRELMAIL, bytes, "Address of email sender."
squirrelmail, SquirrelMail, msglist_sender, msglist_senderQ_PROTO_SQUIRRELMAIL, bytes, "Full address of email sender (alias and email address)."
squirrelmail, SquirrelMail, msglist_subject, msglist_subjectQ_PROTO_SQUIRRELMAIL, bytes, "Message subject in a message list."
squirrelmail, SquirrelMail, msglist_date, msglist_dateQ_PROTO_SQUIRRELMAIL, bytes, "Message date in a message list."
squirrelmail, SquirrelMail, msglist_receiver_alias, msglist_receiver_aliasQ_PROTO_SQUIRRELMAIL, bytes, "Name of email receiver."
squirrelmail, SquirrelMail, msglist_receiver_email, msglist_receiver_emailQ_PROTO_SQUIRRELMAIL, bytes, "Email address of the email receiver."
squirrelmail, SquirrelMail, msglist_receiver, msglist_receiverQ_PROTO_SQUIRRELMAIL, bytes, "Full address of email receiver in a message list."
squirrelmail, SquirrelMail, msglist_msgid, msglist_msgidQ_PROTO_SQUIRRELMAIL, bytes, "Message identifier."
squirrelmail, SquirrelMail, attach_size, attach_sizeQ_PROTO_SQUIRRELMAIL, uint32, "Attached file MIME size."
squirrelmail, SquirrelMail, date, dateQ_PROTO_SQUIRRELMAIL, bytes, "Message date."
squirrelmail, SquirrelMail, sender_alias, sender_aliasQ_PROTO_SQUIRRELMAIL, bytes, "Name of the email sender."
squirrelmail, SquirrelMail, sender_email, sender_emailQ_PROTO_SQUIRRELMAIL, bytes, "Email address of the email sender."
squirrelmail, SquirrelMail, sender, senderQ_PROTO_SQUIRRELMAIL, bytes, "Full address of email sender (alias followed by email address)."
squirrelmail, SquirrelMail, msg_id, msg_idQ_PROTO_SQUIRRELMAIL, bytes, "Identifier of the message."
squirrelmail, SquirrelMail, folder, folderQ_PROTO_SQUIRRELMAIL, bytes, "Indicates the directory from where messages are read."
squirrelmail, SquirrelMail, subject, subjectQ_PROTO_SQUIRRELMAIL, bytes, "Message subject."
squirrelmail, SquirrelMail, receiver_type, receiver_typeQ_PROTO_SQUIRRELMAIL, bytes, "Type of the email receiver."
squirrelmail, SquirrelMail, receiver_alias, receiver_aliasQ_PROTO_SQUIRRELMAIL, bytes, "Name of email receiver (included cc and bcc receivers)."
squirrelmail, SquirrelMail, receiver_email, receiver_emailQ_PROTO_SQUIRRELMAIL, bytes, "Email address of message receiver (included cc and bcc receivers)."
squirrelmail, SquirrelMail, receiver, receiverQ_PROTO_SQUIRRELMAIL, bytes, "Full address of email receiver (including cc and bcc receivers)."
squirrelmail, SquirrelMail, attach_type, attach_typeQ_PROTO_SQUIRRELMAIL, bytes, "Content type of the sent attached file."
squirrelmail, SquirrelMail, attach_filename, attach_filenameQ_PROTO_SQUIRRELMAIL, bytes, "Attachment name."
squirrelmail, SquirrelMail, draft, draftQ_PROTO_SQUIRRELMAIL, uint32, "Indicates if the email is a draft or has really been posted"
squirrelmail, SquirrelMail, action, actionQ_PROTO_SQUIRRELMAIL, bytes, "Indicates if the message is read (Read) or composed (Compose)."
squirrelmail, SquirrelMail, login_server, login_serverQ_PROTO_SQUIRRELMAIL, bytes, "Concatenated login and server: <login>@<server>."
squirrelmail, SquirrelMail, password, passwordQ_PROTO_SQUIRRELMAIL, bytes, "User's password string."
squirrelmail, SquirrelMail, login, loginQ_PROTO_SQUIRRELMAIL, bytes, "User's login string."
squirrelmail, SquirrelMail, msglist_folder, msglist_folderQ_PROTO_SQUIRRELMAIL, bytes, "Indicates the directory from a message list."
squirrelmail, SquirrelMail, attach_id, attach_idQ_PROTO_SQUIRRELMAIL, bytes, "Attachment identifier."
ssh, Secure Shell, rtt, rttQ_PROTO_SSH, string, "Server response time."
ssl, Secure Socket Layer, common_name, common_nameQ_PROTO_SSL, bytes, "Domain name mentioned in the certificate."
ssl, Secure Socket Layer, organization_name, organization_nameQ_PROTO_SSL, bytes, "Organisation name mentioned in the certificate."
ssl, Secure Socket Layer, server_name, server_nameQ_PROTO_SSL, bytes, "Domain name mentioned in Client Hello message."
ssl, Secure Socket Layer, supported_next_protocol, supported_next_protocolQ_PROTO_SSL, bytes, "Supported protocol on top of SSL specified by the server in the Next Protocol Negotiation TLS extension."
ssl, Secure Socket Layer, issuer, issuerQ_PROTO_SSL, bytes, "Certificate Authority."
ssl, Secure Socket Layer, validity_not_before, validity_not_beforeQ_PROTO_SSL, bytes, "Certificate's validity start date."
ssl, Secure Socket Layer, validity_not_after, validity_not_afterQ_PROTO_SSL, bytes, "Certificate's validity end date."
ssl, Secure Socket Layer, subject_alt_name, subject_alt_nameQ_PROTO_SSL, bytes, "Identifies a list of host names which belong to the same certificate."
ssl, Secure Socket Layer, index, indexQ_PROTO_SSL, uint32, "Identifier of the request and response in a SSL flow."
ssl, Secure Socket Layer, request_size, request_sizeQ_PROTO_SSL, uint64, "Contains the total length in bytes of the request or the response (including SSL headers). This attribute is computed at the end of the request or response."
stp, Spanning Tree Protocol, root_addr, root_addrQ_PROTO_STP, string, "Root Bridge MAC address."
stp, Spanning Tree Protocol, root_path_cost, root_path_costQ_PROTO_STP, uint32, "Cost of the path to the Root Bridge."
stp, Spanning Tree Protocol, bridge_addr, bridge_addrQ_PROTO_STP, string, "Bridge MAC address."
stun, Session Traversal Utilities for NAT, mapped_address_ipv4, mapped_address_ipv4Q_PROTO_STUN, string, "IPv4 address to be mapped."
stun, Session Traversal Utilities for NAT, xor_mapped_address_ipv4, xor_mapped_address_ipv4Q_PROTO_STUN, string, "IPv4 address to be mapped, in XORed version (obfuscated)."
stun, Session Traversal Utilities for NAT, magic_cookie, magic_cookieQ_PROTO_STUN, uint32, "The magic cookie used to deobfuscate the XOR Mapped Port and XOR Mapped Address."
stun, Session Traversal Utilities for NAT, remote_address_ipv4, remote_address_ipv4Q_PROTO_STUN, string, "IPv4 address of the distant peer as seen from the STUN relay server."
syslog, Syslog, code, codeQ_PROTO_SYSLOG, bytes, "Message type."
t38, T.38, caller, callerQ_PROTO_T38, bytes, "Calling subscriber identification"
t38, T.38, callee, calleeQ_PROTO_T38, bytes, "Called subscriber identification"
t38, T.38, fax_message_number, fax_message_numberQ_PROTO_T38, bytes, "Identification associated to the following FAX messages: CSI the called subscriber identification (which is equal to the callee), CIG the calling subscriber identification (which is the caller), PWD the password, SEP the selective polling, PSA the polled subaddress, TSI the transmitting subscriber identification, SUB the subaddress and SID the sender identification."
tagged, Tagged.com, login, loginQ_PROTO_TAGGED, bytes, "User's login string."
tagged, Tagged.com, password, passwordQ_PROTO_TAGGED, bytes, "User's password string."
tango, Tango Video Calls, attach_filename, attach_filenameQ_PROTO_TANGO, bytes, "Transferred file name."
tango, Tango Video Calls, service_duration_tv, service_duration_tvQ_PROTO_TANGO, string, "Timeval structure indicating, when the service is ended, the duration of it in seconds and microseconds."
tango, Tango Video Calls, service_duration, service_durationQ_PROTO_TANGO, uint32, "4 bytes integer value indicating, when the service is ended, the duration of it in seconds."
tango, Tango Video Calls, service_id, service_idQ_PROTO_TANGO, uint32, "Composite 32-bit integer value defining the service currently used. The first byte (LSB) gives the generic service definition, the second byte gives an advanced service definition for specific cases (example: File Transfer)."
tango, Tango Video Calls, service_stats, service_statsQ_PROTO_TANGO, bytes, "Composite attribute containing the packet metrics used for each new service type detection, extracting when performing STATISCAL detection method only. Note: this attribute won't be extracted in case of session expiration (eg. when the current service is not ended properly by the user)."
tango, Tango Video Calls, service, serviceQ_PROTO_TANGO, bytes, "Current service identification string."
tango, Tango Video Calls, callee_id, callee_idQ_PROTO_TANGO, bytes, "Called part identifier."
tango, Tango Video Calls, caller_id, caller_idQ_PROTO_TANGO, bytes, "Calling part identifier."
tango, Tango Video Calls, callee, calleeQ_PROTO_TANGO, bytes, "Contains the identity (or the phone number) of the called party for a call."
tango, Tango Video Calls, caller, callerQ_PROTO_TANGO, bytes, "Contains the identity (or the phone number) of the initiator of the call."
tango, Tango Video Calls, call_id, call_idQ_PROTO_TANGO, bytes, "Call id, extracted for each call."
tango, Tango Video Calls, phone_number, phone_numberQ_PROTO_TANGO, bytes, "User's phone number."
tango, Tango Video Calls, user_email, user_emailQ_PROTO_TANGO, bytes, "User's email address."
tango, Tango Video Calls, login, loginQ_PROTO_TANGO, bytes, "User's login string."
tango, Tango Video Calls, user_id, user_idQ_PROTO_TANGO, bytes, "Unique user identifier."
tango, Tango Video Calls, device_id, device_idQ_PROTO_TANGO, bytes, "User's device identifier."
tchatche, Tchatche, login, loginQ_PROTO_TCHATCHE, bytes, "User's login string."
tchatche, Tchatche, password, passwordQ_PROTO_TCHATCHE, bytes, "User's password string."
tcp, Transmission Control Protocol, seg_buffered_count, seg_buffered_countQ_PROTO_TCP, uint32, "Number of segments that have been buffered for reassembly"
tcp, Transmission Control Protocol, seg_buffered_size, seg_buffered_sizeQ_PROTO_TCP, uint32, "Sizes sum of segments that have been buffered for reassembly"
tds, Tabular Data Stream, login, loginQ_PROTO_TDS, bytes, "User's login string."
tds, Tabular Data Stream, password, passwordQ_PROTO_TDS, bytes, "User's password string."
tds, Tabular Data Stream, hostname, hostnameQ_PROTO_TDS, bytes, "Name of workstation communicating with the SQL server."
tds, Tabular Data Stream, application, applicationQ_PROTO_TDS, bytes, "Name of application used to connect to the database."
tds, Tabular Data Stream, server, serverQ_PROTO_TDS, bytes, "Name of server hosting the SQL Server."
tds, Tabular Data Stream, library, libraryQ_PROTO_TDS, bytes, "Name of network dynamic-link library used."
tds, Tabular Data Stream, database_name, database_nameQ_PROTO_TDS, bytes, "Name of the used database."
tds, Tabular Data Stream, language, languageQ_PROTO_TDS, bytes, "User locale."
tds, Tabular Data Stream, query, queryQ_PROTO_TDS, bytes, "SQL query sent by the user."
tds, Tabular Data Stream, login_encrypted, login_encryptedQ_PROTO_TDS, uint32, "This attribute is set to one if the login phase is encrypted. Implemented conforming to the Microsoft 2014 MS-TDS official specification (http://msdn.microsoft.com/en-us/library/dd304523.aspx); beware, the behaviour may be different with old releases of MS SQL Server not supporting the standard."
teamspeak, Teamspeak v2, channel_description, channel_descriptionQ_PROTO_TEAMSPEAK, bytes, "Channel description (long)"
teamspeak, Teamspeak v2, channel_action, channel_actionQ_PROTO_TEAMSPEAK, bytes, "Action associated to a channel"
teamspeak, Teamspeak v2, channel_topic, channel_topicQ_PROTO_TEAMSPEAK, bytes, "Channel topic (short)"
teamspeak, Teamspeak v2, channel_user, channel_userQ_PROTO_TEAMSPEAK, bytes, "User associated to an action on a channel"
teamspeak, Teamspeak v2, channel_name, channel_nameQ_PROTO_TEAMSPEAK, bytes, "Channel name"
teamspeak, Teamspeak v2, channel_id, channel_idQ_PROTO_TEAMSPEAK, uint32, "Channel ID"
teamspeak, Teamspeak v2, contact_uid, contact_uidQ_PROTO_TEAMSPEAK, uint32, "Contact ID."
teamspeak, Teamspeak v2, contact_alias, contact_aliasQ_PROTO_TEAMSPEAK, bytes, "Contact alias."
teamspeak, Teamspeak v2, message_scope, message_scopeQ_PROTO_TEAMSPEAK, uint32, "Message scope"
teamspeak, Teamspeak v2, message, messageQ_PROTO_TEAMSPEAK, bytes, "Contains the chat message."
teamspeak, Teamspeak v2, receiver_uid, receiver_uidQ_PROTO_TEAMSPEAK, uint32, "Receiver ID for this message"
teamspeak, Teamspeak v2, receiver, receiverQ_PROTO_TEAMSPEAK, bytes, "Contains the identity of the receiver for a chat message or a file transfer."
teamspeak, Teamspeak v2, sender_uid, sender_uidQ_PROTO_TEAMSPEAK, uint32, "Sender ID for this message"
teamspeak, Teamspeak v2, sender, senderQ_PROTO_TEAMSPEAK, bytes, "Contains the identity of the sender of a chat session or a file transfer."
teamspeak, Teamspeak v2, channel, channelQ_PROTO_TEAMSPEAK, bytes, "Chat room name."
teamspeak, Teamspeak v2, greeting_message, greeting_messageQ_PROTO_TEAMSPEAK, bytes, "Server greeting message"
teamspeak, Teamspeak v2, server_version, server_versionQ_PROTO_TEAMSPEAK, bytes, "Server software version"
teamspeak, Teamspeak v2, server_name, server_nameQ_PROTO_TEAMSPEAK, bytes, "Server name"
teamspeak, Teamspeak v2, server_platform, server_platformQ_PROTO_TEAMSPEAK, bytes, "Server architecture"
teamspeak, Teamspeak v2, client_version, client_versionQ_PROTO_TEAMSPEAK, bytes, "Client software version"
teamspeak, Teamspeak v2, client_software, client_softwareQ_PROTO_TEAMSPEAK, bytes, "Client software name"
teamspeak, Teamspeak v2, client_platform, client_platformQ_PROTO_TEAMSPEAK, bytes, "Client architecture"
teamspeak, Teamspeak v2, client_uid, client_uidQ_PROTO_TEAMSPEAK, uint32, "Client session ID"
teamspeak, Teamspeak v2, session_id, session_idQ_PROTO_TEAMSPEAK, uint32, "Uniquely identifies the current user session."
teamspeak, Teamspeak v2, password, passwordQ_PROTO_TEAMSPEAK, bytes, "User's password string."
teamspeak, Teamspeak v2, login, loginQ_PROTO_TEAMSPEAK, bytes, "User's login string."
teamspeak, Teamspeak v2, nickname, nicknameQ_PROTO_TEAMSPEAK, bytes, "User nickname"
telnet, Telnet, login, loginQ_PROTO_TELNET, bytes, "User's login string."
telnet, Telnet, password, passwordQ_PROTO_TELNET, bytes, "User's password string."
telnet, Telnet, term_type, term_typeQ_PROTO_TELNET, bytes, "Terminal type."
telnet, Telnet, rtt, rttQ_PROTO_TELNET, string, "Server response time."
teredo, Teredo protocol, server_ip, server_ipQ_PROTO_TEREDO, string, "The IPv4 network address of the Teredo server involved in the exchange, read from the encapsulated IPv6 packet header"
teredo, Teredo protocol, client_ip, client_ipQ_PROTO_TEREDO, string, "Client's mapped IPv4 net address."
teredo, Teredo protocol, origin_client_ip, origin_client_ipQ_PROTO_TEREDO, string, "IPv4 client address as visible in the Origin Indication"
teredo, Teredo protocol, client_id, client_idQ_PROTO_TEREDO, bytes, "Client identifier, set up during its configuration"
teredo, Teredo protocol, auth_value, auth_valueQ_PROTO_TEREDO, bytes, "Client Authentication string"
tftp, Trivial File Transfer Protocol, filename, filenameQ_PROTO_TFTP, bytes, "Name of the transferred file."
tftp, Trivial File Transfer Protocol, request_filename, request_filenameQ_PROTO_TFTP, bytes, "Name of the requested file."
tftp, Trivial File Transfer Protocol, filesize, filesizeQ_PROTO_TFTP, uint32, "Size (byte) of the transferred file."
tftp, Trivial File Transfer Protocol, mode, modeQ_PROTO_TFTP, bytes, "File transfer mode (Netascii/ Binary/ Mail)."
tftp, Trivial File Transfer Protocol, query, queryQ_PROTO_TFTP, bytes, "Command type."
tns, Transparent Network Service (Oracle), login, loginQ_PROTO_TNS, bytes, "User's login string."
tns, Transparent Network Service (Oracle), password, passwordQ_PROTO_TNS, bytes, "User's password string."
tns, Transparent Network Service (Oracle), base, baseQ_PROTO_TNS, bytes, "Name of accessed database."
tns, Transparent Network Service (Oracle), server_hostname, server_hostnameQ_PROTO_TNS, bytes, "Database server hostname."
tns, Transparent Network Service (Oracle), server_os, server_osQ_PROTO_TNS, bytes, "Database server operating system."
tns, Transparent Network Service (Oracle), client_os, client_osQ_PROTO_TNS, bytes, "Client machine operating system."
tns, Transparent Network Service (Oracle), client_hostname, client_hostnameQ_PROTO_TNS, bytes, "Client machine hostname."
tns, Transparent Network Service (Oracle), client_program_path, client_program_pathQ_PROTO_TNS, bytes, "Client program absolute path."
tns, Transparent Network Service (Oracle), client_program_name, client_program_nameQ_PROTO_TNS, bytes, "Client program name."
tns, Transparent Network Service (Oracle), query, queryQ_PROTO_TNS, bytes, "Database query."
tns, Transparent Network Service (Oracle), response_size, response_sizeQ_PROTO_TNS, uint32, "Unitary size in bytes of one the PDUs returned by the server."
tns, Transparent Network Service (Oracle), response_time, response_timeQ_PROTO_TNS, string, "Elapsed time between sending of the dns request and reception of its response."
twitter, Twitter.com, relation, relationQ_PROTO_TWITTER, bytes, "Relation between two users, following/followed_by, or sender/recicipent for direct messages."
twitter, Twitter.com, media_url, media_urlQ_PROTO_TWITTER, bytes, "URL of the image which is shared inside a tweet (legacy Twitter API)."
twitter, Twitter.com, date, dateQ_PROTO_TWITTER, bytes, "Message date."
twitter, Twitter.com, tweet, tweetQ_PROTO_TWITTER, bytes, "Text of a tweet or a direct message."
twitter, Twitter.com, screen_name, screen_nameQ_PROTO_TWITTER, bytes, "User name appearing in the result of a request."
twitter, Twitter.com, user_id, user_idQ_PROTO_TWITTER, bytes, "User id appearing in the result of a request."
twitter, Twitter.com, param_text, param_textQ_PROTO_TWITTER, bytes, "Generic text used as request parameter."
twitter, Twitter.com, param_screen_name, param_screen_nameQ_PROTO_TWITTER, bytes, "User screen name used as request parameter."
twitter, Twitter.com, param_user_id, param_user_idQ_PROTO_TWITTER, bytes, "User id used as request parameter."
twitter, Twitter.com, action, actionQ_PROTO_TWITTER, bytes, "Indicates the action executed by the user."
twitter, Twitter.com, login, loginQ_PROTO_TWITTER, bytes, "User's login string."
twitter, Twitter.com, session_id, session_idQ_PROTO_TWITTER, bytes, "Uniquely identifies the current user session."
twoo, Twoo.com, login, loginQ_PROTO_TWOO, bytes, "User's login string."
twoo, Twoo.com, password, passwordQ_PROTO_TWOO, bytes, "User's password string."
twoo, Twoo.com, is_mobile_service, is_mobile_serviceQ_PROTO_TWOO, uint32, "Whether or not the access was made through a mobile device."
unknown, Unknown virtual protocol, maybe_application_id, maybe_application_idQ_PROTO_UNKNOWN, uint32, "Possible application's ID for this flow."
unknown, Unknown virtual protocol, maybe_application, maybe_applicationQ_PROTO_UNKNOWN, bytes, "Possible application's name for this flow."
unknown, Unknown virtual protocol, maybe_family, maybe_familyQ_PROTO_UNKNOWN, bytes, "Protocol family of a possible application for this flow."
ustream, UStream, password, passwordQ_PROTO_USTREAM, bytes, "User's password string."
ustream, UStream, login, loginQ_PROTO_USTREAM, bytes, "User's login string."
ustream, UStream, query_text, query_textQ_PROTO_USTREAM, bytes, "Query sent to the search engine."
ustream, UStream, query_raw, query_rawQ_PROTO_USTREAM, bytes, "Contains the query sent to the search engine as indicated in the URL."
viadeo, Viadeo.com, login, loginQ_PROTO_VIADEO, bytes, "User's login string."
viadeo, Viadeo.com, password, passwordQ_PROTO_VIADEO, bytes, "User's password string."
viadeo, Viadeo.com, contact_email, contact_emailQ_PROTO_VIADEO, bytes, "Contact's mail address."
viadeo, Viadeo.com, contact_alias, contact_aliasQ_PROTO_VIADEO, bytes, "Contact's alias."
viadeo, Viadeo.com, groupe, groupeQ_PROTO_VIADEO, bytes, "Contact's alias."
viber, Viber, filesize, filesizeQ_PROTO_VIBER, uint64, "Size (byte) of the transferred file."
viber, Viber, service, serviceQ_PROTO_VIBER, bytes, "Current service identification string."
viber, Viber, service_id, service_idQ_PROTO_VIBER, uint32, "Composite 32-bit integer value defining the service currently used. The first byte (LSB) gives the generic service definition, the second byte gives an advanced service definition for specific cases (example: File Transfer)."
viber, Viber, service_duration, service_durationQ_PROTO_VIBER, uint32, "4 bytes integer value indicating, when the service is ended, the length of it in seconds"
viber, Viber, service_duration_tv, service_duration_tvQ_PROTO_VIBER, string, "structure indicating, when the service is ended, the length of it in second and microseconds."
vkontakte, Vk.com (Vkontakte), contact_email, contact_emailQ_PROTO_VKONTAKTE, bytes, "Email address of a contact."
vkontakte, Vk.com (Vkontakte), group_name, group_nameQ_PROTO_VKONTAKTE, bytes, "Name of the group the user has subscribed to."
vkontakte, Vk.com (Vkontakte), contact_alias, contact_aliasQ_PROTO_VKONTAKTE, bytes, "Alias of a contact."
vkontakte, Vk.com (Vkontakte), contact_uid, contact_uidQ_PROTO_VKONTAKTE, bytes, "Contact ID."
vkontakte, Vk.com (Vkontakte), account_uid, account_uidQ_PROTO_VKONTAKTE, bytes, "User ID."
vkontakte, Vk.com (Vkontakte), password, passwordQ_PROTO_VKONTAKTE, bytes, "User's password string."
vkontakte, Vk.com (Vkontakte), name, nameQ_PROTO_VKONTAKTE, bytes, "User's full name."
vkontakte, Vk.com (Vkontakte), login, loginQ_PROTO_VKONTAKTE, bytes, "User's login string."
wechat, WeChat, service_id, service_idQ_PROTO_WECHAT, uint32, "Composite 32-bit integer value defining the service currently used. The first byte (LSB) gives the generic service definition, the second byte gives an advanced service definition for specific cases (example: File Transfer)."
wechat, WeChat, service, serviceQ_PROTO_WECHAT, bytes, "Current service identification string."
wechat, WeChat, service_stats, service_statsQ_PROTO_WECHAT, bytes, "Composite attribute containing the packet metrics used for each new service type detection, extracting when performing STATISCAL detection method only. Note: this attribute won't be extracted in case of session expiration (eg. when the current service is not ended properly by the user)."
whatsapp, WhatsApp Messenger, service_id, service_idQ_PROTO_WHATSAPP, uint32, "Composite 32-bit integer value defining the service currently used. The first byte (LSB) gives the generic service definition, the second byte gives an advanced service definition for specific cases (example: File Transfer)."
whatsapp, WhatsApp Messenger, service, serviceQ_PROTO_WHATSAPP, bytes, "Current service identification string."
whatsapp, WhatsApp Messenger, service_stats, service_statsQ_PROTO_WHATSAPP, bytes, "Composite attribute containing the packet metrics used for each new service type detection, extracting when performing STATISCAL detection method only. Note: this attribute won't be extracted in case of session expiration (eg. when the current service is not ended properly by the user)."
whatsapp, WhatsApp Messenger, phone_number, phone_numberQ_PROTO_WHATSAPP, bytes, "Caller phone number."
whatsapp, WhatsApp Messenger, version, versionQ_PROTO_WHATSAPP, bytes, "Program version."
wikipedia, Wikipedia.com, query_text, query_textQ_PROTO_WIKIPEDIA, bytes, "Query sent to the search engine."
wikipedia, Wikipedia.com, query_raw, query_rawQ_PROTO_WIKIPEDIA, bytes, "Contains the query sent to the search engine as indicated in the URL."
windows_marketplace, Windows Phone Marketplace, application_name, application_nameQ_PROTO_WINDOWS_MARKETPLACE, bytes, "Name of the downloaded app."
windows_update, Windows Update, platform, platformQ_PROTO_WINDOWS_UPDATE, bytes, "Indicating the Windows version using this update"
windows_update, Windows Update, kb, kbQ_PROTO_WINDOWS_UPDATE, bytes, "kb (Knowledge base) is a unique internal Microsoft number to identify different software and updates."
winmx, Winmx, login, loginQ_PROTO_WINMX, bytes, "User's login string."
winmx, Winmx, query, queryQ_PROTO_WINMX, bytes, "Query sent to find a file."
winmx, Winmx, filename, filenameQ_PROTO_WINMX, bytes, "Name of the transferred file."
winmx, Winmx, filesize, filesizeQ_PROTO_WINMX, uint32, "Size (byte) of the transferred file."
winmx, Winmx, file_chunk_len, file_chunk_lenQ_PROTO_WINMX, uint32, "Size of the transferred piece."
winmx, Winmx, file_chunk_data_offset, file_chunk_data_offsetQ_PROTO_WINMX, uint32, "Offset of the transferred data."
winmx, Winmx, loadway, loadwayQ_PROTO_WINMX, bytes, "Contains the file transfer way (Upload vs Download)."
wsp, Wireless Session Protocol, pdu_type, pdu_typeQ_PROTO_WSP, bytes, "Message type."
wsp, Wireless Session Protocol, uri, uriQ_PROTO_WSP, bytes, "Complete name (path + filename) of a web resource."
wsp, Wireless Session Protocol, connect_rtt, connect_rttQ_PROTO_WSP, string, "Connection establishment time."
wsp, Wireless Session Protocol, query_rtt, query_rttQ_PROTO_WSP, string, "Elapsed time between a request and its response."
wsp, Wireless Session Protocol, server, serverQ_PROTO_WSP, bytes, "Server name."
wsp, Wireless Session Protocol, user_agent, user_agentQ_PROTO_WSP, bytes, "Client mobile name."
wsp, Wireless Session Protocol, mime_type, mime_typeQ_PROTO_WSP, bytes, "Data type."
wsp, Wireless Session Protocol, request_size, request_sizeQ_PROTO_WSP, uint32, "Contains the total length of the request or the response (including headers)."
wsp, Wireless Session Protocol, mime_type_main, mime_type_mainQ_PROTO_WSP, bytes, "Primary part of the MIME type."
wsp, Wireless Session Protocol, mime_type_sub, mime_type_subQ_PROTO_WSP, bytes, "Second part of the MIME type."
wsp, Wireless Session Protocol, profile, profileQ_PROTO_WSP, bytes, "A link for a full description of the used user_agent."
wsp, Wireless Session Protocol, index, indexQ_PROTO_WSP, uint32, "Identifier of the request and response in a WSP flow."
wsp, Wireless Session Protocol, index_client, index_clientQ_PROTO_WSP, uint32, "Identifier of the request in a WSP flow."
wsp, Wireless Session Protocol, index_server, index_serverQ_PROTO_WSP, uint32, "Identifier of the response in a WSP flow."
x25, X.25, calling_addr, calling_addrQ_PROTO_X25, bytes, "Calling station address."
x25, X.25, called_addr, called_addrQ_PROTO_X25, bytes, "Called station address."
x25, X.25, pkt_type, pkt_typeQ_PROTO_X25, bytes, "Packet type."
xcap, Xcap, supplementary_service, supplementary_serviceQ_PROTO_XCAP, bytes, "Supplementary Service in VoLTE flow (only with auid simservs)"
xcap, Xcap, auid, auidQ_PROTO_XCAP, bytes, "ID of the application"
xdmcp, X Display Manager Control Protocol, client_ip, client_ipQ_PROTO_XDMCP, string, "Client IPv4 address."
xdmcp, X Display Manager Control Protocol, server_ip, server_ipQ_PROTO_XDMCP, string, "Server IPv4 address."
xdmcp, X Display Manager Control Protocol, server_status, server_statusQ_PROTO_XDMCP, bytes, "X11 server availability."
yahoo_groups, Yahoo groups, login, loginQ_PROTO_YAHOO_GROUPS, bytes, "User's login string."
yahoo_groups, Yahoo groups, uid, uidQ_PROTO_YAHOO_GROUPS, bytes, "Generic user ID."
yahoo_groups, Yahoo groups, query_raw, query_rawQ_PROTO_YAHOO_GROUPS, bytes, "Contains the query sent to the search engine as indicated in the URL."
yahoo_groups, Yahoo groups, query_text, query_textQ_PROTO_YAHOO_GROUPS, bytes, "Query sent to the search engine."
yahoo_groups, Yahoo groups, group_name, group_nameQ_PROTO_YAHOO_GROUPS, bytes, "Name of the group the user has subscribed to."
yahoo_groups, Yahoo groups, group_short_description, group_short_descriptionQ_PROTO_YAHOO_GROUPS, bytes, "Short group description."
yahoo_groups, Yahoo groups, group_detailed_description, group_detailed_descriptionQ_PROTO_YAHOO_GROUPS, bytes, "Detailed group description."
yahoo_groups, Yahoo groups, group_join_request, group_join_requestQ_PROTO_YAHOO_GROUPS, bytes, "Group to which the user want to subscribe."
yahoo_groups, Yahoo groups, group_membership, group_membershipQ_PROTO_YAHOO_GROUPS, bytes, "Group to which the user has subscribed."
yahoo_groups, Yahoo groups, name, nameQ_PROTO_YAHOO_GROUPS, bytes, "User's full name."
yahoo_groups, Yahoo groups, sender, senderQ_PROTO_YAHOO_GROUPS, bytes, "Full address of email sender (alias followed by email address)."
yahoo_groups, Yahoo groups, sender_uid, sender_uidQ_PROTO_YAHOO_GROUPS, bytes, "Sender ID."
yahoo_groups, Yahoo groups, sender_email, sender_emailQ_PROTO_YAHOO_GROUPS, bytes, "Email address of the email sender."
yahoo_groups, Yahoo groups, sender_alias, sender_aliasQ_PROTO_YAHOO_GROUPS, bytes, "Name of the email sender."
yahoo_groups, Yahoo groups, sender_nickname, sender_nicknameQ_PROTO_YAHOO_GROUPS, bytes, "Message author's nickname, when reading a message."
yahoo_groups, Yahoo groups, date, dateQ_PROTO_YAHOO_GROUPS, bytes, "Message date."
yahoo_groups, Yahoo groups, subject, subjectQ_PROTO_YAHOO_GROUPS, bytes, "Message subject."
yahoo_groups, Yahoo groups, msg_number, msg_numberQ_PROTO_YAHOO_GROUPS, uint32, "Number of the posted message."
yahoo_groups, Yahoo groups, action, actionQ_PROTO_YAHOO_GROUPS, bytes, "Indicates if the message is read (Read) or composed (Compose)."
yahoo_groups, Yahoo groups, draft, draftQ_PROTO_YAHOO_GROUPS, uint32, "Indicates if the email is a draft or has really been posted"
yahoo_groups, Yahoo groups, replyto, replytoQ_PROTO_YAHOO_GROUPS, bytes, "When posting, indicates is the recipient was only the author or the whole list."
yahoo_maps, Yahoo Maps, country, countryQ_PROTO_YAHOO_MAPS, bytes, "Location country value."
yahoo_maps, Yahoo Maps, city, cityQ_PROTO_YAHOO_MAPS, bytes, "Location city value."
yahoo_maps, Yahoo Maps, street, streetQ_PROTO_YAHOO_MAPS, bytes, "Location longitude value."
yahoo_maps, Yahoo Maps, longitude, longitudeQ_PROTO_YAHOO_MAPS, bytes, "Location longitude value."
yahoo_maps, Yahoo Maps, latitude, latitudeQ_PROTO_YAHOO_MAPS, bytes, "Location latitude value."
yahoo_maps, Yahoo Maps, query_text, query_textQ_PROTO_YAHOO_MAPS, bytes, "Query sent to the search engine."
yahoo_search, Yahoo Search, encoding, encodingQ_PROTO_YAHOO_SEARCH, bytes, "Query encoding."
yahoo_search, Yahoo Search, query_type, query_typeQ_PROTO_YAHOO_SEARCH, bytes, "Sort of query sent to the search engine."
yahoo_search, Yahoo Search, query_raw, query_rawQ_PROTO_YAHOO_SEARCH, bytes, "Contains the query sent to the search engine as indicated in the URL."
yahoo_search, Yahoo Search, query_text, query_textQ_PROTO_YAHOO_SEARCH, bytes, "Query sent to the search engine."
yandex, Yandex.ru, password, passwordQ_PROTO_YANDEX, bytes, "User's password string."
yandex, Yandex.ru, login, loginQ_PROTO_YANDEX, bytes, "User's login string."
yandex, Yandex.ru, query_type, query_typeQ_PROTO_YANDEX, bytes, "Sort of query sent to the search engine."
yandex, Yandex.ru, query_raw, query_rawQ_PROTO_YANDEX, bytes, "Contains the query sent to the search engine as indicated in the URL."
yandex, Yandex.ru, query_text, query_textQ_PROTO_YANDEX, bytes, "Query sent to the search engine."
yandex_webmail, Yandex webmail, folderlist_item_name, folderlist_item_nameQ_PROTO_YANDEX_WEBMAIL, bytes, "Message folder name."
yandex_webmail, Yandex webmail, folderlist_item_id, folderlist_item_idQ_PROTO_YANDEX_WEBMAIL, bytes, "Message folder unique identifier."
yandex_webmail, Yandex webmail, receiver, receiverQ_PROTO_YANDEX_WEBMAIL, bytes, "Full address of email receiver (including cc and bcc receivers)."
yandex_webmail, Yandex webmail, receiver_type, receiver_typeQ_PROTO_YANDEX_WEBMAIL, bytes, "Type of the email receiver."
yandex_webmail, Yandex webmail, receiver_email, receiver_emailQ_PROTO_YANDEX_WEBMAIL, bytes, "Email address of message receiver (included cc and bcc receivers)."
yandex_webmail, Yandex webmail, receiver_alias, receiver_aliasQ_PROTO_YANDEX_WEBMAIL, bytes, "Name of email receiver (included cc and bcc receivers)."
yandex_webmail, Yandex webmail, sender, senderQ_PROTO_YANDEX_WEBMAIL, bytes, "Full address of email sender (alias followed by email address)."
yandex_webmail, Yandex webmail, sender_email, sender_emailQ_PROTO_YANDEX_WEBMAIL, bytes, "Email address of the email sender."
yandex_webmail, Yandex webmail, sender_alias, sender_aliasQ_PROTO_YANDEX_WEBMAIL, bytes, "Name of the email sender."
yandex_webmail, Yandex webmail, attach_filename, attach_filenameQ_PROTO_YANDEX_WEBMAIL, bytes, "Attachment name."
yandex_webmail, Yandex webmail, attach_size, attach_sizeQ_PROTO_YANDEX_WEBMAIL, uint32, "Attached file MIME size."
yandex_webmail, Yandex webmail, attach_id, attach_idQ_PROTO_YANDEX_WEBMAIL, bytes, "Attachment identifier."
yandex_webmail, Yandex webmail, attach_type, attach_typeQ_PROTO_YANDEX_WEBMAIL, bytes, "Content type of the sent attached file."
yandex_webmail, Yandex webmail, msg_id, msg_idQ_PROTO_YANDEX_WEBMAIL, bytes, "Identifier of the message."
yandex_webmail, Yandex webmail, action, actionQ_PROTO_YANDEX_WEBMAIL, bytes, "Indicates if the message is read (Read) or composed (Compose)."
yandex_webmail, Yandex webmail, draft, draftQ_PROTO_YANDEX_WEBMAIL, uint32, "Indicates if the email is a draft or has really been posted"
yandex_webmail, Yandex webmail, date, dateQ_PROTO_YANDEX_WEBMAIL, bytes, "Message date."
yandex_webmail, Yandex webmail, subject, subjectQ_PROTO_YANDEX_WEBMAIL, bytes, "Message subject."
yandex_webmail, Yandex webmail, importance, importanceQ_PROTO_YANDEX_WEBMAIL, uint32, "Indicates if the email has been marked by the user."
yandex_webmail, Yandex webmail, msglist_receiver_alias, msglist_receiver_aliasQ_PROTO_YANDEX_WEBMAIL, bytes, "Name of email receiver."
yandex_webmail, Yandex webmail, msglist_receiver_email, msglist_receiver_emailQ_PROTO_YANDEX_WEBMAIL, bytes, "Email address of the email receiver."
yandex_webmail, Yandex webmail, msglist_receiver, msglist_receiverQ_PROTO_YANDEX_WEBMAIL, bytes, "Full address of email receiver in a message list."
yandex_webmail, Yandex webmail, msglist_sender_alias, msglist_sender_aliasQ_PROTO_YANDEX_WEBMAIL, bytes, "Name of email sender."
yandex_webmail, Yandex webmail, msglist_sender_email, msglist_sender_emailQ_PROTO_YANDEX_WEBMAIL, bytes, "Address of email sender."
yandex_webmail, Yandex webmail, msglist_sender, msglist_senderQ_PROTO_YANDEX_WEBMAIL, bytes, "Full address of email sender (alias and email address)."
yandex_webmail, Yandex webmail, msglist_msgid, msglist_msgidQ_PROTO_YANDEX_WEBMAIL, bytes, "Message identifier."
yandex_webmail, Yandex webmail, msglist_date, msglist_dateQ_PROTO_YANDEX_WEBMAIL, bytes, "Message date in a message list."
yandex_webmail, Yandex webmail, msglist_subject, msglist_subjectQ_PROTO_YANDEX_WEBMAIL, bytes, "Message subject in a message list."
yandex_webmail, Yandex webmail, msglist_attach, msglist_attachQ_PROTO_YANDEX_WEBMAIL, uint32, "Indicates if the message contains an attachment."
yandex_webmail, Yandex webmail, msglist_unread, msglist_unreadQ_PROTO_YANDEX_WEBMAIL, uint32, "Indicates if the message has been read."
yandex_webmail, Yandex webmail, msglist_folder, msglist_folderQ_PROTO_YANDEX_WEBMAIL, bytes, "Indicates the directory from a message list."
yandex_webmail, Yandex webmail, login, loginQ_PROTO_YANDEX_WEBMAIL, bytes, "User's login string."
yandex_webmail, Yandex webmail, contact, contactQ_PROTO_YANDEX_WEBMAIL, bytes, "Complete contact."
yandex_webmail, Yandex webmail, contact_alias, contact_aliasQ_PROTO_YANDEX_WEBMAIL, bytes, "Alias of a contact."
yandex_webmail, Yandex webmail, contact_email, contact_emailQ_PROTO_YANDEX_WEBMAIL, bytes, "Email address of a contact."
ymail2, Yahoo Mail v.2.0, contact_lastname, contact_lastnameQ_PROTO_YMAIL2, bytes, "Contact last name."
ymail2, Yahoo Mail v.2.0, contact_firstname, contact_firstnameQ_PROTO_YMAIL2, bytes, "Contact first name."
ymail2, Yahoo Mail v.2.0, contact_email, contact_emailQ_PROTO_YMAIL2, bytes, "Email address of a contact."
ymail2, Yahoo Mail v.2.0, receiver_type, receiver_typeQ_PROTO_YMAIL2, bytes, "Type of the email receiver."
ymail2, Yahoo Mail v.2.0, draft, draftQ_PROTO_YMAIL2, uint32, "Indicates if the email is a draft or has really been posted"
ymail2, Yahoo Mail v.2.0, receiver, receiverQ_PROTO_YMAIL2, bytes, "Full address of email receiver (including cc and bcc receivers)."
ymail2, Yahoo Mail v.2.0, receiver_alias, receiver_aliasQ_PROTO_YMAIL2, bytes, "Name of email receiver (included cc and bcc receivers)."
ymail2, Yahoo Mail v.2.0, sender, senderQ_PROTO_YMAIL2, bytes, "Full address of email sender (alias followed by email address)."
ymail2, Yahoo Mail v.2.0, replyto, replytoQ_PROTO_YMAIL2, bytes, "Email address to use in a reply for this message."
ymail2, Yahoo Mail v.2.0, receiver_email, receiver_emailQ_PROTO_YMAIL2, bytes, "Email address of message receiver (included cc and bcc receivers)."
ymail2, Yahoo Mail v.2.0, sender_email, sender_emailQ_PROTO_YMAIL2, bytes, "Email address of the email sender."
ymail2, Yahoo Mail v.2.0, sender_alias, sender_aliasQ_PROTO_YMAIL2, bytes, "Name of the email sender."
ymail2, Yahoo Mail v.2.0, subject, subjectQ_PROTO_YMAIL2, bytes, "Message subject."
ymail2, Yahoo Mail v.2.0, msglist_sender, msglist_senderQ_PROTO_YMAIL2, bytes, "Full address of email sender (alias and email address)."
ymail2, Yahoo Mail v.2.0, msglist_sender_email, msglist_sender_emailQ_PROTO_YMAIL2, bytes, "Address of email sender."
ymail2, Yahoo Mail v.2.0, msglist_sender_alias, msglist_sender_aliasQ_PROTO_YMAIL2, bytes, "Name of email sender."
ymail2, Yahoo Mail v.2.0, msglist_size, msglist_sizeQ_PROTO_YMAIL2, bytes, "Message size in a message list."
ymail2, Yahoo Mail v.2.0, msglist_msgid, msglist_msgidQ_PROTO_YMAIL2, bytes, "Message identifier."
ymail2, Yahoo Mail v.2.0, msglist_subject, msglist_subjectQ_PROTO_YMAIL2, bytes, "Message subject in a message list."
ymail2, Yahoo Mail v.2.0, msglist_receiver_email, msglist_receiver_emailQ_PROTO_YMAIL2, bytes, "Email address of the email receiver."
ymail2, Yahoo Mail v.2.0, login, loginQ_PROTO_YMAIL2, bytes, "User's login string."
ymail2, Yahoo Mail v.2.0, name, nameQ_PROTO_YMAIL2, bytes, "User's full name."
ymail2, Yahoo Mail v.2.0, msglist_folder, msglist_folderQ_PROTO_YMAIL2, bytes, "Indicates the directory from a message list."
ymail2, Yahoo Mail v.2.0, attach_size, attach_sizeQ_PROTO_YMAIL2, uint32, "Attached file MIME size."
ymail2, Yahoo Mail v.2.0, attach_type, attach_typeQ_PROTO_YMAIL2, bytes, "Content type of the sent attached file."
ymail2, Yahoo Mail v.2.0, attach_id, attach_idQ_PROTO_YMAIL2, bytes, "Attachment identifier."
ymail2, Yahoo Mail v.2.0, attach_fileid, attach_fileidQ_PROTO_YMAIL2, bytes, "Automatically generated filename for file attachement."
ymail2, Yahoo Mail v.2.0, attach_filename, attach_filenameQ_PROTO_YMAIL2, bytes, "Attachment name."
ymail2, Yahoo Mail v.2.0, msg_id, msg_idQ_PROTO_YMAIL2, bytes, "Identifier of the message."
ymail2, Yahoo Mail v.2.0, action, actionQ_PROTO_YMAIL2, bytes, "Indicates if the message is read (Read) or composed (Compose)."
ymail2, Yahoo Mail v.2.0, date, dateQ_PROTO_YMAIL2, bytes, "Message date."
ymail2, Yahoo Mail v.2.0, msglist_date, msglist_dateQ_PROTO_YMAIL2, bytes, "Message date in a message list."
ymail2, Yahoo Mail v.2.0, session_id, session_idQ_PROTO_YMAIL2, bytes, "Uniquely identifies the current user session."
ymail_classic, Yahoo Mail classic, login, loginQ_PROTO_YMAIL_CLASSIC, bytes, "User's login string."
ymail_classic, Yahoo Mail classic, session_id, session_idQ_PROTO_YMAIL_CLASSIC, bytes, "Uniquely identifies the current user session."
ymail_classic, Yahoo Mail classic, encoding, encodingQ_PROTO_YMAIL_CLASSIC, bytes, "Page encoding"
ymail_classic, Yahoo Mail classic, msglist_sender, msglist_senderQ_PROTO_YMAIL_CLASSIC, bytes, "Full address of email sender (alias and email address)."
ymail_classic, Yahoo Mail classic, msglist_sender_alias, msglist_sender_aliasQ_PROTO_YMAIL_CLASSIC, bytes, "Name of email sender."
ymail_classic, Yahoo Mail classic, msglist_sender_email, msglist_sender_emailQ_PROTO_YMAIL_CLASSIC, bytes, "Address of email sender."
ymail_classic, Yahoo Mail classic, msglist_receiver, msglist_receiverQ_PROTO_YMAIL_CLASSIC, bytes, "Full address of email receiver in a message list."
ymail_classic, Yahoo Mail classic, msglist_receiver_alias, msglist_receiver_aliasQ_PROTO_YMAIL_CLASSIC, bytes, "Name of email receiver."
ymail_classic, Yahoo Mail classic, msglist_receiver_email, msglist_receiver_emailQ_PROTO_YMAIL_CLASSIC, bytes, "Email address of the email receiver."
ymail_classic, Yahoo Mail classic, msglist_msgid, msglist_msgidQ_PROTO_YMAIL_CLASSIC, bytes, "Message identifier."
ymail_classic, Yahoo Mail classic, msglist_subject, msglist_subjectQ_PROTO_YMAIL_CLASSIC, bytes, "Message subject in a message list."
ymail_classic, Yahoo Mail classic, msglist_date, msglist_dateQ_PROTO_YMAIL_CLASSIC, bytes, "Message date in a message list."
ymail_classic, Yahoo Mail classic, msglist_size, msglist_sizeQ_PROTO_YMAIL_CLASSIC, bytes, "Message size in a message list."
ymail_classic, Yahoo Mail classic, msglist_folder, msglist_folderQ_PROTO_YMAIL_CLASSIC, bytes, "Indicates the directory from a message list."
ymail_classic, Yahoo Mail classic, sender, senderQ_PROTO_YMAIL_CLASSIC, bytes, "Full address of email sender (alias followed by email address)."
ymail_classic, Yahoo Mail classic, sender_email, sender_emailQ_PROTO_YMAIL_CLASSIC, bytes, "Email address of the email sender."
ymail_classic, Yahoo Mail classic, sender_alias, sender_aliasQ_PROTO_YMAIL_CLASSIC, bytes, "Name of the email sender."
ymail_classic, Yahoo Mail classic, receiver, receiverQ_PROTO_YMAIL_CLASSIC, bytes, "Full address of email receiver (including cc and bcc receivers)."
ymail_classic, Yahoo Mail classic, receiver_email, receiver_emailQ_PROTO_YMAIL_CLASSIC, bytes, "Email address of message receiver (included cc and bcc receivers)."
ymail_classic, Yahoo Mail classic, receiver_alias, receiver_aliasQ_PROTO_YMAIL_CLASSIC, bytes, "Name of email receiver (included cc and bcc receivers)."
ymail_classic, Yahoo Mail classic, receiver_type, receiver_typeQ_PROTO_YMAIL_CLASSIC, bytes, "Type of the email receiver."
ymail_classic, Yahoo Mail classic, replyto, replytoQ_PROTO_YMAIL_CLASSIC, bytes, "Email address to use in a reply for this message."
ymail_classic, Yahoo Mail classic, date, dateQ_PROTO_YMAIL_CLASSIC, bytes, "Message date."
ymail_classic, Yahoo Mail classic, subject, subjectQ_PROTO_YMAIL_CLASSIC, bytes, "Message subject."
ymail_classic, Yahoo Mail classic, msg_id, msg_idQ_PROTO_YMAIL_CLASSIC, bytes, "Identifier of the message."
ymail_classic, Yahoo Mail classic, attach_id, attach_idQ_PROTO_YMAIL_CLASSIC, bytes, "Attachment identifier."
ymail_classic, Yahoo Mail classic, attach_filename, attach_filenameQ_PROTO_YMAIL_CLASSIC, bytes, "Attachment name."
ymail_classic, Yahoo Mail classic, attach_type, attach_typeQ_PROTO_YMAIL_CLASSIC, bytes, "Content type of the sent attached file."
ymail_classic, Yahoo Mail classic, attach_size, attach_sizeQ_PROTO_YMAIL_CLASSIC, uint32, "Attached file MIME size."
ymail_classic, Yahoo Mail classic, draft, draftQ_PROTO_YMAIL_CLASSIC, uint32, "Indicates if the email is a draft or has really been posted"
ymail_classic, Yahoo Mail classic, action, actionQ_PROTO_YMAIL_CLASSIC, bytes, "Indicates if the message is read (Read) or composed (Compose)."
ymail_classic, Yahoo Mail classic, contact, contactQ_PROTO_YMAIL_CLASSIC, bytes, "Complete contact."
ymail_classic, Yahoo Mail classic, contact_email, contact_emailQ_PROTO_YMAIL_CLASSIC, bytes, "Email address of a contact."
ymail_classic, Yahoo Mail classic, contact_alias, contact_aliasQ_PROTO_YMAIL_CLASSIC, bytes, "Alias of a contact."
ymail_classic, Yahoo Mail classic, contact_name, contact_nameQ_PROTO_YMAIL_CLASSIC, bytes, "Contact name."
ymail_classic, Yahoo Mail classic, contact_firstname, contact_firstnameQ_PROTO_YMAIL_CLASSIC, bytes, "Contact first name."
ymail_classic, Yahoo Mail classic, contact_lastname, contact_lastnameQ_PROTO_YMAIL_CLASSIC, bytes, "Contact last name."
ymail_classic, Yahoo Mail classic, folder, folderQ_PROTO_YMAIL_CLASSIC, bytes, "Indicates the directory from where messages are read."
ymail_classic, Yahoo Mail classic, attach_fileid, attach_fileidQ_PROTO_YMAIL_CLASSIC, bytes, "Automatically generated filename for file attachment."
ymail_mobile_new, Yahoo webmail for mobile, draft, draftQ_PROTO_YMAIL_MOBILE_NEW, uint32, "Indicates if the email is a draft or has really been posted"
ymail_mobile_new, Yahoo webmail for mobile, attach_size, attach_sizeQ_PROTO_YMAIL_MOBILE_NEW, uint32, "Attached file MIME size."
ymail_mobile_new, Yahoo webmail for mobile, attach_type, attach_typeQ_PROTO_YMAIL_MOBILE_NEW, bytes, "Content type of the sent attached file."
ymail_mobile_new, Yahoo webmail for mobile, attach_filename, attach_filenameQ_PROTO_YMAIL_MOBILE_NEW, bytes, "Attachment name."
ymail_mobile_new, Yahoo webmail for mobile, attach_id, attach_idQ_PROTO_YMAIL_MOBILE_NEW, bytes, "Attachment identifier."
ymail_mobile_new, Yahoo webmail for mobile, date, dateQ_PROTO_YMAIL_MOBILE_NEW, bytes, "Message date."
ymail_mobile_new, Yahoo webmail for mobile, subject, subjectQ_PROTO_YMAIL_MOBILE_NEW, bytes, "Message subject."
ymail_mobile_new, Yahoo webmail for mobile, receiver_alias, receiver_aliasQ_PROTO_YMAIL_MOBILE_NEW, bytes, "Name of email receiver (included cc and bcc receivers)."
ymail_mobile_new, Yahoo webmail for mobile, receiver_email, receiver_emailQ_PROTO_YMAIL_MOBILE_NEW, bytes, "Email address of message receiver (included cc and bcc receivers)."
ymail_mobile_new, Yahoo webmail for mobile, receiver_type, receiver_typeQ_PROTO_YMAIL_MOBILE_NEW, bytes, "Type of the email receiver."
ymail_mobile_new, Yahoo webmail for mobile, sender_alias, sender_aliasQ_PROTO_YMAIL_MOBILE_NEW, bytes, "Name of the email sender."
ymail_mobile_new, Yahoo webmail for mobile, sender_email, sender_emailQ_PROTO_YMAIL_MOBILE_NEW, bytes, "Email address of the email sender."
ymail_mobile_new, Yahoo webmail for mobile, msg_id, msg_idQ_PROTO_YMAIL_MOBILE_NEW, bytes, "Identifier of the message."
ymail_mobile_new, Yahoo webmail for mobile, action, actionQ_PROTO_YMAIL_MOBILE_NEW, bytes, "Indicates if the message is read (Read) or composed (Compose)."
ymail_mobile_new, Yahoo webmail for mobile, folder, folderQ_PROTO_YMAIL_MOBILE_NEW, bytes, "Indicates the directory from where messages are read."
ymail_mobile_new, Yahoo webmail for mobile, msglist_subject, msglist_subjectQ_PROTO_YMAIL_MOBILE_NEW, bytes, "Message subject in a message list."
ymail_mobile_new, Yahoo webmail for mobile, msglist_date, msglist_dateQ_PROTO_YMAIL_MOBILE_NEW, bytes, "Message date in a message list."
ymail_mobile_new, Yahoo webmail for mobile, msglist_sender, msglist_senderQ_PROTO_YMAIL_MOBILE_NEW, bytes, "Full address of email sender (alias and email address)."
ymail_mobile_new, Yahoo webmail for mobile, msglist_sender_alias, msglist_sender_aliasQ_PROTO_YMAIL_MOBILE_NEW, bytes, "Name of email sender."
ymail_mobile_new, Yahoo webmail for mobile, msglist_receiver, msglist_receiverQ_PROTO_YMAIL_MOBILE_NEW, bytes, "Full address of email receiver in a message list."
ymail_mobile_new, Yahoo webmail for mobile, msglist_receiver_alias, msglist_receiver_aliasQ_PROTO_YMAIL_MOBILE_NEW, bytes, "Name of email receiver."
ymail_mobile_new, Yahoo webmail for mobile, msglist_msgid, msglist_msgidQ_PROTO_YMAIL_MOBILE_NEW, bytes, "Message identifier."
ymail_mobile_new, Yahoo webmail for mobile, msglist_folder, msglist_folderQ_PROTO_YMAIL_MOBILE_NEW, bytes, "Indicates the directory from a message list."
ymail_mobile_new, Yahoo webmail for mobile, contact_alias, contact_aliasQ_PROTO_YMAIL_MOBILE_NEW, bytes, "Alias of a contact."
ymail_mobile_new, Yahoo webmail for mobile, contact_email, contact_emailQ_PROTO_YMAIL_MOBILE_NEW, bytes, "Email address of a contact."
ymail_mobile_new, Yahoo webmail for mobile, password, passwordQ_PROTO_YMAIL_MOBILE_NEW, bytes, "User's password string."
ymail_mobile_new, Yahoo webmail for mobile, login, loginQ_PROTO_YMAIL_MOBILE_NEW, bytes, "User's login string."
ymail_mobile_new, Yahoo webmail for mobile, contact, contactQ_PROTO_YMAIL_MOBILE_NEW, bytes, "Complete contact."
ymail_mobile_new, Yahoo webmail for mobile, receiver, receiverQ_PROTO_YMAIL_MOBILE_NEW, bytes, "Full address of email receiver (including cc and bcc receivers)."
ymail_mobile_new, Yahoo webmail for mobile, sender, senderQ_PROTO_YMAIL_MOBILE_NEW, bytes, "Full address of email sender (alias followed by email address)."
ymail_mobile_new, Yahoo webmail for mobile, session_id, session_idQ_PROTO_YMAIL_MOBILE_NEW, bytes, "Uniquely identifies the current user session."
ymail_mobile_new, Yahoo webmail for mobile, msglist_content, msglist_contentQ_PROTO_YMAIL_MOBILE_NEW, bytes, "Message content in a message list."
ymsg, Yahoo Messenger, caller, callerQ_PROTO_YMSG, bytes, "Contains the identity (or the phone number) of the initiator of the call."
ymsg, Yahoo Messenger, callee, calleeQ_PROTO_YMSG, bytes, "Contains the identity (or the phone number) of the called party for a call."
ymsg, Yahoo Messenger, login, loginQ_PROTO_YMSG, bytes, "User's login string."
ymsg, Yahoo Messenger, version, versionQ_PROTO_YMSG, bytes, "The protocol version number used by the method."
ymsg, Yahoo Messenger, client_version, client_versionQ_PROTO_YMSG, bytes, "Client version."
ymsg, Yahoo Messenger, message, messageQ_PROTO_YMSG, bytes, "Contains the chat message."
ymsg, Yahoo Messenger, message_len, message_lenQ_PROTO_YMSG, uint32, "Contains the length of the chat message."
ymsg, Yahoo Messenger, encoding, encodingQ_PROTO_YMSG, bytes, "Message encoding."
ymsg, Yahoo Messenger, sender, senderQ_PROTO_YMSG, bytes, "Contains the identity of the sender of a chat session or a file transfer."
ymsg, Yahoo Messenger, receiver, receiverQ_PROTO_YMSG, bytes, "Contains the identity of the receiver for a chat message or a file transfer."
ymsg, Yahoo Messenger, chat_id, chat_idQ_PROTO_YMSG, bytes, "Window chat id."
ymsg, Yahoo Messenger, timestamp, timestampQ_PROTO_YMSG, string, "Packet timestamp."
ymsg, Yahoo Messenger, service, serviceQ_PROTO_YMSG, bytes, "Current service identification string."
ymsg, Yahoo Messenger, sessionid, sessionidQ_PROTO_YMSG, uint32, "Identification number of session."
ymsg, Yahoo Messenger, contact_login, contact_loginQ_PROTO_YMSG, bytes, "Contact login."
ymsg, Yahoo Messenger, client_firstname, client_firstnameQ_PROTO_YMSG, bytes, "First name of the user."
ymsg, Yahoo Messenger, client_lastname, client_lastnameQ_PROTO_YMSG, bytes, "Last name of the user."
ymsg, Yahoo Messenger, client_country, client_countryQ_PROTO_YMSG, bytes, "Country of the user."
ymsg, Yahoo Messenger, channel, channelQ_PROTO_YMSG, bytes, "Chat room name."
ymsg, Yahoo Messenger, file_sender, file_senderQ_PROTO_YMSG, bytes, "Contains the identity of the sender of a file transfer."
ymsg, Yahoo Messenger, file_receiver, file_receiverQ_PROTO_YMSG, bytes, "Contains the identity of the receiver for a file transfer."
ymsg, Yahoo Messenger, file_url, file_urlQ_PROTO_YMSG, bytes, "URL of the tranfered file."
ymsg, Yahoo Messenger, filename, filenameQ_PROTO_YMSG, bytes, "Name of the transferred file."
ymsg, Yahoo Messenger, filesize, filesizeQ_PROTO_YMSG, uint32, "Size (byte) of the transferred file."
ymsg, Yahoo Messenger, filehash, filehashQ_PROTO_YMSG, bytes, "Hash of transferred file."
ymsg, Yahoo Messenger, client_local_ip, client_local_ipQ_PROTO_YMSG, string, "Client local ip."
ymsg, Yahoo Messenger, channel_name, channel_nameQ_PROTO_YMSG, bytes, "Channel name"
ymsg, Yahoo Messenger, channel_action, channel_actionQ_PROTO_YMSG, bytes, "Action associated to a channel"
ymsg, Yahoo Messenger, channel_user, channel_userQ_PROTO_YMSG, bytes, "User associated to an action on a channel"
ymsg, Yahoo Messenger, client_ip, client_ipQ_PROTO_YMSG, string, "User IP address."
ymsg, Yahoo Messenger, server_ip, server_ipQ_PROTO_YMSG, string, "Server IP address."
ymsg, Yahoo Messenger, call_duration, call_durationQ_PROTO_YMSG, string, "Call duration."
ymsg, Yahoo Messenger, transfer_id, transfer_idQ_PROTO_YMSG, bytes, "Transfer identifier."
ymsg, Yahoo Messenger, webcam_brand, webcam_brandQ_PROTO_YMSG, bytes, "Webcam brand."
ymsg, Yahoo Messenger, conference_id, conference_idQ_PROTO_YMSG, bytes, "room identifier for a given conference"
ymsg_conf, Yahoo Messenger conference service, login, loginQ_PROTO_YMSG_CONF, bytes, "User's login string."
ymsg_conf, Yahoo Messenger conference service, caller, callerQ_PROTO_YMSG_CONF, bytes, "Contains the identity (or the phone number) of the initiator of the call."
ymsg_conf, Yahoo Messenger conference service, call_duration, call_durationQ_PROTO_YMSG_CONF, string, "Call duration."
ymsg_transfer, Yahoo Messenger Transfer Protocol, login, loginQ_PROTO_YMSG_TRANSFER, bytes, "User's login string."
ymsg_transfer, Yahoo Messenger Transfer Protocol, file_sender, file_senderQ_PROTO_YMSG_TRANSFER, bytes, "Contains the identity of the sender of a file transfer."
ymsg_transfer, Yahoo Messenger Transfer Protocol, file_receiver, file_receiverQ_PROTO_YMSG_TRANSFER, bytes, "Contains the identity of the receiver for a file transfer."
ymsg_transfer, Yahoo Messenger Transfer Protocol, filename, filenameQ_PROTO_YMSG_TRANSFER, bytes, "Name of the transferred file."
ymsg_transfer, Yahoo Messenger Transfer Protocol, filehash, filehashQ_PROTO_YMSG_TRANSFER, bytes, "File hash. This attribute is deprecated."
ymsg_transfer, Yahoo Messenger Transfer Protocol, filesize, filesizeQ_PROTO_YMSG_TRANSFER, uint32, "Size (byte) of the transferred file."
ymsg_transfer, Yahoo Messenger Transfer Protocol, file_url, file_urlQ_PROTO_YMSG_TRANSFER, bytes, "URL of the transferred file."
ymsg_transfer, Yahoo Messenger Transfer Protocol, file_identifier, file_identifierQ_PROTO_YMSG_TRANSFER, bytes, "File identifier. This attribute is deprecated."
ymsg_transfer, Yahoo Messenger Transfer Protocol, client_ip, client_ipQ_PROTO_YMSG_TRANSFER, string, "User IP address."
ymsg_transfer, Yahoo Messenger Transfer Protocol, server_ip, server_ipQ_PROTO_YMSG_TRANSFER, string, "Server IP address."
ymsg_video, Yahoo Messenger Video, login, loginQ_PROTO_YMSG_VIDEO, bytes, "User's login string."
ymsg_video, Yahoo Messenger Video, webcam_brand, webcam_brandQ_PROTO_YMSG_VIDEO, bytes, "Brand of webcam."
ymsg_webmessenger, Yahoo Webmessenger, sessionid, sessionidQ_PROTO_YMSG_WEBMESSENGER, bytes, "Identification number of session."
ymsg_webmessenger, Yahoo Webmessenger, login, loginQ_PROTO_YMSG_WEBMESSENGER, bytes, "User's login string."
ymsg_webmessenger, Yahoo Webmessenger, version, versionQ_PROTO_YMSG_WEBMESSENGER, bytes, "Version number."
ymsg_webmessenger, Yahoo Webmessenger, message, messageQ_PROTO_YMSG_WEBMESSENGER, bytes, "Contains the chat message."
ymsg_webmessenger, Yahoo Webmessenger, receiver, receiverQ_PROTO_YMSG_WEBMESSENGER, bytes, "Contains the identity of the receiver for a chat message or a file transfer."
ymsg_webmessenger, Yahoo Webmessenger, sender, senderQ_PROTO_YMSG_WEBMESSENGER, bytes, "Contains the identity of the sender of a chat session or a file transfer."
ymsg_webmessenger, Yahoo Webmessenger, contact_firstname, contact_firstnameQ_PROTO_YMSG_WEBMESSENGER, bytes, "Contact first name."
ymsg_webmessenger, Yahoo Webmessenger, contact_lastname, contact_lastnameQ_PROTO_YMSG_WEBMESSENGER, bytes, "Contact last name."
ymsg_webmessenger, Yahoo Webmessenger, contact_login, contact_loginQ_PROTO_YMSG_WEBMESSENGER, bytes, "Contact login."
ymsg_webmessenger, Yahoo Webmessenger, contact_name, contact_nameQ_PROTO_YMSG_WEBMESSENGER, bytes, "Contact name."
ymsg_webmessenger, Yahoo Webmessenger, service, serviceQ_PROTO_YMSG_WEBMESSENGER, bytes, "Current service identification string."
ymsg_webmessenger, Yahoo Webmessenger, msg_code, msg_codeQ_PROTO_YMSG_WEBMESSENGER, bytes, "Contains the number of YMSG command."
youtube, Youtube.com, login, loginQ_PROTO_YOUTUBE, bytes, "User's login string."
youtube, Youtube.com, password, passwordQ_PROTO_YOUTUBE, bytes, "User's password string."
youtube, Youtube.com, query_text, query_textQ_PROTO_YOUTUBE, bytes, "Query sent to the search engine."
youtube, Youtube.com, query_raw, query_rawQ_PROTO_YOUTUBE, bytes, "Contains the query sent to the search engine as indicated in the URL."
youtube, Youtube.com, url, urlQ_PROTO_YOUTUBE, bytes, "Contains the url for embedded players"
youtube, Youtube.com, name, nameQ_PROTO_YOUTUBE, bytes, "Name the user."
youtube, Youtube.com, date, dateQ_PROTO_YOUTUBE, bytes, "Message date."
youtube, Youtube.com, description, descriptionQ_PROTO_YOUTUBE, bytes, "Contains video description"
youtube, Youtube.com, tags, tagsQ_PROTO_YOUTUBE, bytes, "Contains the tag list linked to the video"
youtube, Youtube.com, videoid, videoidQ_PROTO_YOUTUBE, bytes, "Contains the unique identifier of the uploaded video"
youtube, Youtube.com, title, titleQ_PROTO_YOUTUBE, bytes, "Contains the video title"
youtube, Youtube.com, nameviewer, nameviewerQ_PROTO_YOUTUBE, bytes, "Contains the name of the user watching the video"
youtube, Youtube.com, method, methodQ_PROTO_YOUTUBE, bytes, "Contains the method used"
youtube, Youtube.com, video_duration, video_durationQ_PROTO_YOUTUBE, uint32, "Duration of the video in seconds."
youtube, Youtube.com, video_width, video_widthQ_PROTO_YOUTUBE, uint32, "Width of the video in pixels."
youtube, Youtube.com, video_height, video_heightQ_PROTO_YOUTUBE, uint32, "Height of the video in pixels."
youtube, Youtube.com, video_datarate, video_datarateQ_PROTO_YOUTUBE, uint32, "Video bitrate in kilobits per second."
youtube, Youtube.com, audio_datarate, audio_datarateQ_PROTO_YOUTUBE, uint32, "Audio bitrate in kilobits per second."
youtube, Youtube.com, video_framerate, video_framerateQ_PROTO_YOUTUBE, uint32, "Number of frames per second."
youtube, Youtube.com, start_time, start_timeQ_PROTO_YOUTUBE, uint32, "Start date of the call."
youtube, Youtube.com, video_totalduration, video_totaldurationQ_PROTO_YOUTUBE, uint32, "Total duration of the video in seconds (not extracted)."
youtube, Youtube.com, total_datarate, total_datarateQ_PROTO_YOUTUBE, uint32, "Sum of video and audio datarates."
youtube, Youtube.com, video_type, video_typeQ_PROTO_YOUTUBE, bytes, "File format."
youtube, Youtube.com, video_avgdatarate, video_avgdatarateQ_PROTO_YOUTUBE, uint32, "Average video bitrate in kilobits per second."
zimbra, Zimbra.com, login, loginQ_PROTO_ZIMBRA, bytes, "User's login string."
zimbra, Zimbra.com, password, passwordQ_PROTO_ZIMBRA, bytes, "User's password string."
zimbra, Zimbra.com, msglist_sender, msglist_senderQ_PROTO_ZIMBRA, bytes, "Full address of email sender (alias and email address)."
zimbra, Zimbra.com, msglist_sender_alias, msglist_sender_aliasQ_PROTO_ZIMBRA, bytes, "Name of email sender."
zimbra, Zimbra.com, msglist_sender_email, msglist_sender_emailQ_PROTO_ZIMBRA, bytes, "Address of email sender."
zimbra, Zimbra.com, msglist_receiver, msglist_receiverQ_PROTO_ZIMBRA, bytes, "Full address of email receiver in a message list."
zimbra, Zimbra.com, msglist_receiver_alias, msglist_receiver_aliasQ_PROTO_ZIMBRA, bytes, "Name of email receiver."
zimbra, Zimbra.com, msglist_receiver_email, msglist_receiver_emailQ_PROTO_ZIMBRA, bytes, "Email address of the email receiver."
zimbra, Zimbra.com, msglist_subject, msglist_subjectQ_PROTO_ZIMBRA, bytes, "Message subject in a message list."
zimbra, Zimbra.com, msglist_date, msglist_dateQ_PROTO_ZIMBRA, bytes, "Message date in a message list."
zimbra, Zimbra.com, msglist_folder, msglist_folderQ_PROTO_ZIMBRA, bytes, "Indicates the directory from a message list."
zimbra, Zimbra.com, sender, senderQ_PROTO_ZIMBRA, bytes, "Full address of email sender (alias followed by email address)."
zimbra, Zimbra.com, sender_email, sender_emailQ_PROTO_ZIMBRA, bytes, "Email address of the email sender."
zimbra, Zimbra.com, sender_alias, sender_aliasQ_PROTO_ZIMBRA, bytes, "Name of the email sender."
zimbra, Zimbra.com, receiver, receiverQ_PROTO_ZIMBRA, bytes, "Full address of email receiver (including cc and bcc receivers)."
zimbra, Zimbra.com, receiver_alias, receiver_aliasQ_PROTO_ZIMBRA, bytes, "Name of email receiver (included cc and bcc receivers)."
zimbra, Zimbra.com, receiver_email, receiver_emailQ_PROTO_ZIMBRA, bytes, "Email address of message receiver (included cc and bcc receivers)."
zimbra, Zimbra.com, receiver_type, receiver_typeQ_PROTO_ZIMBRA, bytes, "Type of the email receiver."
zimbra, Zimbra.com, date, dateQ_PROTO_ZIMBRA, bytes, "Message date."
zimbra, Zimbra.com, subject, subjectQ_PROTO_ZIMBRA, bytes, "Message subject."
zimbra, Zimbra.com, msg_id, msg_idQ_PROTO_ZIMBRA, bytes, "Identifier of the message."
zimbra, Zimbra.com, attach_id, attach_idQ_PROTO_ZIMBRA, bytes, "Attachment identifier."
zimbra, Zimbra.com, attach_filename, attach_filenameQ_PROTO_ZIMBRA, bytes, "Attachment name."
zimbra, Zimbra.com, attach_type, attach_typeQ_PROTO_ZIMBRA, bytes, "Content type of the sent attached file."
zimbra, Zimbra.com, attach_size, attach_sizeQ_PROTO_ZIMBRA, uint32, "Attached file MIME size."
zimbra, Zimbra.com, action, actionQ_PROTO_ZIMBRA, bytes, "Indicates if the message is read (Read) or composed (Compose)."
zimbra, Zimbra.com, draft, draftQ_PROTO_ZIMBRA, uint32, "Indicates if the email is a draft or has really been posted"
zimbra, Zimbra.com, contact_email, contact_emailQ_PROTO_ZIMBRA, bytes, "Email address of a contact."
zimbra, Zimbra.com, contact_alias, contact_aliasQ_PROTO_ZIMBRA, bytes, "Alias of a contact."
zimbra_standard, Zimbra Webmail Standard Version, msglist_date, msglist_dateQ_PROTO_ZIMBRA_STANDARD, bytes, "Message date in a message list."
zimbra_standard, Zimbra Webmail Standard Version, msglist_subject, msglist_subjectQ_PROTO_ZIMBRA_STANDARD, bytes, "Message subject in a message list."
zimbra_standard, Zimbra Webmail Standard Version, msglist_sender_alias, msglist_sender_aliasQ_PROTO_ZIMBRA_STANDARD, bytes, "Name of email sender."
zimbra_standard, Zimbra Webmail Standard Version, msglist_receiver_alias, msglist_receiver_aliasQ_PROTO_ZIMBRA_STANDARD, bytes, "Name of email receiver."
zimbra_standard, Zimbra Webmail Standard Version, msglist_folder, msglist_folderQ_PROTO_ZIMBRA_STANDARD, bytes, "Indicates the directory from a message list."
zimbra_standard, Zimbra Webmail Standard Version, msg_id, msg_idQ_PROTO_ZIMBRA_STANDARD, bytes, "Identifier of the message."
zimbra_standard, Zimbra Webmail Standard Version, draft, draftQ_PROTO_ZIMBRA_STANDARD, uint32, "Indicates if the email is a draft or has really been posted"
zimbra_standard, Zimbra Webmail Standard Version, sender_alias, sender_aliasQ_PROTO_ZIMBRA_STANDARD, bytes, "Name of the email sender."
zimbra_standard, Zimbra Webmail Standard Version, sender_email, sender_emailQ_PROTO_ZIMBRA_STANDARD, bytes, "Email address of the email sender."
zimbra_standard, Zimbra Webmail Standard Version, sender, senderQ_PROTO_ZIMBRA_STANDARD, bytes, "Full address of email sender (alias followed by email address)."
zimbra_standard, Zimbra Webmail Standard Version, attach_type, attach_typeQ_PROTO_ZIMBRA_STANDARD, bytes, "Content type of the sent attached file."
zimbra_standard, Zimbra Webmail Standard Version, receiver_type, receiver_typeQ_PROTO_ZIMBRA_STANDARD, bytes, "Type of the email receiver."
zimbra_standard, Zimbra Webmail Standard Version, receiver_alias, receiver_aliasQ_PROTO_ZIMBRA_STANDARD, bytes, "Name of email receiver (included cc and bcc receivers)."
zimbra_standard, Zimbra Webmail Standard Version, receiver_email, receiver_emailQ_PROTO_ZIMBRA_STANDARD, bytes, "Email address of message receiver (included cc and bcc receivers)."
zimbra_standard, Zimbra Webmail Standard Version, receiver, receiverQ_PROTO_ZIMBRA_STANDARD, bytes, "Full address of email receiver (including cc and bcc receivers)."
zimbra_standard, Zimbra Webmail Standard Version, attach_id, attach_idQ_PROTO_ZIMBRA_STANDARD, bytes, "Attachment identifier."
zimbra_standard, Zimbra Webmail Standard Version, attach_size, attach_sizeQ_PROTO_ZIMBRA_STANDARD, uint32, "Attached file MIME size."
zimbra_standard, Zimbra Webmail Standard Version, attach_filename, attach_filenameQ_PROTO_ZIMBRA_STANDARD, bytes, "Attachment name."
zimbra_standard, Zimbra Webmail Standard Version, subject, subjectQ_PROTO_ZIMBRA_STANDARD, bytes, "Message subject."
zimbra_standard, Zimbra Webmail Standard Version, action, actionQ_PROTO_ZIMBRA_STANDARD, bytes, "Indicates if the message is read (Read) or composed (Compose)."
zimbra_standard, Zimbra Webmail Standard Version, login, loginQ_PROTO_ZIMBRA_STANDARD, bytes, "User's login string."
zimbra_standard, Zimbra Webmail Standard Version, contact_alias, contact_aliasQ_PROTO_ZIMBRA_STANDARD, bytes, "Alias of a contact."
zimbra_standard, Zimbra Webmail Standard Version, contact_email, contact_emailQ_PROTO_ZIMBRA_STANDARD, bytes, "Email address of a contact."
zimbra_standard, Zimbra Webmail Standard Version, contact, contactQ_PROTO_ZIMBRA_STANDARD, bytes, "Complete contact."
zimbra_standard, Zimbra Webmail Standard Version, date, dateQ_PROTO_ZIMBRA_STANDARD, bytes, "Message date."
zimbra_standard, Zimbra Webmail Standard Version, replyto, replytoQ_PROTO_ZIMBRA_STANDARD, bytes, "Email address to use in a reply for this message."
